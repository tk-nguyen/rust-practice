{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0","program":"C:\\Users\\Thai Nguyen\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","parking_lot","--edition=2018","C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=37f18b8a78e9b1cb","-C","extra-filename=-37f18b8a78e9b1cb","--out-dir","c:\\Cygwin\\home\\Thai Nguyen\\rust\\rust-practice\\target\\rls\\debug\\deps","-L","dependency=c:\\Cygwin\\home\\Thai Nguyen\\rust\\rust-practice\\target\\rls\\debug\\deps","--extern","lock_api=c:\\Cygwin\\home\\Thai Nguyen\\rust\\rust-practice\\target\\rls\\debug\\deps\\liblock_api-ef102ff5951d2729.rmeta","--extern","parking_lot_core=c:\\Cygwin\\home\\Thai Nguyen\\rust\\rust-practice\\target\\rls\\debug\\deps\\libparking_lot_core-6915914871e7af8a.rmeta","--cap-lints","allow","--cfg","has_sized_atomics","--cfg","has_checked_instant","--error-format=json","--sysroot","C:\\Users\\Thai Nguyen\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Cygwin\\home\\Thai Nguyen\\rust\\rust-practice\\target\\rls\\debug\\deps\\libparking_lot-37f18b8a78e9b1cb.rmeta"},"prelude":{"crate_id":{"name":"parking_lot","disambiguator":[2813432257513110444,14852460121812398153]},"crate_root":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src","external_crates":[{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[2134305066550747688,1377703208702874155]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","num":2,"id":{"name":"core","disambiguator":[1322159461575500717,8297198428669169011]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2376346800744392852,12342541482992122530]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14946502858004023242,6637215598610016319]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5305136910335682758,6890491777619641650]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[8079093424489733033,9678018066858265018]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8191054904896780843,65190916132359678]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17454577518104061478,8473922882117178851]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14702801963282246562,3385633331338644346]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4483555191844012602,617965746000623535]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6496369475756502088,8603909216288097824]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[8790568169648576788,8899032378407077408]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","num":13,"id":{"name":"lock_api","disambiguator":[7461678365122562657,3055810590653219599]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","num":14,"id":{"name":"scopeguard","disambiguator":[7574500863296619831,7590357572507114848]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","num":15,"id":{"name":"parking_lot_core","disambiguator":[18087923115152654667,9069577894109028545]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","num":16,"id":{"name":"cfg_if","disambiguator":[7544656015345335973,11971359356886537393]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","num":17,"id":{"name":"rand","disambiguator":[9253570704101321601,14156760416332636137]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","num":18,"id":{"name":"rand_jitter","disambiguator":[4417154026567316121,11511083274066481171]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","num":19,"id":{"name":"rand_core","disambiguator":[18426334454148391097,4462136650038502569]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","num":20,"id":{"name":"winapi","disambiguator":[17645111927104215149,14036461411983102716]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","num":21,"id":{"name":"rand_os","disambiguator":[10108585000384908768,11567967621321737211]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","num":22,"id":{"name":"rand_isaac","disambiguator":[2114697171241723127,18279579590113569346]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","num":23,"id":{"name":"rand_core","disambiguator":[628906630943594879,17815459516816812508]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","num":24,"id":{"name":"rand_chacha","disambiguator":[2292296916067972522,3078831381185937782]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","num":25,"id":{"name":"rand_hc","disambiguator":[12404614223944309195,17388707763359884338]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","num":26,"id":{"name":"rand_pcg","disambiguator":[6578332611196610848,2882564092651380059]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","num":27,"id":{"name":"rand_xorshift","disambiguator":[16511988875398458176,9507190649817969955]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","num":28,"id":{"name":"smallvec","disambiguator":[17978777292392605715,10346866945395050101]}}],"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","byte_start":333,"byte_end":1366,"line_start":8,"line_end":42,"column_start":1,"column_end":3}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","byte_start":906,"byte_end":913,"line_start":31,"line_end":31,"column_start":25,"column_end":32},"alias_span":null,"name":"Condvar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","byte_start":915,"byte_end":932,"line_start":31,"line_end":31,"column_start":34,"column_end":51},"alias_span":null,"name":"WaitTimeoutResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","byte_start":957,"byte_end":973,"line_start":32,"line_end":32,"column_start":23,"column_end":39},"alias_span":null,"name":"MappedMutexGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","byte_start":975,"byte_end":980,"line_start":32,"line_end":32,"column_start":41,"column_end":46},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","byte_start":982,"byte_end":992,"line_start":32,"line_end":32,"column_start":48,"column_end":58},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","byte_start":1016,"byte_end":1020,"line_start":33,"line_end":33,"column_start":22,"column_end":26},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":414},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","byte_start":1022,"byte_end":1031,"line_start":33,"line_end":33,"column_start":28,"column_end":37},"alias_span":null,"name":"OnceState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","byte_start":1059,"byte_end":1067,"line_start":34,"line_end":34,"column_start":26,"column_end":34},"alias_span":null,"name":"RawMutex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","byte_start":1095,"byte_end":1104,"line_start":35,"line_end":35,"column_start":27,"column_end":36},"alias_span":null,"name":"RawRwLock","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":335},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","byte_start":1135,"byte_end":1160,"line_start":37,"line_end":37,"column_start":5,"column_end":30},"alias_span":null,"name":"MappedReentrantMutexGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":324},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","byte_start":1162,"byte_end":1173,"line_start":37,"line_end":37,"column_start":32,"column_end":43},"alias_span":null,"name":"RawThreadId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":325},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","byte_start":1162,"byte_end":1173,"line_start":37,"line_end":37,"column_start":32,"column_end":43},"alias_span":null,"name":"RawThreadId","value":"","parent":{"krate":0,"index":389}},{"kind":"Use","ref_id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","byte_start":1175,"byte_end":1189,"line_start":37,"line_end":37,"column_start":45,"column_end":59},"alias_span":null,"name":"ReentrantMutex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":332},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","byte_start":1191,"byte_end":1210,"line_start":37,"line_end":37,"column_start":61,"column_end":80},"alias_span":null,"name":"ReentrantMutexGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":349},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","byte_start":1243,"byte_end":1264,"line_start":40,"line_end":40,"column_start":5,"column_end":26},"alias_span":null,"name":"MappedRwLockReadGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":352},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","byte_start":1266,"byte_end":1288,"line_start":40,"line_end":40,"column_start":28,"column_end":50},"alias_span":null,"name":"MappedRwLockWriteGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":341},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","byte_start":1290,"byte_end":1296,"line_start":40,"line_end":40,"column_start":52,"column_end":58},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","byte_start":1298,"byte_end":1313,"line_start":40,"line_end":40,"column_start":60,"column_end":75},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":355},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","byte_start":1319,"byte_end":1344,"line_start":41,"line_end":41,"column_start":5,"column_end":30},"alias_span":null,"name":"RwLockUpgradableReadGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":346},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","byte_start":1346,"byte_end":1362,"line_start":41,"line_end":41,"column_start":32,"column_end":48},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","byte_start":333,"byte_end":1366,"line_start":8,"line_end":42,"column_start":1,"column_end":3},"name":"","qualname":"::","value":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":56},{"krate":0,"index":67},{"krate":0,"index":78},{"krate":0,"index":127},{"krate":0,"index":179},{"krate":0,"index":319},{"krate":0,"index":338},{"krate":0,"index":358},{"krate":0,"index":371},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":628},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398}],"decl_id":null,"docs":" This library provides implementations of `Mutex`, `RwLock`, `Condvar` and\n `Once` that are smaller, faster and more flexible than those in the Rust\n standard library. It also provides a `ReentrantMutex` type.\n","sig":null,"attributes":[{"value":"/ This library provides implementations of `Mutex`, `RwLock`, `Condvar` and","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","byte_start":333,"byte_end":410,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ `Once` that are smaller, faster and more flexible than those in the Rust","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","byte_start":411,"byte_end":487,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ standard library. It also provides a `ReentrantMutex` type.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","byte_start":488,"byte_end":551,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","byte_start":553,"byte_end":575,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\lib.rs","byte_start":576,"byte_end":602,"line_start":13,"line_end":13,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":2220,"byte_end":2237,"line_start":22,"line_end":22,"column_start":12,"column_end":29},"name":"WaitTimeoutResult","qualname":"::condvar::WaitTimeoutResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type indicating whether a timed wait on a condition variable returned\n due to a time out or not.\n","sig":null,"attributes":[{"value":"/ A type indicating whether a timed wait on a condition variable returned","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":2058,"byte_end":2133,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/ due to a time out or not.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":2134,"byte_end":2163,"line_start":20,"line_end":20,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":2358,"byte_end":2367,"line_start":27,"line_end":27,"column_start":12,"column_end":21},"name":"timed_out","qualname":"<WaitTimeoutResult>::timed_out","value":"pub fn timed_out(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the wait was known to have timed out.\n","sig":null,"attributes":[{"value":"/ Returns whether the wait was known to have timed out.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":2275,"byte_end":2332,"line_start":25,"line_end":25,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":2337,"byte_end":2346,"line_start":26,"line_end":26,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":4518,"byte_end":4525,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"name":"Condvar","qualname":"::condvar::Condvar","value":"Condvar {  }","parent":null,"children":[{"krate":0,"index":31}],"decl_id":null,"docs":" A Condition Variable","sig":null,"attributes":[{"value":"/ A Condition Variable","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":2409,"byte_end":2433,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":2434,"byte_end":2437,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Condition variables represent the ability to block a thread such that it","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":2438,"byte_end":2514,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ consumes no CPU time while waiting for an event to occur. Condition","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":2515,"byte_end":2586,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"/ variables are typically associated with a boolean predicate (a condition)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":2587,"byte_end":2664,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ and a mutex. The predicate is always verified inside of the mutex before","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":2665,"byte_end":2741,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"/ determining that thread must block.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":2742,"byte_end":2781,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":2782,"byte_end":2785,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Note that this module places one additional restriction over the system","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":2786,"byte_end":2861,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ condition variables: each condvar can be used with only one mutex at a","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":2862,"byte_end":2936,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/ time. Any attempt to use multiple mutexes on the same condition variable","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":2937,"byte_end":3013,"line_start":42,"line_end":42,"column_start":1,"column_end":77}},{"value":"/ simultaneously will result in a runtime panic. However it is possible to","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":3014,"byte_end":3090,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/ switch to a different mutex if there are no threads currently waiting on","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":3091,"byte_end":3167,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/ the condition variable.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":3168,"byte_end":3195,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":3196,"byte_end":3199,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Differences from the standard library `Condvar`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":3200,"byte_end":3253,"line_start":47,"line_end":47,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":3254,"byte_end":3257,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ - No spurious wakeups: A wait will only return a non-timeout result if it","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":3258,"byte_end":3335,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/   was woken up by `notify_one` or `notify_all`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":3336,"byte_end":3387,"line_start":50,"line_end":50,"column_start":1,"column_end":52}},{"value":"/ - `Condvar::notify_all` will only wake up a single thread, the rest are","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":3388,"byte_end":3463,"line_start":51,"line_end":51,"column_start":1,"column_end":76}},{"value":"/   requeued to wait for the `Mutex` to be unlocked by the thread that was","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":3464,"byte_end":3540,"line_start":52,"line_end":52,"column_start":1,"column_end":77}},{"value":"/   woken up.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":3541,"byte_end":3556,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/ - Only requires 1 word of space, whereas the standard library boxes the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":3557,"byte_end":3632,"line_start":54,"line_end":54,"column_start":1,"column_end":76}},{"value":"/   `Condvar` due to platform limitations.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":3633,"byte_end":3677,"line_start":55,"line_end":55,"column_start":1,"column_end":45}},{"value":"/ - Can be statically constructed (requires the `const_fn` nightly feature).","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":3678,"byte_end":3756,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ - Does not require any drop glue when dropped.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":3757,"byte_end":3807,"line_start":57,"line_end":57,"column_start":1,"column_end":51}},{"value":"/ - Inline fast path for the uncontended case.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":3808,"byte_end":3856,"line_start":58,"line_end":58,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":3857,"byte_end":3860,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":3861,"byte_end":3875,"line_start":60,"line_end":60,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":3876,"byte_end":3879,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":3880,"byte_end":3887,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ use parking_lot::{Mutex, Condvar};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":3888,"byte_end":3926,"line_start":63,"line_end":63,"column_start":1,"column_end":39}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":3927,"byte_end":3950,"line_start":64,"line_end":64,"column_start":1,"column_end":24}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":3951,"byte_end":3971,"line_start":65,"line_end":65,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":3972,"byte_end":3975,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ let pair = Arc::new((Mutex::new(false), Condvar::new()));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":3976,"byte_end":4037,"line_start":67,"line_end":67,"column_start":1,"column_end":62}},{"value":"/ let pair2 = pair.clone();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":4038,"byte_end":4067,"line_start":68,"line_end":68,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":4068,"byte_end":4071,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // Inside of our lock, spawn a new thread, and then wait for it to start","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":4072,"byte_end":4148,"line_start":70,"line_end":70,"column_start":1,"column_end":77}},{"value":"/ thread::spawn(move|| {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":4149,"byte_end":4175,"line_start":71,"line_end":71,"column_start":1,"column_end":27}},{"value":"/     let &(ref lock, ref cvar) = &*pair2;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":4176,"byte_end":4220,"line_start":72,"line_end":72,"column_start":1,"column_end":45}},{"value":"/     let mut started = lock.lock();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":4221,"byte_end":4259,"line_start":73,"line_end":73,"column_start":1,"column_end":39}},{"value":"/     *started = true;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":4260,"byte_end":4284,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/     cvar.notify_one();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":4285,"byte_end":4311,"line_start":75,"line_end":75,"column_start":1,"column_end":27}},{"value":"/ });","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":4312,"byte_end":4319,"line_start":76,"line_end":76,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":4320,"byte_end":4323,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ // wait for the thread to start up","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":4324,"byte_end":4362,"line_start":78,"line_end":78,"column_start":1,"column_end":39}},{"value":"/ let &(ref lock, ref cvar) = &*pair;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":4363,"byte_end":4402,"line_start":79,"line_end":79,"column_start":1,"column_end":40}},{"value":"/ let mut started = lock.lock();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":4403,"byte_end":4437,"line_start":80,"line_end":80,"column_start":1,"column_end":35}},{"value":"/ while !*started {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":4438,"byte_end":4459,"line_start":81,"line_end":81,"column_start":1,"column_end":22}},{"value":"/     cvar.wait(&mut started);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":4460,"byte_end":4492,"line_start":82,"line_end":82,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":4493,"byte_end":4498,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":4499,"byte_end":4506,"line_start":84,"line_end":84,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":4703,"byte_end":4706,"line_start":93,"line_end":93,"column_start":18,"column_end":21},"name":"new","qualname":"<Condvar>::new","value":"pub const fn new() -> Condvar","parent":null,"children":[],"decl_id":null,"docs":" Creates a new condition variable which is ready to be waited on and\n notified.\n","sig":null,"attributes":[{"value":"/ Creates a new condition variable which is ready to be waited on and","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":4582,"byte_end":4653,"line_start":90,"line_end":90,"column_start":5,"column_end":76}},{"value":"/ notified.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":4658,"byte_end":4671,"line_start":91,"line_end":91,"column_start":5,"column_end":18}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":4676,"byte_end":4685,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":5532,"byte_end":5542,"line_start":123,"line_end":123,"column_start":12,"column_end":22},"name":"notify_one","qualname":"<Condvar>::notify_one","value":"pub fn notify_one(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Wakes up one blocked thread on this condvar.","sig":null,"attributes":[{"value":"/ Wakes up one blocked thread on this condvar.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":4813,"byte_end":4861,"line_start":99,"line_end":99,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":4866,"byte_end":4869,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ Returns whether a thread was woken up.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":4874,"byte_end":4916,"line_start":101,"line_end":101,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":4921,"byte_end":4924,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ If there is a blocked thread on this condition variable, then it will","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":4929,"byte_end":5002,"line_start":103,"line_end":103,"column_start":5,"column_end":78}},{"value":"/ be woken up from its call to `wait` or `wait_timeout`. Calls to","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":5007,"byte_end":5074,"line_start":104,"line_end":104,"column_start":5,"column_end":72}},{"value":"/ `notify_one` are not buffered in any way.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":5079,"byte_end":5124,"line_start":105,"line_end":105,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":5129,"byte_end":5132,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ To wake up all threads, see `notify_all()`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":5137,"byte_end":5184,"line_start":107,"line_end":107,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":5189,"byte_end":5192,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":5197,"byte_end":5211,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":5216,"byte_end":5219,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":5224,"byte_end":5231,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"/ use parking_lot::Condvar;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":5236,"byte_end":5265,"line_start":112,"line_end":112,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":5270,"byte_end":5273,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ let condvar = Condvar::new();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":5278,"byte_end":5311,"line_start":114,"line_end":114,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":5316,"byte_end":5319,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ // do something with condvar, share it with other threads","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":5324,"byte_end":5385,"line_start":116,"line_end":116,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":5390,"byte_end":5393,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ if !condvar.notify_one() {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":5398,"byte_end":5428,"line_start":118,"line_end":118,"column_start":5,"column_end":35}},{"value":"/     println!(\"Nobody was listening for this.\");","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":5433,"byte_end":5484,"line_start":119,"line_end":119,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":5489,"byte_end":5494,"line_start":120,"line_end":120,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":5499,"byte_end":5506,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":5511,"byte_end":5520,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":8016,"byte_end":8026,"line_start":185,"line_end":185,"column_start":12,"column_end":22},"name":"notify_all","qualname":"<Condvar>::notify_all","value":"pub fn notify_all(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Wakes up all blocked threads on this condvar.","sig":null,"attributes":[{"value":"/ Wakes up all blocked threads on this condvar.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":7649,"byte_end":7698,"line_start":175,"line_end":175,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":7703,"byte_end":7706,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Returns the number of threads woken up.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":7711,"byte_end":7754,"line_start":177,"line_end":177,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":7759,"byte_end":7762,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ This method will ensure that any current waiters on the condition","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":7767,"byte_end":7836,"line_start":179,"line_end":179,"column_start":5,"column_end":74}},{"value":"/ variable are awoken. Calls to `notify_all()` are not buffered in any","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":7841,"byte_end":7913,"line_start":180,"line_end":180,"column_start":5,"column_end":77}},{"value":"/ way.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":7918,"byte_end":7926,"line_start":181,"line_end":181,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":7931,"byte_end":7934,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ To wake up only one thread, see `notify_one()`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":7939,"byte_end":7990,"line_start":183,"line_end":183,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":7995,"byte_end":8004,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":11060,"byte_end":11064,"line_start":256,"line_end":256,"column_start":12,"column_end":16},"name":"wait","qualname":"<Condvar>::wait","value":"pub fn wait<T: ?Sized>(&Self, &mut MutexGuard<, T>)","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread until this condition variable receives a\n notification.","sig":null,"attributes":[{"value":"/ Blocks the current thread until this condition variable receives a","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":10411,"byte_end":10481,"line_start":242,"line_end":242,"column_start":5,"column_end":75}},{"value":"/ notification.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":10486,"byte_end":10503,"line_start":243,"line_end":243,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":10508,"byte_end":10511,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This function will atomically unlock the mutex specified (represented by","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":10516,"byte_end":10592,"line_start":245,"line_end":245,"column_start":5,"column_end":81}},{"value":"/ `mutex_guard`) and block the current thread. This means that any calls","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":10597,"byte_end":10671,"line_start":246,"line_end":246,"column_start":5,"column_end":79}},{"value":"/ to `notify_*()` which happen logically after the mutex is unlocked are","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":10676,"byte_end":10750,"line_start":247,"line_end":247,"column_start":5,"column_end":79}},{"value":"/ candidates to wake this thread up. When this function call returns, the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":10755,"byte_end":10830,"line_start":248,"line_end":248,"column_start":5,"column_end":80}},{"value":"/ lock specified will have been re-acquired.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":10835,"byte_end":10881,"line_start":249,"line_end":249,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":10886,"byte_end":10889,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":10894,"byte_end":10906,"line_start":251,"line_end":251,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":10911,"byte_end":10914,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ This function will panic if another thread is waiting on the `Condvar`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":10919,"byte_end":10993,"line_start":253,"line_end":253,"column_start":5,"column_end":79}},{"value":"/ with a different `Mutex` object.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":10998,"byte_end":11034,"line_start":254,"line_end":254,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":11039,"byte_end":11048,"line_start":255,"line_end":255,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":12339,"byte_end":12349,"line_start":284,"line_end":284,"column_start":12,"column_end":22},"name":"wait_until","qualname":"<Condvar>::wait_until","value":"pub fn wait_until<T: ?Sized>(&Self, &mut MutexGuard<, T>, Instant)\n-> WaitTimeoutResult","parent":null,"children":[],"decl_id":null,"docs":" Waits on this condition variable for a notification, timing out after\n the specified time instant.","sig":null,"attributes":[{"value":"/ Waits on this condition variable for a notification, timing out after","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":11222,"byte_end":11295,"line_start":260,"line_end":260,"column_start":5,"column_end":78}},{"value":"/ the specified time instant.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":11300,"byte_end":11331,"line_start":261,"line_end":261,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":11336,"byte_end":11339,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ The semantics of this function are equivalent to `wait()` except that","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":11344,"byte_end":11417,"line_start":263,"line_end":263,"column_start":5,"column_end":78}},{"value":"/ the thread will be blocked roughly until `timeout` is reached. This","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":11422,"byte_end":11493,"line_start":264,"line_end":264,"column_start":5,"column_end":76}},{"value":"/ method should not be used for precise timing due to anomalies such as","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":11498,"byte_end":11571,"line_start":265,"line_end":265,"column_start":5,"column_end":78}},{"value":"/ preemption or platform differences that may not cause the maximum","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":11576,"byte_end":11645,"line_start":266,"line_end":266,"column_start":5,"column_end":74}},{"value":"/ amount of time waited to be precisely `timeout`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":11650,"byte_end":11702,"line_start":267,"line_end":267,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":11707,"byte_end":11710,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ Note that the best effort is made to ensure that the time waited is","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":11715,"byte_end":11786,"line_start":269,"line_end":269,"column_start":5,"column_end":76}},{"value":"/ measured with a monotonic clock, and not affected by the changes made to","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":11791,"byte_end":11867,"line_start":270,"line_end":270,"column_start":5,"column_end":81}},{"value":"/ the system time.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":11872,"byte_end":11892,"line_start":271,"line_end":271,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":11897,"byte_end":11900,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ The returned `WaitTimeoutResult` value indicates if the timeout is","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":11905,"byte_end":11975,"line_start":273,"line_end":273,"column_start":5,"column_end":75}},{"value":"/ known to have elapsed.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":11980,"byte_end":12006,"line_start":274,"line_end":274,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":12011,"byte_end":12014,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Like `wait`, the lock specified will be re-acquired when this function","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":12019,"byte_end":12093,"line_start":276,"line_end":276,"column_start":5,"column_end":79}},{"value":"/ returns, regardless of whether the timeout elapsed or not.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":12098,"byte_end":12160,"line_start":277,"line_end":277,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":12165,"byte_end":12168,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":12173,"byte_end":12185,"line_start":279,"line_end":279,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":12190,"byte_end":12193,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ This function will panic if another thread is waiting on the `Condvar`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":12198,"byte_end":12272,"line_start":281,"line_end":281,"column_start":5,"column_end":79}},{"value":"/ with a different `Mutex` object.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":12277,"byte_end":12313,"line_start":282,"line_end":282,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":12318,"byte_end":12327,"line_start":283,"line_end":283,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":16743,"byte_end":16751,"line_start":388,"line_end":388,"column_start":12,"column_end":20},"name":"wait_for","qualname":"<Condvar>::wait_for","value":"pub fn wait_for<T: ?Sized>(&Self, &mut MutexGuard<, T>, Duration)\n-> WaitTimeoutResult","parent":null,"children":[],"decl_id":null,"docs":" Waits on this condition variable for a notification, timing out after a\n specified duration.","sig":null,"attributes":[{"value":"/ Waits on this condition variable for a notification, timing out after a","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":15493,"byte_end":15568,"line_start":363,"line_end":363,"column_start":5,"column_end":80}},{"value":"/ specified duration.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":15573,"byte_end":15596,"line_start":364,"line_end":364,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":15601,"byte_end":15604,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ The semantics of this function are equivalent to `wait()` except that","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":15609,"byte_end":15682,"line_start":366,"line_end":366,"column_start":5,"column_end":78}},{"value":"/ the thread will be blocked for roughly no longer than `timeout`. This","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":15687,"byte_end":15760,"line_start":367,"line_end":367,"column_start":5,"column_end":78}},{"value":"/ method should not be used for precise timing due to anomalies such as","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":15765,"byte_end":15838,"line_start":368,"line_end":368,"column_start":5,"column_end":78}},{"value":"/ preemption or platform differences that may not cause the maximum","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":15843,"byte_end":15912,"line_start":369,"line_end":369,"column_start":5,"column_end":74}},{"value":"/ amount of time waited to be precisely `timeout`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":15917,"byte_end":15969,"line_start":370,"line_end":370,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":15974,"byte_end":15977,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ Note that the best effort is made to ensure that the time waited is","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":15982,"byte_end":16053,"line_start":372,"line_end":372,"column_start":5,"column_end":76}},{"value":"/ measured with a monotonic clock, and not affected by the changes made to","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":16058,"byte_end":16134,"line_start":373,"line_end":373,"column_start":5,"column_end":81}},{"value":"/ the system time.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":16139,"byte_end":16159,"line_start":374,"line_end":374,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":16164,"byte_end":16167,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ The returned `WaitTimeoutResult` value indicates if the timeout is","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":16172,"byte_end":16242,"line_start":376,"line_end":376,"column_start":5,"column_end":75}},{"value":"/ known to have elapsed.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":16247,"byte_end":16273,"line_start":377,"line_end":377,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":16278,"byte_end":16281,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ Like `wait`, the lock specified will be re-acquired when this function","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":16286,"byte_end":16360,"line_start":379,"line_end":379,"column_start":5,"column_end":79}},{"value":"/ returns, regardless of whether the timeout elapsed or not.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":16365,"byte_end":16427,"line_start":380,"line_end":380,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":16432,"byte_end":16435,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":16440,"byte_end":16452,"line_start":382,"line_end":382,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":16457,"byte_end":16460,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ Panics if the given `timeout` is so large that it can't be added to the current time.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":16465,"byte_end":16554,"line_start":384,"line_end":384,"column_start":5,"column_end":94}},{"value":"/ This panic is not possible if the crate is built with the `nightly` feature, then a too","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":16559,"byte_end":16650,"line_start":385,"line_end":385,"column_start":5,"column_end":96}},{"value":"/ large `timeout` becomes equivalent to just calling `wait`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":16655,"byte_end":16717,"line_start":386,"line_end":386,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":16722,"byte_end":16731,"line_start":387,"line_end":387,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\elision.rs","byte_start":25281,"byte_end":25288,"line_start":12,"line_end":12,"column_start":10,"column_end":17},"name":"IntType","qualname":"::elision::AtomicElisionExt::IntType","value":"type IntType;","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":32156,"byte_end":32161,"line_start":88,"line_end":88,"column_start":10,"column_end":15},"name":"Mutex","qualname":"::mutex::Mutex","value":"lock_api::Mutex<RawMutex, T>","parent":null,"children":[],"decl_id":null,"docs":" A mutual exclusion primitive useful for protecting shared data","sig":null,"attributes":[{"value":"/ A mutual exclusion primitive useful for protecting shared data","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":28764,"byte_end":28830,"line_start":11,"line_end":11,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":28831,"byte_end":28834,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This mutex will block threads waiting for the lock to become available. The","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":28835,"byte_end":28914,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ mutex can also be statically initialized or created via a `new`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":28915,"byte_end":28982,"line_start":14,"line_end":14,"column_start":1,"column_end":68}},{"value":"/ constructor. Each mutex has a type parameter which represents the data that","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":28983,"byte_end":29062,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ it is protecting. The data can only be accessed through the RAII guards","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":29063,"byte_end":29138,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ returned from `lock` and `try_lock`, which guarantees that the data is only","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":29139,"byte_end":29218,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ ever accessed when the mutex is locked.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":29219,"byte_end":29262,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":29263,"byte_end":29266,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Fairness","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":29267,"byte_end":29281,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":29282,"byte_end":29285,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ A typical unfair lock can often end up in a situation where a single thread","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":29286,"byte_end":29365,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ quickly acquires and releases the same mutex in succession, which can starve","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":29366,"byte_end":29446,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ other threads waiting to acquire the mutex. While this improves performance","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":29447,"byte_end":29526,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ because it doesn't force a context switch when a thread tries to re-acquire","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":29527,"byte_end":29606,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ a mutex it has just released, this can starve other threads.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":29607,"byte_end":29671,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":29672,"byte_end":29675,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This mutex uses [eventual fairness](https://trac.webkit.org/changeset/203350)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":29676,"byte_end":29757,"line_start":28,"line_end":28,"column_start":1,"column_end":82}},{"value":"/ to ensure that the lock will be fair on average without sacrificing","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":29758,"byte_end":29829,"line_start":29,"line_end":29,"column_start":1,"column_end":72}},{"value":"/ performance. This is done by forcing a fair unlock on average every 0.5ms,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":29830,"byte_end":29908,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ which will force the lock to go to the next thread waiting for the mutex.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":29909,"byte_end":29986,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":29987,"byte_end":29990,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Additionally, any critical section longer than 1ms will always use a fair","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":29991,"byte_end":30068,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ unlock, which has a negligible performance impact compared to the length of","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":30069,"byte_end":30148,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ the critical section.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":30149,"byte_end":30174,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":30175,"byte_end":30178,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ You can also force a fair unlock by calling `MutexGuard::unlock_fair` when","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":30179,"byte_end":30257,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ unlocking a mutex instead of simply dropping the `MutexGuard`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":30258,"byte_end":30324,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":30325,"byte_end":30328,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Differences from the standard library `Mutex`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":30329,"byte_end":30380,"line_start":40,"line_end":40,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":30381,"byte_end":30384,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ - No poisoning, the lock is released normally on panic.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":30385,"byte_end":30444,"line_start":42,"line_end":42,"column_start":1,"column_end":60}},{"value":"/ - Only requires 1 byte of space, whereas the standard library boxes the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":30445,"byte_end":30520,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/   `Mutex` due to platform limitations.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":30521,"byte_end":30563,"line_start":44,"line_end":44,"column_start":1,"column_end":43}},{"value":"/ - Can be statically constructed (requires the `const_fn` nightly feature).","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":30564,"byte_end":30642,"line_start":45,"line_end":45,"column_start":1,"column_end":79}},{"value":"/ - Does not require any drop glue when dropped.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":30643,"byte_end":30693,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ - Inline fast path for the uncontended case.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":30694,"byte_end":30742,"line_start":47,"line_end":47,"column_start":1,"column_end":49}},{"value":"/ - Efficient handling of micro-contention using adaptive spinning.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":30743,"byte_end":30812,"line_start":48,"line_end":48,"column_start":1,"column_end":70}},{"value":"/ - Allows raw locking & unlocking without a guard.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":30813,"byte_end":30866,"line_start":49,"line_end":49,"column_start":1,"column_end":54}},{"value":"/ - Supports eventual fairness so that the mutex is fair on average.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":30867,"byte_end":30937,"line_start":50,"line_end":50,"column_start":1,"column_end":71}},{"value":"/ - Optionally allows making the mutex fair by calling `MutexGuard::unlock_fair`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":30938,"byte_end":31021,"line_start":51,"line_end":51,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":31022,"byte_end":31025,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":31026,"byte_end":31040,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":31041,"byte_end":31044,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":31045,"byte_end":31052,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":31053,"byte_end":31076,"line_start":56,"line_end":56,"column_start":1,"column_end":24}},{"value":"/ use parking_lot::Mutex;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":31077,"byte_end":31104,"line_start":57,"line_end":57,"column_start":1,"column_end":28}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":31105,"byte_end":31125,"line_start":58,"line_end":58,"column_start":1,"column_end":21}},{"value":"/ use std::sync::mpsc::channel;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":31126,"byte_end":31159,"line_start":59,"line_end":59,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":31160,"byte_end":31163,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ const N: usize = 10;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":31164,"byte_end":31188,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":31189,"byte_end":31192,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ // Spawn a few threads to increment a shared variable (non-atomically), and","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":31193,"byte_end":31272,"line_start":63,"line_end":63,"column_start":1,"column_end":80}},{"value":"/ // let the main thread know once all increments are done.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":31273,"byte_end":31334,"line_start":64,"line_end":64,"column_start":1,"column_end":62}},{"value":"/ //","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":31335,"byte_end":31341,"line_start":65,"line_end":65,"column_start":1,"column_end":7}},{"value":"/ // Here we're using an Arc to share memory among threads, and the data inside","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":31342,"byte_end":31423,"line_start":66,"line_end":66,"column_start":1,"column_end":82}},{"value":"/ // the Arc is protected with a mutex.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":31424,"byte_end":31465,"line_start":67,"line_end":67,"column_start":1,"column_end":42}},{"value":"/ let data = Arc::new(Mutex::new(0));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":31466,"byte_end":31505,"line_start":68,"line_end":68,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":31506,"byte_end":31509,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ let (tx, rx) = channel();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":31510,"byte_end":31539,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/ for _ in 0..10 {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":31540,"byte_end":31560,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"/     let (data, tx) = (Arc::clone(&data), tx.clone());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":31561,"byte_end":31618,"line_start":72,"line_end":72,"column_start":1,"column_end":58}},{"value":"/     thread::spawn(move || {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":31619,"byte_end":31650,"line_start":73,"line_end":73,"column_start":1,"column_end":32}},{"value":"/         // The shared state can only be accessed once the lock is held.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":31651,"byte_end":31726,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/         // Our non-atomic increment is safe because we're the only thread","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":31727,"byte_end":31804,"line_start":75,"line_end":75,"column_start":1,"column_end":78}},{"value":"/         // which can access the shared state when the lock is held.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":31805,"byte_end":31876,"line_start":76,"line_end":76,"column_start":1,"column_end":72}},{"value":"/         let mut data = data.lock();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":31877,"byte_end":31916,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/         *data += 1;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":31917,"byte_end":31940,"line_start":78,"line_end":78,"column_start":1,"column_end":24}},{"value":"/         if *data == N {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":31941,"byte_end":31968,"line_start":79,"line_end":79,"column_start":1,"column_end":28}},{"value":"/             tx.send(()).unwrap();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":31969,"byte_end":32006,"line_start":80,"line_end":80,"column_start":1,"column_end":38}},{"value":"/         }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":32007,"byte_end":32020,"line_start":81,"line_end":81,"column_start":1,"column_end":14}},{"value":"/         // the lock is unlocked here when `data` goes out of scope.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":32021,"byte_end":32092,"line_start":82,"line_end":82,"column_start":1,"column_end":72}},{"value":"/     });","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":32093,"byte_end":32104,"line_start":83,"line_end":83,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":32105,"byte_end":32110,"line_start":84,"line_end":84,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":32111,"byte_end":32114,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ rx.recv().unwrap();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":32115,"byte_end":32138,"line_start":86,"line_end":86,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":32139,"byte_end":32146,"line_start":87,"line_end":87,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":32476,"byte_end":32486,"line_start":95,"line_end":95,"column_start":10,"column_end":20},"name":"MutexGuard","qualname":"::mutex::MutexGuard","value":"lock_api::MutexGuard","parent":null,"children":[],"decl_id":null,"docs":" An RAII implementation of a \"scoped lock\" of a mutex. When this structure is\n dropped (falls out of scope), the lock will be unlocked.","sig":null,"attributes":[{"value":"/ An RAII implementation of a \"scoped lock\" of a mutex. When this structure is","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":32198,"byte_end":32278,"line_start":90,"line_end":90,"column_start":1,"column_end":81}},{"value":"/ dropped (falls out of scope), the lock will be unlocked.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":32279,"byte_end":32339,"line_start":91,"line_end":91,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":32340,"byte_end":32343,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ The data protected by the mutex can be accessed through this guard via its","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":32344,"byte_end":32422,"line_start":93,"line_end":93,"column_start":1,"column_end":79}},{"value":"/ `Deref` and `DerefMut` implementations.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":32423,"byte_end":32466,"line_start":94,"line_end":94,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":32910,"byte_end":32926,"line_start":104,"line_end":104,"column_start":10,"column_end":26},"name":"MappedMutexGuard","qualname":"::mutex::MappedMutexGuard","value":"lock_api::MappedMutexGuard","parent":null,"children":[],"decl_id":null,"docs":" An RAII mutex guard returned by `MutexGuard::map`, which can point to a\n subfield of the protected data.","sig":null,"attributes":[{"value":"/ An RAII mutex guard returned by `MutexGuard::map`, which can point to a","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":32536,"byte_end":32611,"line_start":97,"line_end":97,"column_start":1,"column_end":76}},{"value":"/ subfield of the protected data.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":32612,"byte_end":32647,"line_start":98,"line_end":98,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":32648,"byte_end":32651,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ The main difference between `MappedMutexGuard` and `MutexGuard` is that the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":32652,"byte_end":32731,"line_start":100,"line_end":100,"column_start":1,"column_end":80}},{"value":"/ former doesn't support temporarily unlocking and re-locking, since that","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":32732,"byte_end":32807,"line_start":101,"line_end":101,"column_start":1,"column_end":76}},{"value":"/ could introduce soundness issues if the locked object is modified by another","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":32808,"byte_end":32888,"line_start":102,"line_end":102,"column_start":1,"column_end":81}},{"value":"/ thread.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\mutex.rs","byte_start":32889,"byte_end":32900,"line_start":103,"line_end":103,"column_start":1,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":415},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":39235,"byte_end":39238,"line_start":33,"line_end":33,"column_start":5,"column_end":8},"name":"New","qualname":"::once::OnceState::New","value":"OnceState::New","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" A closure has not been executed yet\n","sig":null,"attributes":[{"value":"/ A closure has not been executed yet","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":39191,"byte_end":39230,"line_start":32,"line_end":32,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":417},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":39290,"byte_end":39298,"line_start":36,"line_end":36,"column_start":5,"column_end":13},"name":"Poisoned","qualname":"::once::OnceState::Poisoned","value":"OnceState::Poisoned","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" A closure was executed but panicked.\n","sig":null,"attributes":[{"value":"/ A closure was executed but panicked.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":39245,"byte_end":39285,"line_start":35,"line_end":35,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":419},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":39356,"byte_end":39366,"line_start":39,"line_end":39,"column_start":5,"column_end":15},"name":"InProgress","qualname":"::once::OnceState::InProgress","value":"OnceState::InProgress","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" A thread is currently executing a closure.\n","sig":null,"attributes":[{"value":"/ A thread is currently executing a closure.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":39305,"byte_end":39351,"line_start":38,"line_end":38,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":421},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":39419,"byte_end":39423,"line_start":42,"line_end":42,"column_start":5,"column_end":9},"name":"Done","qualname":"::once::OnceState::Done","value":"OnceState::Done","parent":{"krate":0,"index":414},"children":[],"decl_id":null,"docs":" A closure has completed successfully.\n","sig":null,"attributes":[{"value":"/ A closure has completed successfully.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":39373,"byte_end":39414,"line_start":41,"line_end":41,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":414},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":39175,"byte_end":39184,"line_start":31,"line_end":31,"column_start":10,"column_end":19},"name":"OnceState","qualname":"::once::OnceState","value":"pub enum OnceState {\n\n    /// A closure has not been executed yet\n    New,\n\n    /// A closure was executed but panicked.\n    Poisoned,\n\n    /// A thread is currently executing a closure.\n    InProgress,\n\n    /// A closure has completed successfully.\n    Done,\n}","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":417},{"krate":0,"index":419},{"krate":0,"index":421}],"decl_id":null,"docs":" Current state of a `Once`.\n","sig":null,"attributes":[{"value":"/ Current state of a `Once`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":39090,"byte_end":39120,"line_start":29,"line_end":29,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":39703,"byte_end":39711,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"poisoned","qualname":"<OnceState>::poisoned","value":"pub fn poisoned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the associated `Once` has been poisoned.","sig":null,"attributes":[{"value":"/ Returns whether the associated `Once` has been poisoned.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":39449,"byte_end":39509,"line_start":46,"line_end":46,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":39514,"byte_end":39517,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Once an initialization routine for a `Once` has panicked it will forever","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":39522,"byte_end":39598,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ indicate to future forced initialization routines that it is poisoned.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":39603,"byte_end":39677,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":39682,"byte_end":39691,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":39949,"byte_end":39953,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"done","qualname":"<OnceState>::done","value":"pub fn done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the associated `Once` has successfully executed a\n closure.\n","sig":null,"attributes":[{"value":"/ Returns whether the associated `Once` has successfully executed a","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":39837,"byte_end":39906,"line_start":58,"line_end":58,"column_start":5,"column_end":74}},{"value":"/ closure.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":39911,"byte_end":39923,"line_start":59,"line_end":59,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":39928,"byte_end":39937,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":40776,"byte_end":40780,"line_start":92,"line_end":92,"column_start":12,"column_end":16},"name":"Once","qualname":"::once::Once","value":"","parent":null,"children":[],"decl_id":null,"docs":" A synchronization primitive which can be used to run a one-time\n initialization. Useful for one-time initialization for globals, FFI or\n related functionality.","sig":null,"attributes":[{"value":"/ A synchronization primitive which can be used to run a one-time","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":40073,"byte_end":40140,"line_start":69,"line_end":69,"column_start":1,"column_end":68}},{"value":"/ initialization. Useful for one-time initialization for globals, FFI or","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":40141,"byte_end":40215,"line_start":70,"line_end":70,"column_start":1,"column_end":75}},{"value":"/ related functionality.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":40216,"byte_end":40242,"line_start":71,"line_end":71,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":40243,"byte_end":40246,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # Differences from the standard library `Once`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":40247,"byte_end":40297,"line_start":73,"line_end":73,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":40298,"byte_end":40301,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ - Only requires 1 byte of space, instead of 1 word.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":40302,"byte_end":40357,"line_start":75,"line_end":75,"column_start":1,"column_end":56}},{"value":"/ - Not required to be `'static`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":40358,"byte_end":40393,"line_start":76,"line_end":76,"column_start":1,"column_end":36}},{"value":"/ - Relaxed memory barriers in the fast path, which can significantly improve","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":40394,"byte_end":40473,"line_start":77,"line_end":77,"column_start":1,"column_end":80}},{"value":"/   performance on some architectures.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":40474,"byte_end":40514,"line_start":78,"line_end":78,"column_start":1,"column_end":41}},{"value":"/ - Efficient handling of micro-contention using adaptive spinning.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":40515,"byte_end":40584,"line_start":79,"line_end":79,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":40585,"byte_end":40588,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":40589,"byte_end":40603,"line_start":81,"line_end":81,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":40604,"byte_end":40607,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":40608,"byte_end":40615,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"/ use parking_lot::Once;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":40616,"byte_end":40642,"line_start":84,"line_end":84,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":40643,"byte_end":40646,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ static START: Once = Once::new();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":40647,"byte_end":40684,"line_start":86,"line_end":86,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":40685,"byte_end":40688,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ START.call_once(|| {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":40689,"byte_end":40713,"line_start":88,"line_end":88,"column_start":1,"column_end":25}},{"value":"/     // run initialization here","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":40714,"byte_end":40748,"line_start":89,"line_end":89,"column_start":1,"column_end":35}},{"value":"/ });","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":40749,"byte_end":40756,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":40757,"byte_end":40764,"line_start":91,"line_end":91,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":40872,"byte_end":40875,"line_start":97,"line_end":97,"column_start":18,"column_end":21},"name":"new","qualname":"<Once>::new","value":"pub const fn new() -> Once","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Once` value.\n","sig":null,"attributes":[{"value":"/ Creates a new `Once` value.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":40809,"byte_end":40840,"line_start":95,"line_end":95,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":40845,"byte_end":40854,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":41001,"byte_end":41006,"line_start":103,"line_end":103,"column_start":12,"column_end":17},"name":"state","qualname":"<Once>::state","value":"pub fn state(&Self) -> OnceState","parent":null,"children":[],"decl_id":null,"docs":" Returns the current state of this `Once`.\n","sig":null,"attributes":[{"value":"/ Returns the current state of this `Once`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":40930,"byte_end":40975,"line_start":101,"line_end":101,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":40980,"byte_end":40989,"line_start":102,"line_end":102,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":43279,"byte_end":43288,"line_start":166,"line_end":166,"column_start":12,"column_end":21},"name":"call_once","qualname":"<Once>::call_once","value":"pub fn call_once<F>(&Self, F) where F: FnOnce() -> ()","parent":null,"children":[],"decl_id":null,"docs":" Performs an initialization routine once and only once. The given closure\n will be executed if this is the first time `call_once` has been called,\n and otherwise the routine will *not* be invoked.","sig":null,"attributes":[{"value":"/ Performs an initialization routine once and only once. The given closure","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":41363,"byte_end":41439,"line_start":116,"line_end":116,"column_start":5,"column_end":81}},{"value":"/ will be executed if this is the first time `call_once` has been called,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":41444,"byte_end":41519,"line_start":117,"line_end":117,"column_start":5,"column_end":80}},{"value":"/ and otherwise the routine will *not* be invoked.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":41524,"byte_end":41576,"line_start":118,"line_end":118,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":41581,"byte_end":41584,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This method will block the calling thread if another initialization","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":41589,"byte_end":41660,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/ routine is currently running.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":41665,"byte_end":41698,"line_start":121,"line_end":121,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":41703,"byte_end":41706,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ When this function returns, it is guaranteed that some initialization","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":41711,"byte_end":41784,"line_start":123,"line_end":123,"column_start":5,"column_end":78}},{"value":"/ has run and completed (it may not be the closure specified). It is also","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":41789,"byte_end":41864,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ guaranteed that any memory writes performed by the executed closure can","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":41869,"byte_end":41944,"line_start":125,"line_end":125,"column_start":5,"column_end":80}},{"value":"/ be reliably observed by other threads at this point (there is a","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":41949,"byte_end":42016,"line_start":126,"line_end":126,"column_start":5,"column_end":72}},{"value":"/ happens-before relation between the closure and code executing after the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":42021,"byte_end":42097,"line_start":127,"line_end":127,"column_start":5,"column_end":81}},{"value":"/ return).","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":42102,"byte_end":42114,"line_start":128,"line_end":128,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":42119,"byte_end":42122,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":42127,"byte_end":42141,"line_start":130,"line_end":130,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":42146,"byte_end":42149,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":42154,"byte_end":42161,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/ use parking_lot::Once;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":42166,"byte_end":42192,"line_start":133,"line_end":133,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":42197,"byte_end":42200,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ static mut VAL: usize = 0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":42205,"byte_end":42235,"line_start":135,"line_end":135,"column_start":5,"column_end":35}},{"value":"/ static INIT: Once = Once::new();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":42240,"byte_end":42276,"line_start":136,"line_end":136,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":42281,"byte_end":42284,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ // Accessing a `static mut` is unsafe much of the time, but if we do so","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":42289,"byte_end":42364,"line_start":138,"line_end":138,"column_start":5,"column_end":80}},{"value":"/ // in a synchronized fashion (e.g. write once or read all) then we're","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":42369,"byte_end":42442,"line_start":139,"line_end":139,"column_start":5,"column_end":78}},{"value":"/ // good to go!","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":42447,"byte_end":42465,"line_start":140,"line_end":140,"column_start":5,"column_end":23}},{"value":"/ //","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":42470,"byte_end":42476,"line_start":141,"line_end":141,"column_start":5,"column_end":11}},{"value":"/ // This function will only call `expensive_computation` once, and will","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":42481,"byte_end":42555,"line_start":142,"line_end":142,"column_start":5,"column_end":79}},{"value":"/ // otherwise always return the value returned from the first invocation.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":42560,"byte_end":42636,"line_start":143,"line_end":143,"column_start":5,"column_end":81}},{"value":"/ fn get_cached_val() -> usize {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":42641,"byte_end":42675,"line_start":144,"line_end":144,"column_start":5,"column_end":39}},{"value":"/     unsafe {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":42680,"byte_end":42696,"line_start":145,"line_end":145,"column_start":5,"column_end":21}},{"value":"/         INIT.call_once(|| {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":42701,"byte_end":42732,"line_start":146,"line_end":146,"column_start":5,"column_end":36}},{"value":"/             VAL = expensive_computation();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":42737,"byte_end":42783,"line_start":147,"line_end":147,"column_start":5,"column_end":51}},{"value":"/         });","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":42788,"byte_end":42803,"line_start":148,"line_end":148,"column_start":5,"column_end":20}},{"value":"/         VAL","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":42808,"byte_end":42823,"line_start":149,"line_end":149,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":42828,"byte_end":42837,"line_start":150,"line_end":150,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":42842,"byte_end":42847,"line_start":151,"line_end":151,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":42852,"byte_end":42855,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ fn expensive_computation() -> usize {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":42860,"byte_end":42901,"line_start":153,"line_end":153,"column_start":5,"column_end":46}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":42906,"byte_end":42920,"line_start":154,"line_end":154,"column_start":5,"column_end":19}},{"value":"/ # 2","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":42925,"byte_end":42932,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":42937,"byte_end":42942,"line_start":156,"line_end":156,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":42947,"byte_end":42954,"line_start":157,"line_end":157,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":42959,"byte_end":42962,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":42967,"byte_end":42979,"line_start":159,"line_end":159,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":42984,"byte_end":42987,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ The closure `f` will only be executed once if this is called","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":42992,"byte_end":43056,"line_start":161,"line_end":161,"column_start":5,"column_end":69}},{"value":"/ concurrently amongst many threads. If that closure panics, however, then","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":43061,"byte_end":43137,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/ it will *poison* this `Once` instance, causing all future invocations of","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":43142,"byte_end":43218,"line_start":163,"line_end":163,"column_start":5,"column_end":81}},{"value":"/ `call_once` to also panic.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":43223,"byte_end":43253,"line_start":164,"line_end":164,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":43258,"byte_end":43267,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":44039,"byte_end":44054,"line_start":188,"line_end":188,"column_start":12,"column_end":27},"name":"call_once_force","qualname":"<Once>::call_once_force","value":"pub fn call_once_force<F>(&Self, F) where F: FnOnce(OnceState) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Performs the same function as `call_once` except ignores poisoning.","sig":null,"attributes":[{"value":"/ Performs the same function as `call_once` except ignores poisoning.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":43556,"byte_end":43627,"line_start":178,"line_end":178,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":43632,"byte_end":43635,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ If this `Once` has been poisoned (some initialization panicked) then","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":43640,"byte_end":43712,"line_start":180,"line_end":180,"column_start":5,"column_end":77}},{"value":"/ this function will continue to attempt to call initialization functions","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":43717,"byte_end":43792,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ until one of them doesn't panic.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":43797,"byte_end":43833,"line_start":182,"line_end":182,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":43838,"byte_end":43841,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is yielded a structure which can be used to query the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":43846,"byte_end":43919,"line_start":184,"line_end":184,"column_start":5,"column_end":78}},{"value":"/ state of this `Once` (whether initialization has previously panicked or","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":43924,"byte_end":43999,"line_start":185,"line_end":185,"column_start":5,"column_end":80}},{"value":"/ not).","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":44004,"byte_end":44013,"line_start":186,"line_end":186,"column_start":5,"column_end":14}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":44018,"byte_end":44027,"line_start":187,"line_end":187,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\raw_mutex.rs","byte_start":53756,"byte_end":53764,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"RawMutex","qualname":"::raw_mutex::RawMutex","value":"RawMutex {  }","parent":null,"children":[{"krate":0,"index":154}],"decl_id":null,"docs":" Raw mutex type backed by the parking lot.\n","sig":null,"attributes":[{"value":"/ Raw mutex type backed by the parking lot.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\raw_mutex.rs","byte_start":53699,"byte_end":53744,"line_start":34,"line_end":34,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\raw_rwlock.rs","byte_start":64821,"byte_end":64830,"line_start":59,"line_end":59,"column_start":12,"column_end":21},"name":"RawRwLock","qualname":"::raw_rwlock::RawRwLock","value":"RawRwLock {  }","parent":null,"children":[{"krate":0,"index":226}],"decl_id":null,"docs":" Raw reader-writer lock type backed by the parking lot.\n","sig":null,"attributes":[{"value":"/ Raw reader-writer lock type backed by the parking lot.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\raw_rwlock.rs","byte_start":64751,"byte_end":64809,"line_start":58,"line_end":58,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":324},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\remutex.rs","byte_start":99788,"byte_end":99799,"line_start":12,"line_end":12,"column_start":12,"column_end":23},"name":"RawThreadId","qualname":"::remutex::RawThreadId","value":"","parent":null,"children":[],"decl_id":null,"docs":" Implementation of the `GetThreadId` trait for `lock_api::ReentrantMutex`.\n","sig":null,"attributes":[{"value":"/ Implementation of the `GetThreadId` trait for `lock_api::ReentrantMutex`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\remutex.rs","byte_start":99699,"byte_end":99776,"line_start":11,"line_end":11,"column_start":1,"column_end":78}}]},{"kind":"Type","id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\remutex.rs","byte_start":100688,"byte_end":100702,"line_start":36,"line_end":36,"column_start":10,"column_end":24},"name":"ReentrantMutex","qualname":"::remutex::ReentrantMutex","value":"lock_api::ReentrantMutex<RawMutex, RawThreadId, T>","parent":null,"children":[],"decl_id":null,"docs":" A mutex which can be recursively locked by a single thread.","sig":null,"attributes":[{"value":"/ A mutex which can be recursively locked by a single thread.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\remutex.rs","byte_start":100215,"byte_end":100278,"line_start":25,"line_end":25,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\remutex.rs","byte_start":100279,"byte_end":100282,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This type is identical to `Mutex` except for the following points:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\remutex.rs","byte_start":100283,"byte_end":100353,"line_start":27,"line_end":27,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\remutex.rs","byte_start":100354,"byte_end":100357,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ - Locking multiple times from the same thread will work correctly instead of","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\remutex.rs","byte_start":100358,"byte_end":100438,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/   deadlocking.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\remutex.rs","byte_start":100439,"byte_end":100457,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/ - `ReentrantMutexGuard` does not give mutable references to the locked data.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\remutex.rs","byte_start":100458,"byte_end":100538,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/   Use a `RefCell` if you need this.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\remutex.rs","byte_start":100539,"byte_end":100578,"line_start":32,"line_end":32,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\remutex.rs","byte_start":100579,"byte_end":100582,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ See [`Mutex`](struct.Mutex.html) for more details about the underlying mutex","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\remutex.rs","byte_start":100583,"byte_end":100663,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ primitive.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\remutex.rs","byte_start":100664,"byte_end":100678,"line_start":35,"line_end":35,"column_start":1,"column_end":15}}]},{"kind":"Type","id":{"krate":0,"index":332},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\remutex.rs","byte_start":101033,"byte_end":101052,"line_start":43,"line_end":43,"column_start":10,"column_end":29},"name":"ReentrantMutexGuard","qualname":"::remutex::ReentrantMutexGuard","value":"lock_api::ReentrantMutexGuard","parent":null,"children":[],"decl_id":null,"docs":" An RAII implementation of a \"scoped lock\" of a reentrant mutex. When this structure\n is dropped (falls out of scope), the lock will be unlocked.","sig":null,"attributes":[{"value":"/ An RAII implementation of a \"scoped lock\" of a reentrant mutex. When this structure","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\remutex.rs","byte_start":100761,"byte_end":100848,"line_start":38,"line_end":38,"column_start":1,"column_end":88}},{"value":"/ is dropped (falls out of scope), the lock will be unlocked.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\remutex.rs","byte_start":100849,"byte_end":100912,"line_start":39,"line_end":39,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\remutex.rs","byte_start":100913,"byte_end":100916,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ The data protected by the mutex can be accessed through this guard via its","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\remutex.rs","byte_start":100917,"byte_end":100995,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ `Deref` implementation.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\remutex.rs","byte_start":100996,"byte_end":101023,"line_start":42,"line_end":42,"column_start":1,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":335},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\remutex.rs","byte_start":101525,"byte_end":101550,"line_start":52,"line_end":52,"column_start":10,"column_end":35},"name":"MappedReentrantMutexGuard","qualname":"::remutex::MappedReentrantMutexGuard","value":"lock_api::MappedReentrantMutexGuard","parent":null,"children":[],"decl_id":null,"docs":" An RAII mutex guard returned by `ReentrantMutexGuard::map`, which can point to a\n subfield of the protected data.","sig":null,"attributes":[{"value":"/ An RAII mutex guard returned by `ReentrantMutexGuard::map`, which can point to a","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\remutex.rs","byte_start":101124,"byte_end":101208,"line_start":45,"line_end":45,"column_start":1,"column_end":85}},{"value":"/ subfield of the protected data.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\remutex.rs","byte_start":101209,"byte_end":101244,"line_start":46,"line_end":46,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\remutex.rs","byte_start":101245,"byte_end":101248,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The main difference between `MappedReentrantMutexGuard` and `ReentrantMutexGuard` is that the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\remutex.rs","byte_start":101249,"byte_end":101346,"line_start":48,"line_end":48,"column_start":1,"column_end":98}},{"value":"/ former doesn't support temporarily unlocking and re-locking, since that","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\remutex.rs","byte_start":101347,"byte_end":101422,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ could introduce soundness issues if the locked object is modified by another","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\remutex.rs","byte_start":101423,"byte_end":101503,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/ thread.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\remutex.rs","byte_start":101504,"byte_end":101515,"line_start":51,"line_end":51,"column_start":1,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":341},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":107611,"byte_end":107617,"line_start":89,"line_end":89,"column_start":10,"column_end":16},"name":"RwLock","qualname":"::rwlock::RwLock","value":"lock_api::RwLock<RawRwLock, T>","parent":null,"children":[],"decl_id":null,"docs":" A reader-writer lock","sig":null,"attributes":[{"value":"/ A reader-writer lock","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":104052,"byte_end":104076,"line_start":11,"line_end":11,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":104077,"byte_end":104080,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This type of lock allows a number of readers or at most one writer at any","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":104081,"byte_end":104158,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ point in time. The write portion of this lock typically allows modification","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":104159,"byte_end":104238,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ of the underlying data (exclusive access) and the read portion of this lock","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":104239,"byte_end":104318,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ typically allows for read-only access (shared access).","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":104319,"byte_end":104377,"line_start":16,"line_end":16,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":104378,"byte_end":104381,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This lock uses a task-fair locking policy which avoids both reader and","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":104382,"byte_end":104456,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ writer starvation. This means that readers trying to acquire the lock will","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":104457,"byte_end":104535,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ block even if the lock is unlocked when there are writers waiting to acquire","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":104536,"byte_end":104616,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ the lock. Because of this, attempts to recursively acquire a read lock","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":104617,"byte_end":104691,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ within a single thread may result in a deadlock.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":104692,"byte_end":104744,"line_start":22,"line_end":22,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":104745,"byte_end":104748,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The type parameter `T` represents the data that this lock protects. It is","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":104749,"byte_end":104826,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ required that `T` satisfies `Send` to be shared across threads and `Sync` to","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":104827,"byte_end":104907,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ allow concurrent access through readers. The RAII guards returned from the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":104908,"byte_end":104986,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ locking methods implement `Deref` (and `DerefMut` for the `write` methods)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":104987,"byte_end":105065,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ to allow access to the contained of the lock.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":105066,"byte_end":105115,"line_start":28,"line_end":28,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":105116,"byte_end":105119,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Fairness","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":105120,"byte_end":105134,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":105135,"byte_end":105138,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ A typical unfair lock can often end up in a situation where a single thread","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":105139,"byte_end":105218,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ quickly acquires and releases the same lock in succession, which can starve","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":105219,"byte_end":105298,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ other threads waiting to acquire the rwlock. While this improves performance","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":105299,"byte_end":105379,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ because it doesn't force a context switch when a thread tries to re-acquire","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":105380,"byte_end":105459,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ a rwlock it has just released, this can starve other threads.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":105460,"byte_end":105525,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":105526,"byte_end":105529,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ This rwlock uses [eventual fairness](https://trac.webkit.org/changeset/203350)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":105530,"byte_end":105612,"line_start":38,"line_end":38,"column_start":1,"column_end":83}},{"value":"/ to ensure that the lock will be fair on average without sacrificing","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":105613,"byte_end":105684,"line_start":39,"line_end":39,"column_start":1,"column_end":72}},{"value":"/ performance. This is done by forcing a fair unlock on average every 0.5ms,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":105685,"byte_end":105763,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/ which will force the lock to go to the next thread waiting for the rwlock.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":105764,"byte_end":105842,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":105843,"byte_end":105846,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Additionally, any critical section longer than 1ms will always use a fair","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":105847,"byte_end":105924,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ unlock, which has a negligible performance impact compared to the length of","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":105925,"byte_end":106004,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ the critical section.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":106005,"byte_end":106030,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":106031,"byte_end":106034,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ You can also force a fair unlock by calling `RwLockReadGuard::unlock_fair`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":106035,"byte_end":106113,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"/ or `RwLockWriteGuard::unlock_fair` when unlocking a mutex instead of simply","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":106114,"byte_end":106193,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ dropping the guard.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":106194,"byte_end":106217,"line_start":49,"line_end":49,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":106218,"byte_end":106221,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Differences from the standard library `RwLock`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":106222,"byte_end":106274,"line_start":51,"line_end":51,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":106275,"byte_end":106278,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ - Supports atomically downgrading a write lock into a read lock.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":106279,"byte_end":106347,"line_start":53,"line_end":53,"column_start":1,"column_end":69}},{"value":"/ - Task-fair locking policy instead of an unspecified platform default.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":106348,"byte_end":106422,"line_start":54,"line_end":54,"column_start":1,"column_end":75}},{"value":"/ - No poisoning, the lock is released normally on panic.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":106423,"byte_end":106482,"line_start":55,"line_end":55,"column_start":1,"column_end":60}},{"value":"/ - Only requires 1 word of space, whereas the standard library boxes the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":106483,"byte_end":106558,"line_start":56,"line_end":56,"column_start":1,"column_end":76}},{"value":"/   `RwLock` due to platform limitations.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":106559,"byte_end":106602,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/ - Can be statically constructed (requires the `const_fn` nightly feature).","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":106603,"byte_end":106681,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ - Does not require any drop glue when dropped.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":106682,"byte_end":106732,"line_start":59,"line_end":59,"column_start":1,"column_end":51}},{"value":"/ - Inline fast path for the uncontended case.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":106733,"byte_end":106781,"line_start":60,"line_end":60,"column_start":1,"column_end":49}},{"value":"/ - Efficient handling of micro-contention using adaptive spinning.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":106782,"byte_end":106851,"line_start":61,"line_end":61,"column_start":1,"column_end":70}},{"value":"/ - Allows raw locking & unlocking without a guard.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":106852,"byte_end":106905,"line_start":62,"line_end":62,"column_start":1,"column_end":54}},{"value":"/ - Supports eventual fairness so that the rwlock is fair on average.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":106906,"byte_end":106977,"line_start":63,"line_end":63,"column_start":1,"column_end":72}},{"value":"/ - Optionally allows making the rwlock fair by calling","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":106978,"byte_end":107035,"line_start":64,"line_end":64,"column_start":1,"column_end":58}},{"value":"/   `RwLockReadGuard::unlock_fair` and `RwLockWriteGuard::unlock_fair`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":107036,"byte_end":107109,"line_start":65,"line_end":65,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":107110,"byte_end":107113,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":107114,"byte_end":107128,"line_start":67,"line_end":67,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":107129,"byte_end":107132,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":107133,"byte_end":107140,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ use parking_lot::RwLock;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":107141,"byte_end":107169,"line_start":70,"line_end":70,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":107170,"byte_end":107173,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":107174,"byte_end":107204,"line_start":72,"line_end":72,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":107205,"byte_end":107208,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ // many reader locks can be held at once","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":107209,"byte_end":107253,"line_start":74,"line_end":74,"column_start":1,"column_end":45}},{"value":"/ {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":107254,"byte_end":107259,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/     let r1 = lock.read();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":107260,"byte_end":107289,"line_start":76,"line_end":76,"column_start":1,"column_end":30}},{"value":"/     let r2 = lock.read();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":107290,"byte_end":107319,"line_start":77,"line_end":77,"column_start":1,"column_end":30}},{"value":"/     assert_eq!(*r1, 5);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":107320,"byte_end":107347,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/     assert_eq!(*r2, 5);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":107348,"byte_end":107375,"line_start":79,"line_end":79,"column_start":1,"column_end":28}},{"value":"/ } // read locks are dropped at this point","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":107376,"byte_end":107421,"line_start":80,"line_end":80,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":107422,"byte_end":107425,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ // only one write lock may be held, however","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":107426,"byte_end":107473,"line_start":82,"line_end":82,"column_start":1,"column_end":48}},{"value":"/ {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":107474,"byte_end":107479,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/     let mut w = lock.write();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":107480,"byte_end":107513,"line_start":84,"line_end":84,"column_start":1,"column_end":34}},{"value":"/     *w += 1;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":107514,"byte_end":107530,"line_start":85,"line_end":85,"column_start":1,"column_end":17}},{"value":"/     assert_eq!(*w, 6);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":107531,"byte_end":107557,"line_start":86,"line_end":86,"column_start":1,"column_end":27}},{"value":"/ } // write lock is dropped here","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":107558,"byte_end":107593,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":107594,"byte_end":107601,"line_start":88,"line_end":88,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":107751,"byte_end":107766,"line_start":93,"line_end":93,"column_start":10,"column_end":25},"name":"RwLockReadGuard","qualname":"::rwlock::RwLockReadGuard","value":"lock_api::RwLockReadGuard","parent":null,"children":[],"decl_id":null,"docs":" RAII structure used to release the shared read access of a lock when\n dropped.\n","sig":null,"attributes":[{"value":"/ RAII structure used to release the shared read access of a lock when","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":107656,"byte_end":107728,"line_start":91,"line_end":91,"column_start":1,"column_end":73}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":107729,"byte_end":107741,"line_start":92,"line_end":92,"column_start":1,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":346},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":107921,"byte_end":107937,"line_start":97,"line_end":97,"column_start":10,"column_end":26},"name":"RwLockWriteGuard","qualname":"::rwlock::RwLockWriteGuard","value":"lock_api::RwLockWriteGuard","parent":null,"children":[],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.\n","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":107822,"byte_end":107898,"line_start":95,"line_end":95,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":107899,"byte_end":107911,"line_start":96,"line_end":96,"column_start":1,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":349},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":108387,"byte_end":108408,"line_start":106,"line_end":106,"column_start":10,"column_end":31},"name":"MappedRwLockReadGuard","qualname":"::rwlock::MappedRwLockReadGuard","value":"lock_api::MappedRwLockReadGuard","parent":null,"children":[],"decl_id":null,"docs":" An RAII read lock guard returned by `RwLockReadGuard::map`, which can point to a\n subfield of the protected data.","sig":null,"attributes":[{"value":"/ An RAII read lock guard returned by `RwLockReadGuard::map`, which can point to a","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":107994,"byte_end":108078,"line_start":99,"line_end":99,"column_start":1,"column_end":85}},{"value":"/ subfield of the protected data.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":108079,"byte_end":108114,"line_start":100,"line_end":100,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":108115,"byte_end":108118,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ The main difference between `MappedRwLockReadGuard` and `RwLockReadGuard` is that the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":108119,"byte_end":108208,"line_start":102,"line_end":102,"column_start":1,"column_end":90}},{"value":"/ former doesn't support temporarily unlocking and re-locking, since that","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":108209,"byte_end":108284,"line_start":103,"line_end":103,"column_start":1,"column_end":76}},{"value":"/ could introduce soundness issues if the locked object is modified by another","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":108285,"byte_end":108365,"line_start":104,"line_end":104,"column_start":1,"column_end":81}},{"value":"/ thread.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":108366,"byte_end":108377,"line_start":105,"line_end":105,"column_start":1,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":352},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":108867,"byte_end":108889,"line_start":115,"line_end":115,"column_start":10,"column_end":32},"name":"MappedRwLockWriteGuard","qualname":"::rwlock::MappedRwLockWriteGuard","value":"lock_api::MappedRwLockWriteGuard","parent":null,"children":[],"decl_id":null,"docs":" An RAII write lock guard returned by `RwLockWriteGuard::map`, which can point to a\n subfield of the protected data.","sig":null,"attributes":[{"value":"/ An RAII write lock guard returned by `RwLockWriteGuard::map`, which can point to a","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":108470,"byte_end":108556,"line_start":108,"line_end":108,"column_start":1,"column_end":87}},{"value":"/ subfield of the protected data.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":108557,"byte_end":108592,"line_start":109,"line_end":109,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":108593,"byte_end":108596,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ The main difference between `MappedRwLockWriteGuard` and `RwLockWriteGuard` is that the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":108597,"byte_end":108688,"line_start":111,"line_end":111,"column_start":1,"column_end":92}},{"value":"/ former doesn't support temporarily unlocking and re-locking, since that","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":108689,"byte_end":108764,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ could introduce soundness issues if the locked object is modified by another","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":108765,"byte_end":108845,"line_start":113,"line_end":113,"column_start":1,"column_end":81}},{"value":"/ thread.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":108846,"byte_end":108857,"line_start":114,"line_end":114,"column_start":1,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":355},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":109051,"byte_end":109076,"line_start":119,"line_end":119,"column_start":10,"column_end":35},"name":"RwLockUpgradableReadGuard","qualname":"::rwlock::RwLockUpgradableReadGuard","value":"lock_api::RwLockUpgradableReadGuard","parent":null,"children":[],"decl_id":null,"docs":" RAII structure used to release the upgradable read access of a lock when\n dropped.\n","sig":null,"attributes":[{"value":"/ RAII structure used to release the upgradable read access of a lock when","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":108952,"byte_end":109028,"line_start":117,"line_end":117,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\rwlock.rs","byte_start":109029,"byte_end":109041,"line_start":118,"line_end":118,"column_start":1,"column_end":13}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":2251,"byte_end":2268,"line_start":24,"line_end":24,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":4568,"byte_end":4575,"line_start":89,"line_end":89,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":17049,"byte_end":17056,"line_start":398,"line_end":398,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":17155,"byte_end":17162,"line_start":405,"line_end":405,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\elision.rs","byte_start":26069,"byte_end":26080,"line_start":37,"line_end":37,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":39433,"byte_end":39442,"line_start":45,"line_end":45,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":40798,"byte_end":40802,"line_start":94,"line_end":94,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":47914,"byte_end":47924,"line_start":292,"line_end":292,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":49166,"byte_end":49170,"line_start":328,"line_end":328,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":49263,"byte_end":49267,"line_start":335,"line_end":335,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\raw_mutex.rs","byte_start":53821,"byte_end":53829,"line_start":39,"line_end":39,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\raw_mutex.rs","byte_start":55260,"byte_end":55268,"line_start":94,"line_end":94,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\raw_mutex.rs","byte_start":55785,"byte_end":55793,"line_start":116,"line_end":116,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\raw_mutex.rs","byte_start":56784,"byte_end":56792,"line_start":155,"line_end":155,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":176},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\raw_rwlock.rs","byte_start":64891,"byte_end":64900,"line_start":63,"line_end":63,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\raw_rwlock.rs","byte_start":66964,"byte_end":66973,"line_start":146,"line_end":146,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\raw_rwlock.rs","byte_start":67868,"byte_end":67877,"line_start":183,"line_end":183,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\raw_rwlock.rs","byte_start":68228,"byte_end":68237,"line_start":197,"line_end":197,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\raw_rwlock.rs","byte_start":69894,"byte_end":69903,"line_start":262,"line_end":262,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\raw_rwlock.rs","byte_start":70491,"byte_end":70500,"line_start":286,"line_end":286,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\raw_rwlock.rs","byte_start":71232,"byte_end":71241,"line_start":314,"line_end":314,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\raw_rwlock.rs","byte_start":73113,"byte_end":73122,"line_start":389,"line_end":389,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\raw_rwlock.rs","byte_start":73947,"byte_end":73956,"line_start":419,"line_end":419,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\raw_rwlock.rs","byte_start":74635,"byte_end":74644,"line_start":444,"line_end":444,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\raw_rwlock.rs","byte_start":76048,"byte_end":76057,"line_start":498,"line_end":498,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":297},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":306},{"krate":0,"index":311},{"krate":0,"index":317},{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\remutex.rs","byte_start":99830,"byte_end":99841,"line_start":14,"line_end":14,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\util.rs","byte_start":122184,"byte_end":122190,"line_start":15,"line_end":15,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":2251,"byte_end":2268,"line_start":24,"line_end":24,"column_start":6,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":4568,"byte_end":4575,"line_start":89,"line_end":89,"column_start":6,"column_end":13},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":30},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":17049,"byte_end":17056,"line_start":398,"line_end":398,"column_start":18,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\condvar.rs","byte_start":17155,"byte_end":17162,"line_start":405,"line_end":405,"column_start":21,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\elision.rs","byte_start":26069,"byte_end":26080,"line_start":37,"line_end":37,"column_start":27,"column_end":38},"kind":{"Impl":{"id":4}},"from":{"krate":2,"index":32875},"to":{"krate":0,"index":58}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":39433,"byte_end":39442,"line_start":45,"line_end":45,"column_start":6,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":414},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":40798,"byte_end":40802,"line_start":94,"line_end":94,"column_start":6,"column_end":10},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":100},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":47914,"byte_end":47924,"line_start":292,"line_end":292,"column_start":27,"column_end":37},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":116},"to":{"krate":2,"index":2266}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":49166,"byte_end":49170,"line_start":328,"line_end":328,"column_start":18,"column_end":22},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":100},"to":{"krate":2,"index":2033}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\once.rs","byte_start":49263,"byte_end":49267,"line_start":335,"line_end":335,"column_start":21,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":100},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\raw_mutex.rs","byte_start":53821,"byte_end":53829,"line_start":39,"line_end":39,"column_start":31,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":153},"to":{"krate":13,"index":19}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\raw_mutex.rs","byte_start":55260,"byte_end":55268,"line_start":94,"line_end":94,"column_start":30,"column_end":38},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":153},"to":{"krate":13,"index":25}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\raw_mutex.rs","byte_start":55785,"byte_end":55793,"line_start":116,"line_end":116,"column_start":31,"column_end":39},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":153},"to":{"krate":13,"index":28}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\raw_mutex.rs","byte_start":56784,"byte_end":56792,"line_start":155,"line_end":155,"column_start":6,"column_end":14},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\raw_rwlock.rs","byte_start":64891,"byte_end":64900,"line_start":63,"line_end":63,"column_start":32,"column_end":41},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":225},"to":{"krate":13,"index":433}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\raw_rwlock.rs","byte_start":66964,"byte_end":66973,"line_start":146,"line_end":146,"column_start":31,"column_end":40},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":225},"to":{"krate":13,"index":442}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\raw_rwlock.rs","byte_start":67868,"byte_end":67877,"line_start":183,"line_end":183,"column_start":36,"column_end":45},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":225},"to":{"krate":13,"index":447}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\raw_rwlock.rs","byte_start":68228,"byte_end":68237,"line_start":197,"line_end":197,"column_start":32,"column_end":41},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":225},"to":{"krate":13,"index":449}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\raw_rwlock.rs","byte_start":69894,"byte_end":69903,"line_start":262,"line_end":262,"column_start":36,"column_end":45},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":225},"to":{"krate":13,"index":456}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\raw_rwlock.rs","byte_start":70491,"byte_end":70500,"line_start":286,"line_end":286,"column_start":41,"column_end":50},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":225},"to":{"krate":13,"index":459}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\raw_rwlock.rs","byte_start":71232,"byte_end":71241,"line_start":314,"line_end":314,"column_start":34,"column_end":43},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":225},"to":{"krate":13,"index":462}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\raw_rwlock.rs","byte_start":73113,"byte_end":73122,"line_start":389,"line_end":389,"column_start":38,"column_end":47},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":225},"to":{"krate":13,"index":468}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\raw_rwlock.rs","byte_start":73947,"byte_end":73956,"line_start":419,"line_end":419,"column_start":43,"column_end":52},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":225},"to":{"krate":13,"index":471}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\raw_rwlock.rs","byte_start":74635,"byte_end":74644,"line_start":444,"line_end":444,"column_start":39,"column_end":48},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":225},"to":{"krate":13,"index":474}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\raw_rwlock.rs","byte_start":76048,"byte_end":76057,"line_start":498,"line_end":498,"column_start":6,"column_end":15},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\remutex.rs","byte_start":99830,"byte_end":99841,"line_start":14,"line_end":14,"column_start":29,"column_end":40},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":324},"to":{"krate":13,"index":215}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\parking_lot-0.8.0\\src\\util.rs","byte_start":122184,"byte_end":122190,"line_start":15,"line_end":15,"column_start":35,"column_end":41},"kind":{"Impl":{"id":26}},"from":{"krate":2,"index":32312},"to":{"krate":0,"index":362}}]}