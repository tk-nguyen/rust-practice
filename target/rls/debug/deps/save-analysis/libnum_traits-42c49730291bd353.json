{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8","program":"C:\\Users\\Thai Nguyen\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","num_traits","C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=42c49730291bd353","-C","extra-filename=-42c49730291bd353","--out-dir","c:\\Cygwin\\home\\Thai Nguyen\\rust\\rust-practice\\target\\rls\\debug\\deps","-L","dependency=c:\\Cygwin\\home\\Thai Nguyen\\rust\\rust-practice\\target\\rls\\debug\\deps","--cap-lints","allow","--cfg","has_i128","--error-format=json","--sysroot","C:\\Users\\Thai Nguyen\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Cygwin\\home\\Thai Nguyen\\rust\\rust-practice\\target\\rls\\debug\\deps\\libnum_traits-42c49730291bd353.rmeta"},"prelude":{"crate_id":{"name":"num_traits","disambiguator":[18085329222956964215,15709164160919237912]},"crate_root":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src","external_crates":[{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[1322159461575500717,8297198428669169011]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[2376346800744392852,12342541482992122530]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[14946502858004023242,6637215598610016319]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","num":4,"id":{"name":"std","disambiguator":[2134305066550747688,1377703208702874155]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5305136910335682758,6890491777619641650]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[8079093424489733033,9678018066858265018]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8191054904896780843,65190916132359678]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17454577518104061478,8473922882117178851]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14702801963282246562,3385633331338644346]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4483555191844012602,617965746000623535]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6496369475756502088,8603909216288097824]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[8790568169648576788,8899032378407077408]}}],"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":472,"byte_end":16437,"line_start":11,"line_end":470,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":926,"byte_end":933,"line_start":28,"line_end":28,"column_start":17,"column_end":24},"alias_span":null,"name":"Bounded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":974,"byte_end":979,"line_start":30,"line_end":30,"column_start":16,"column_end":21},"alias_span":null,"name":"Float","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2099},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":996,"byte_end":1006,"line_start":31,"line_end":31,"column_start":16,"column_end":26},"alias_span":null,"name":"FloatConst","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1115,"byte_end":1119,"line_start":33,"line_end":33,"column_start":16,"column_end":20},"alias_span":null,"name":"cast","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":178},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1121,"byte_end":1132,"line_start":33,"line_end":33,"column_start":22,"column_end":33},"alias_span":null,"name":"AsPrimitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":145},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1134,"byte_end":1147,"line_start":33,"line_end":33,"column_start":35,"column_end":48},"alias_span":null,"name":"FromPrimitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1149,"byte_end":1156,"line_start":33,"line_end":33,"column_start":50,"column_end":57},"alias_span":null,"name":"NumCast","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1158,"byte_end":1169,"line_start":33,"line_end":33,"column_start":59,"column_end":70},"alias_span":null,"name":"ToPrimitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":314},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1193,"byte_end":1196,"line_start":34,"line_end":34,"column_start":22,"column_end":25},"alias_span":null,"name":"one","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":312},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1198,"byte_end":1202,"line_start":34,"line_end":34,"column_start":27,"column_end":31},"alias_span":null,"name":"zero","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":303},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1204,"byte_end":1207,"line_start":34,"line_end":34,"column_start":33,"column_end":36},"alias_span":null,"name":"One","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1209,"byte_end":1213,"line_start":34,"line_end":34,"column_start":38,"column_end":42},"alias_span":null,"name":"Zero","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1229,"byte_end":1236,"line_start":35,"line_end":35,"column_start":14,"column_end":21},"alias_span":null,"name":"PrimInt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":358},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1266,"byte_end":1276,"line_start":37,"line_end":37,"column_start":5,"column_end":15},"alias_span":null,"name":"CheckedAdd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":365},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1278,"byte_end":1288,"line_start":37,"line_end":37,"column_start":17,"column_end":27},"alias_span":null,"name":"CheckedDiv","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1290,"byte_end":1300,"line_start":37,"line_end":37,"column_start":29,"column_end":39},"alias_span":null,"name":"CheckedMul","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1302,"byte_end":1312,"line_start":37,"line_end":37,"column_start":41,"column_end":51},"alias_span":null,"name":"CheckedNeg","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":367},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1314,"byte_end":1324,"line_start":37,"line_end":37,"column_start":53,"column_end":63},"alias_span":null,"name":"CheckedRem","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":372},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1326,"byte_end":1336,"line_start":37,"line_end":37,"column_start":65,"column_end":75},"alias_span":null,"name":"CheckedShl","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":375},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1338,"byte_end":1348,"line_start":37,"line_end":37,"column_start":77,"column_end":87},"alias_span":null,"name":"CheckedShr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":361},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1350,"byte_end":1360,"line_start":37,"line_end":37,"column_start":89,"column_end":99},"alias_span":null,"name":"CheckedSub","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":378},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1383,"byte_end":1386,"line_start":39,"line_end":39,"column_start":19,"column_end":22},"alias_span":null,"name":"Inv","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1411,"byte_end":1417,"line_start":40,"line_end":40,"column_start":24,"column_end":30},"alias_span":null,"name":"MulAdd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":401},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1419,"byte_end":1431,"line_start":40,"line_end":40,"column_start":32,"column_end":44},"alias_span":null,"name":"MulAddAssign","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":418},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1459,"byte_end":1469,"line_start":41,"line_end":41,"column_start":26,"column_end":36},"alias_span":null,"name":"Saturating","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":431},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1495,"byte_end":1506,"line_start":42,"line_end":42,"column_start":25,"column_end":36},"alias_span":null,"name":"WrappingAdd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":435},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1508,"byte_end":1519,"line_start":42,"line_end":42,"column_start":38,"column_end":49},"alias_span":null,"name":"WrappingMul","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":438},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1521,"byte_end":1532,"line_start":42,"line_end":42,"column_start":51,"column_end":62},"alias_span":null,"name":"WrappingShl","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":440},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1534,"byte_end":1545,"line_start":42,"line_end":42,"column_start":64,"column_end":75},"alias_span":null,"name":"WrappingShr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":433},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1547,"byte_end":1558,"line_start":42,"line_end":42,"column_start":77,"column_end":88},"alias_span":null,"name":"WrappingSub","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":472},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1575,"byte_end":1586,"line_start":43,"line_end":43,"column_start":15,"column_end":26},"alias_span":null,"name":"checked_pow","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":470},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1588,"byte_end":1591,"line_start":43,"line_end":43,"column_start":28,"column_end":31},"alias_span":null,"name":"pow","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":463},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1593,"byte_end":1596,"line_start":43,"line_end":43,"column_start":33,"column_end":36},"alias_span":null,"name":"Pow","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":551},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1614,"byte_end":1617,"line_start":44,"line_end":44,"column_start":16,"column_end":19},"alias_span":null,"name":"abs","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":553},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1619,"byte_end":1626,"line_start":44,"line_end":44,"column_start":21,"column_end":28},"alias_span":null,"name":"abs_sub","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":555},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1628,"byte_end":1634,"line_start":44,"line_end":44,"column_start":30,"column_end":36},"alias_span":null,"name":"signum","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":536},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1636,"byte_end":1642,"line_start":44,"line_end":44,"column_start":38,"column_end":44},"alias_span":null,"name":"Signed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":557},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1644,"byte_end":1652,"line_start":44,"line_end":44,"column_start":46,"column_end":54},"alias_span":null,"name":"Unsigned","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":472,"byte_end":16437,"line_start":11,"line_end":470,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":4372},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":98},{"krate":0,"index":182},{"krate":0,"index":288},{"krate":0,"index":316},{"krate":0,"index":348},{"krate":0,"index":457},{"krate":0,"index":475},{"krate":0,"index":531},{"krate":0,"index":561},{"krate":0,"index":564},{"krate":0,"index":567},{"krate":0,"index":571},{"krate":0,"index":573},{"krate":0,"index":576},{"krate":0,"index":579},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":591},{"krate":0,"index":593},{"krate":0,"index":4307},{"krate":0,"index":4310},{"krate":0,"index":4313},{"krate":0,"index":4316},{"krate":0,"index":4319},{"krate":0,"index":4322},{"krate":0,"index":4325},{"krate":0,"index":4328},{"krate":0,"index":4331},{"krate":0,"index":4334},{"krate":0,"index":4337},{"krate":0,"index":4340},{"krate":0,"index":597},{"krate":0,"index":4343},{"krate":0,"index":4348},{"krate":0,"index":4350},{"krate":0,"index":4352},{"krate":0,"index":601},{"krate":0,"index":4354},{"krate":0,"index":4362},{"krate":0,"index":604}],"decl_id":null,"docs":" Numeric traits for generic mathematics","sig":null,"attributes":[{"value":"/ Numeric traits for generic mathematics","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":472,"byte_end":514,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":515,"byte_end":518,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ## Compatibility","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":519,"byte_end":539,"line_start":13,"line_end":13,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":540,"byte_end":543,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The `num-traits` crate is tested for rustc 1.8 and greater.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":544,"byte_end":607,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"deny(unconditional_recursion)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":667,"byte_end":700,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"no_std","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":701,"byte_end":711,"line_start":19,"line_end":19,"column_start":1,"column_end":11}}]},{"kind":"Mod","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\bounds.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bounds","qualname":"::bounds","value":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\bounds.rs","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":4470},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":606},{"krate":0,"index":609},{"krate":0,"index":612},{"krate":0,"index":615},{"krate":0,"index":618},{"krate":0,"index":621},{"krate":0,"index":624},{"krate":0,"index":627},{"krate":0,"index":630},{"krate":0,"index":633},{"krate":0,"index":636},{"krate":0,"index":639},{"krate":0,"index":91},{"krate":0,"index":642},{"krate":0,"index":645},{"krate":0,"index":668},{"krate":0,"index":690},{"krate":0,"index":711},{"krate":0,"index":731},{"krate":0,"index":750},{"krate":0,"index":768},{"krate":0,"index":785},{"krate":0,"index":801},{"krate":0,"index":816},{"krate":0,"index":830},{"krate":0,"index":843},{"krate":0,"index":855},{"krate":0,"index":866},{"krate":0,"index":876},{"krate":0,"index":885},{"krate":0,"index":893},{"krate":0,"index":900},{"krate":0,"index":906},{"krate":0,"index":911},{"krate":0,"index":915},{"krate":0,"index":918}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\bounds.rs","byte_start":17918,"byte_end":17925,"line_start":9,"line_end":9,"column_start":11,"column_end":18},"name":"Bounded","qualname":"::bounds::Bounded","value":"Bounded","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89}],"decl_id":null,"docs":" Numbers which have upper and lower bounds\n","sig":null,"attributes":[{"value":"/ Numbers which have upper and lower bounds","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\bounds.rs","byte_start":17862,"byte_end":17907,"line_start":8,"line_end":8,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\bounds.rs","byte_start":18061,"byte_end":18070,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"min_value","qualname":"::bounds::Bounded::min_value","value":"pub fn min_value() -> Self","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" returns the smallest finite number this type can represent\n","sig":null,"attributes":[{"value":"/ returns the smallest finite number this type can represent","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\bounds.rs","byte_start":17991,"byte_end":18053,"line_start":11,"line_end":11,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\bounds.rs","byte_start":18155,"byte_end":18164,"line_start":14,"line_end":14,"column_start":8,"column_end":17},"name":"max_value","qualname":"::bounds::Bounded::max_value","value":"pub fn max_value() -> Self","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" returns the largest finite number this type can represent\n","sig":null,"attributes":[{"value":"/ returns the largest finite number this type can represent","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\bounds.rs","byte_start":18086,"byte_end":18147,"line_start":13,"line_end":13,"column_start":5,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cast","qualname":"::cast","value":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":4502},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":921},{"krate":0,"index":936},{"krate":0,"index":951},{"krate":0,"index":966},{"krate":0,"index":981},{"krate":0,"index":996},{"krate":0,"index":1011},{"krate":0,"index":1026},{"krate":0,"index":1041},{"krate":0,"index":1056},{"krate":0,"index":1071},{"krate":0,"index":1086},{"krate":0,"index":1101},{"krate":0,"index":1152},{"krate":0,"index":145},{"krate":0,"index":1203},{"krate":0,"index":1218},{"krate":0,"index":1233},{"krate":0,"index":1248},{"krate":0,"index":1263},{"krate":0,"index":1278},{"krate":0,"index":1293},{"krate":0,"index":1308},{"krate":0,"index":1323},{"krate":0,"index":1338},{"krate":0,"index":1353},{"krate":0,"index":1368},{"krate":0,"index":1383},{"krate":0,"index":1398},{"krate":0,"index":162},{"krate":0,"index":165},{"krate":0,"index":167},{"krate":0,"index":170},{"krate":0,"index":1441},{"krate":0,"index":1444},{"krate":0,"index":1447},{"krate":0,"index":1450},{"krate":0,"index":1453},{"krate":0,"index":1456},{"krate":0,"index":1459},{"krate":0,"index":1462},{"krate":0,"index":1465},{"krate":0,"index":1468},{"krate":0,"index":1471},{"krate":0,"index":1474},{"krate":0,"index":1477},{"krate":0,"index":1480},{"krate":0,"index":174},{"krate":0,"index":178},{"krate":0,"index":1483},{"krate":0,"index":1485},{"krate":0,"index":1487},{"krate":0,"index":1489},{"krate":0,"index":1491},{"krate":0,"index":1493},{"krate":0,"index":1495},{"krate":0,"index":1497},{"krate":0,"index":1499},{"krate":0,"index":1501},{"krate":0,"index":1503},{"krate":0,"index":1505},{"krate":0,"index":1507},{"krate":0,"index":1509},{"krate":0,"index":1511},{"krate":0,"index":1513},{"krate":0,"index":1515},{"krate":0,"index":1517},{"krate":0,"index":1519},{"krate":0,"index":1521},{"krate":0,"index":1523},{"krate":0,"index":1525},{"krate":0,"index":1527},{"krate":0,"index":1529},{"krate":0,"index":1531},{"krate":0,"index":1533},{"krate":0,"index":1535},{"krate":0,"index":1537},{"krate":0,"index":1539},{"krate":0,"index":1541},{"krate":0,"index":1543},{"krate":0,"index":1545},{"krate":0,"index":1547},{"krate":0,"index":1549},{"krate":0,"index":1551},{"krate":0,"index":1553},{"krate":0,"index":1555},{"krate":0,"index":1557},{"krate":0,"index":1559},{"krate":0,"index":1561},{"krate":0,"index":1563},{"krate":0,"index":1565},{"krate":0,"index":1567},{"krate":0,"index":1569},{"krate":0,"index":1571},{"krate":0,"index":1573},{"krate":0,"index":1575},{"krate":0,"index":1577},{"krate":0,"index":1579},{"krate":0,"index":1581},{"krate":0,"index":1583},{"krate":0,"index":1585},{"krate":0,"index":1587},{"krate":0,"index":1589},{"krate":0,"index":1591},{"krate":0,"index":1593},{"krate":0,"index":1595},{"krate":0,"index":1597},{"krate":0,"index":1599},{"krate":0,"index":1601},{"krate":0,"index":1603},{"krate":0,"index":1605},{"krate":0,"index":1607},{"krate":0,"index":1609},{"krate":0,"index":1611},{"krate":0,"index":1613},{"krate":0,"index":1615},{"krate":0,"index":1617},{"krate":0,"index":1619},{"krate":0,"index":1621},{"krate":0,"index":1623},{"krate":0,"index":1625},{"krate":0,"index":1627},{"krate":0,"index":1629},{"krate":0,"index":1631},{"krate":0,"index":1633},{"krate":0,"index":1635},{"krate":0,"index":1637},{"krate":0,"index":1639},{"krate":0,"index":1641},{"krate":0,"index":1643},{"krate":0,"index":1645},{"krate":0,"index":1647},{"krate":0,"index":1649},{"krate":0,"index":1651},{"krate":0,"index":1653},{"krate":0,"index":1655},{"krate":0,"index":1657},{"krate":0,"index":1659},{"krate":0,"index":1661},{"krate":0,"index":1663},{"krate":0,"index":1665},{"krate":0,"index":1667},{"krate":0,"index":1669},{"krate":0,"index":1671},{"krate":0,"index":1673},{"krate":0,"index":1675},{"krate":0,"index":1677},{"krate":0,"index":1679},{"krate":0,"index":1681},{"krate":0,"index":1683},{"krate":0,"index":1685},{"krate":0,"index":1687},{"krate":0,"index":1689},{"krate":0,"index":1691},{"krate":0,"index":1693},{"krate":0,"index":1695},{"krate":0,"index":1697},{"krate":0,"index":1699},{"krate":0,"index":1701},{"krate":0,"index":1703},{"krate":0,"index":1705},{"krate":0,"index":1707},{"krate":0,"index":1709},{"krate":0,"index":1711},{"krate":0,"index":1713},{"krate":0,"index":1715},{"krate":0,"index":1717},{"krate":0,"index":1719},{"krate":0,"index":1721},{"krate":0,"index":1723},{"krate":0,"index":1725},{"krate":0,"index":1727},{"krate":0,"index":1729},{"krate":0,"index":1731},{"krate":0,"index":1733},{"krate":0,"index":1735},{"krate":0,"index":1737},{"krate":0,"index":1739},{"krate":0,"index":1741},{"krate":0,"index":1743},{"krate":0,"index":1745},{"krate":0,"index":1747},{"krate":0,"index":1749},{"krate":0,"index":1751},{"krate":0,"index":1753},{"krate":0,"index":1755},{"krate":0,"index":1757},{"krate":0,"index":1759},{"krate":0,"index":1761},{"krate":0,"index":1763},{"krate":0,"index":1765},{"krate":0,"index":1767},{"krate":0,"index":1769},{"krate":0,"index":1771},{"krate":0,"index":1773},{"krate":0,"index":1775},{"krate":0,"index":1777},{"krate":0,"index":1779},{"krate":0,"index":1781},{"krate":0,"index":1783},{"krate":0,"index":1785},{"krate":0,"index":1787},{"krate":0,"index":1789},{"krate":0,"index":1791},{"krate":0,"index":1793},{"krate":0,"index":1795},{"krate":0,"index":1797},{"krate":0,"index":1799},{"krate":0,"index":1801},{"krate":0,"index":1803},{"krate":0,"index":1805},{"krate":0,"index":1807},{"krate":0,"index":1809},{"krate":0,"index":1811},{"krate":0,"index":1813},{"krate":0,"index":1815},{"krate":0,"index":1817},{"krate":0,"index":1819},{"krate":0,"index":1821},{"krate":0,"index":1823},{"krate":0,"index":1825},{"krate":0,"index":1827},{"krate":0,"index":1829},{"krate":0,"index":1831},{"krate":0,"index":1833},{"krate":0,"index":1835},{"krate":0,"index":1837},{"krate":0,"index":1839},{"krate":0,"index":1841},{"krate":0,"index":1843},{"krate":0,"index":1845},{"krate":0,"index":1847},{"krate":0,"index":1849},{"krate":0,"index":1851},{"krate":0,"index":1853},{"krate":0,"index":1855},{"krate":0,"index":1857},{"krate":0,"index":1859},{"krate":0,"index":1861},{"krate":0,"index":1863},{"krate":0,"index":1865},{"krate":0,"index":1867},{"krate":0,"index":1869},{"krate":0,"index":1871},{"krate":0,"index":1873},{"krate":0,"index":1875},{"krate":0,"index":1877},{"krate":0,"index":1879},{"krate":0,"index":1881},{"krate":0,"index":1883},{"krate":0,"index":1885},{"krate":0,"index":1887},{"krate":0,"index":1889},{"krate":0,"index":1891},{"krate":0,"index":1893},{"krate":0,"index":1895},{"krate":0,"index":1897},{"krate":0,"index":1899},{"krate":0,"index":1901},{"krate":0,"index":1903},{"krate":0,"index":1905},{"krate":0,"index":1907},{"krate":0,"index":1909},{"krate":0,"index":1911},{"krate":0,"index":1913},{"krate":0,"index":1915},{"krate":0,"index":1917},{"krate":0,"index":1919},{"krate":0,"index":1921},{"krate":0,"index":1923},{"krate":0,"index":1925}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":21215,"byte_end":21226,"line_start":12,"line_end":12,"column_start":11,"column_end":22},"name":"ToPrimitive","qualname":"::cast::ToPrimitive","value":"ToPrimitive","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134}],"decl_id":null,"docs":" A generic trait for converting a value to a number.\n","sig":null,"attributes":[{"value":"/ A generic trait for converting a value to a number.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":21149,"byte_end":21204,"line_start":11,"line_end":11,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":21302,"byte_end":21310,"line_start":15,"line_end":15,"column_start":8,"column_end":16},"name":"to_isize","qualname":"::cast::ToPrimitive::to_isize","value":"pub fn to_isize(&Self) -> Option<isize>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `isize`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `isize`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":21233,"byte_end":21280,"line_start":13,"line_end":13,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":21285,"byte_end":21294,"line_start":14,"line_end":14,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":21477,"byte_end":21482,"line_start":21,"line_end":21,"column_start":8,"column_end":13},"name":"to_i8","qualname":"::cast::ToPrimitive::to_i8","value":"pub fn to_i8(&Self) -> Option<i8>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `i8`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `i8`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":21411,"byte_end":21455,"line_start":19,"line_end":19,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":21460,"byte_end":21469,"line_start":20,"line_end":20,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":21644,"byte_end":21650,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"to_i16","qualname":"::cast::ToPrimitive::to_i16","value":"pub fn to_i16(&Self) -> Option<i16>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `i16`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `i16`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":21577,"byte_end":21622,"line_start":25,"line_end":25,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":21627,"byte_end":21636,"line_start":26,"line_end":26,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":21814,"byte_end":21820,"line_start":33,"line_end":33,"column_start":8,"column_end":14},"name":"to_i32","qualname":"::cast::ToPrimitive::to_i32","value":"pub fn to_i32(&Self) -> Option<i32>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `i32`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `i32`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":21747,"byte_end":21792,"line_start":31,"line_end":31,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":21797,"byte_end":21806,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":21970,"byte_end":21976,"line_start":38,"line_end":38,"column_start":8,"column_end":14},"name":"to_i64","qualname":"::cast::ToPrimitive::to_i64","value":"pub fn to_i64(&Self) -> Option<i64>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `i64`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `i64`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":21917,"byte_end":21962,"line_start":37,"line_end":37,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":22363,"byte_end":22370,"line_start":48,"line_end":48,"column_start":8,"column_end":15},"name":"to_i128","qualname":"::cast::ToPrimitive::to_i128","value":"pub fn to_i128(&Self) -> Option<i128>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `i128`.","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `i128`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":22005,"byte_end":22051,"line_start":40,"line_end":40,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":22056,"byte_end":22059,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ This method is only available with feature `i128` enabled on Rust >= 1.26.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":22064,"byte_end":22142,"line_start":42,"line_end":42,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":22147,"byte_end":22150,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ The default implementation converts through `to_i64()`.  Types implementing","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":22155,"byte_end":22234,"line_start":44,"line_end":44,"column_start":5,"column_end":84}},{"value":"/ this trait should override this method if they can represent a greater range.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":22239,"byte_end":22320,"line_start":45,"line_end":45,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":22325,"byte_end":22334,"line_start":46,"line_end":46,"column_start":5,"column_end":14}},{"value":"cfg(has_i128)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":22339,"byte_end":22355,"line_start":47,"line_end":47,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":22513,"byte_end":22521,"line_start":54,"line_end":54,"column_start":8,"column_end":16},"name":"to_usize","qualname":"::cast::ToPrimitive::to_usize","value":"pub fn to_usize(&Self) -> Option<usize>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a `usize`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to a `usize`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":22445,"byte_end":22491,"line_start":52,"line_end":52,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":22496,"byte_end":22505,"line_start":53,"line_end":53,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":22688,"byte_end":22693,"line_start":60,"line_end":60,"column_start":8,"column_end":13},"name":"to_u8","qualname":"::cast::ToPrimitive::to_u8","value":"pub fn to_u8(&Self) -> Option<u8>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `u8`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `u8`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":22622,"byte_end":22666,"line_start":58,"line_end":58,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":22671,"byte_end":22680,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":22855,"byte_end":22861,"line_start":66,"line_end":66,"column_start":8,"column_end":14},"name":"to_u16","qualname":"::cast::ToPrimitive::to_u16","value":"pub fn to_u16(&Self) -> Option<u16>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `u16`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `u16`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":22788,"byte_end":22833,"line_start":64,"line_end":64,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":22838,"byte_end":22847,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23025,"byte_end":23031,"line_start":72,"line_end":72,"column_start":8,"column_end":14},"name":"to_u32","qualname":"::cast::ToPrimitive::to_u32","value":"pub fn to_u32(&Self) -> Option<u32>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `u32`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `u32`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":22958,"byte_end":23003,"line_start":70,"line_end":70,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23008,"byte_end":23017,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23195,"byte_end":23201,"line_start":78,"line_end":78,"column_start":8,"column_end":14},"name":"to_u64","qualname":"::cast::ToPrimitive::to_u64","value":"pub fn to_u64(&Self) -> Option<u64>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `u64`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `u64`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23128,"byte_end":23173,"line_start":76,"line_end":76,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23178,"byte_end":23187,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23588,"byte_end":23595,"line_start":88,"line_end":88,"column_start":8,"column_end":15},"name":"to_u128","qualname":"::cast::ToPrimitive::to_u128","value":"pub fn to_u128(&Self) -> Option<u128>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `u128`.","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `u128`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23230,"byte_end":23276,"line_start":80,"line_end":80,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23281,"byte_end":23284,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This method is only available with feature `i128` enabled on Rust >= 1.26.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23289,"byte_end":23367,"line_start":82,"line_end":82,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23372,"byte_end":23375,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ The default implementation converts through `to_u64()`.  Types implementing","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23380,"byte_end":23459,"line_start":84,"line_end":84,"column_start":5,"column_end":84}},{"value":"/ this trait should override this method if they can represent a greater range.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23464,"byte_end":23545,"line_start":85,"line_end":85,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23550,"byte_end":23559,"line_start":86,"line_end":86,"column_start":5,"column_end":14}},{"value":"cfg(has_i128)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23564,"byte_end":23580,"line_start":87,"line_end":87,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23737,"byte_end":23743,"line_start":94,"line_end":94,"column_start":8,"column_end":14},"name":"to_f32","qualname":"::cast::ToPrimitive::to_f32","value":"pub fn to_f32(&Self) -> Option<f32>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `f32`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `f32`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23670,"byte_end":23715,"line_start":92,"line_end":92,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23720,"byte_end":23729,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23907,"byte_end":23913,"line_start":100,"line_end":100,"column_start":8,"column_end":14},"name":"to_f64","qualname":"::cast::ToPrimitive::to_f64","value":"pub fn to_f64(&Self) -> Option<f64>","parent":{"krate":0,"index":120},"children":[],"decl_id":null,"docs":" Converts the value of `self` to an `f64`.\n","sig":null,"attributes":[{"value":"/ Converts the value of `self` to an `f64`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23840,"byte_end":23885,"line_start":98,"line_end":98,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":23890,"byte_end":23899,"line_start":99,"line_end":99,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":145},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":32311,"byte_end":32324,"line_start":364,"line_end":364,"column_start":11,"column_end":24},"name":"FromPrimitive","qualname":"::cast::FromPrimitive","value":"FromPrimitive: Sized","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159}],"decl_id":null,"docs":" A generic trait for converting a number to a value.\n","sig":null,"attributes":[{"value":"/ A generic trait for converting a number to a value.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":32245,"byte_end":32300,"line_start":363,"line_end":363,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":32507,"byte_end":32517,"line_start":368,"line_end":368,"column_start":8,"column_end":18},"name":"from_isize","qualname":"::cast::FromPrimitive::from_isize","value":"pub fn from_isize(isize) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Convert an `isize` to return an optional value of this type. If the\n value cannot be represented by this value, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Convert an `isize` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":32338,"byte_end":32409,"line_start":365,"line_end":365,"column_start":5,"column_end":76}},{"value":"/ value cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":32414,"byte_end":32485,"line_start":366,"line_end":366,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":32490,"byte_end":32499,"line_start":367,"line_end":367,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":32775,"byte_end":32782,"line_start":375,"line_end":375,"column_start":8,"column_end":15},"name":"from_i8","qualname":"::cast::FromPrimitive::from_i8","value":"pub fn from_i8(i8) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Convert an `i8` to return an optional value of this type. If the\n type cannot be represented by this value, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Convert an `i8` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":32610,"byte_end":32678,"line_start":372,"line_end":372,"column_start":5,"column_end":73}},{"value":"/ type cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":32683,"byte_end":32753,"line_start":373,"line_end":373,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":32758,"byte_end":32767,"line_start":374,"line_end":374,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":33032,"byte_end":33040,"line_start":382,"line_end":382,"column_start":8,"column_end":16},"name":"from_i16","qualname":"::cast::FromPrimitive::from_i16","value":"pub fn from_i16(i16) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Convert an `i16` to return an optional value of this type. If the\n type cannot be represented by this value, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Convert an `i16` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":32866,"byte_end":32935,"line_start":379,"line_end":379,"column_start":5,"column_end":74}},{"value":"/ type cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":32940,"byte_end":33010,"line_start":380,"line_end":380,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":33015,"byte_end":33024,"line_start":381,"line_end":381,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":33291,"byte_end":33299,"line_start":389,"line_end":389,"column_start":8,"column_end":16},"name":"from_i32","qualname":"::cast::FromPrimitive::from_i32","value":"pub fn from_i32(i32) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Convert an `i32` to return an optional value of this type. If the\n type cannot be represented by this value, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Convert an `i32` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":33125,"byte_end":33194,"line_start":386,"line_end":386,"column_start":5,"column_end":74}},{"value":"/ type cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":33199,"byte_end":33269,"line_start":387,"line_end":387,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":33274,"byte_end":33283,"line_start":388,"line_end":388,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":33536,"byte_end":33544,"line_start":395,"line_end":395,"column_start":8,"column_end":16},"name":"from_i64","qualname":"::cast::FromPrimitive::from_i64","value":"pub fn from_i64(i64) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Convert an `i64` to return an optional value of this type. If the\n type cannot be represented by this value, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Convert an `i64` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":33384,"byte_end":33453,"line_start":393,"line_end":393,"column_start":5,"column_end":74}},{"value":"/ type cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":33458,"byte_end":33528,"line_start":394,"line_end":394,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":34034,"byte_end":34043,"line_start":406,"line_end":406,"column_start":8,"column_end":17},"name":"from_i128","qualname":"::cast::FromPrimitive::from_i128","value":"pub fn from_i128(i128) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Convert an `i128` to return an optional value of this type. If the\n type cannot be represented by this value, then `None` is returned.","sig":null,"attributes":[{"value":"/ Convert an `i128` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":33575,"byte_end":33645,"line_start":397,"line_end":397,"column_start":5,"column_end":75}},{"value":"/ type cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":33650,"byte_end":33720,"line_start":398,"line_end":398,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":33725,"byte_end":33728,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ This method is only available with feature `i128` enabled on Rust >= 1.26.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":33733,"byte_end":33811,"line_start":400,"line_end":400,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":33816,"byte_end":33819,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ The default implementation converts through `from_i64()`.  Types implementing","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":33824,"byte_end":33905,"line_start":402,"line_end":402,"column_start":5,"column_end":86}},{"value":"/ this trait should override this method if they can represent a greater range.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":33910,"byte_end":33991,"line_start":403,"line_end":403,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":33996,"byte_end":34005,"line_start":404,"line_end":404,"column_start":5,"column_end":14}},{"value":"cfg(has_i128)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":34010,"byte_end":34026,"line_start":405,"line_end":405,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":34302,"byte_end":34312,"line_start":413,"line_end":413,"column_start":8,"column_end":18},"name":"from_usize","qualname":"::cast::FromPrimitive::from_usize","value":"pub fn from_usize(usize) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Convert a `usize` to return an optional value of this type. If the\n type cannot be represented by this value, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Convert a `usize` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":34135,"byte_end":34205,"line_start":410,"line_end":410,"column_start":5,"column_end":75}},{"value":"/ type cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":34210,"byte_end":34280,"line_start":411,"line_end":411,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":34285,"byte_end":34294,"line_start":412,"line_end":412,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":34570,"byte_end":34577,"line_start":420,"line_end":420,"column_start":8,"column_end":15},"name":"from_u8","qualname":"::cast::FromPrimitive::from_u8","value":"pub fn from_u8(u8) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Convert an `u8` to return an optional value of this type. If the\n type cannot be represented by this value, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Convert an `u8` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":34405,"byte_end":34473,"line_start":417,"line_end":417,"column_start":5,"column_end":73}},{"value":"/ type cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":34478,"byte_end":34548,"line_start":418,"line_end":418,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":34553,"byte_end":34562,"line_start":419,"line_end":419,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":34827,"byte_end":34835,"line_start":427,"line_end":427,"column_start":8,"column_end":16},"name":"from_u16","qualname":"::cast::FromPrimitive::from_u16","value":"pub fn from_u16(u16) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Convert an `u16` to return an optional value of this type. If the\n type cannot be represented by this value, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Convert an `u16` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":34661,"byte_end":34730,"line_start":424,"line_end":424,"column_start":5,"column_end":74}},{"value":"/ type cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":34735,"byte_end":34805,"line_start":425,"line_end":425,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":34810,"byte_end":34819,"line_start":426,"line_end":426,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":35086,"byte_end":35094,"line_start":434,"line_end":434,"column_start":8,"column_end":16},"name":"from_u32","qualname":"::cast::FromPrimitive::from_u32","value":"pub fn from_u32(u32) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Convert an `u32` to return an optional value of this type. If the\n type cannot be represented by this value, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Convert an `u32` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":34920,"byte_end":34989,"line_start":431,"line_end":431,"column_start":5,"column_end":74}},{"value":"/ type cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":34994,"byte_end":35064,"line_start":432,"line_end":432,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":35069,"byte_end":35078,"line_start":433,"line_end":433,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":35331,"byte_end":35339,"line_start":440,"line_end":440,"column_start":8,"column_end":16},"name":"from_u64","qualname":"::cast::FromPrimitive::from_u64","value":"pub fn from_u64(u64) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Convert an `u64` to return an optional value of this type. If the\n type cannot be represented by this value, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Convert an `u64` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":35179,"byte_end":35248,"line_start":438,"line_end":438,"column_start":5,"column_end":74}},{"value":"/ type cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":35253,"byte_end":35323,"line_start":439,"line_end":439,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":35829,"byte_end":35838,"line_start":451,"line_end":451,"column_start":8,"column_end":17},"name":"from_u128","qualname":"::cast::FromPrimitive::from_u128","value":"pub fn from_u128(u128) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Convert an `u128` to return an optional value of this type. If the\n type cannot be represented by this value, then `None` is returned.","sig":null,"attributes":[{"value":"/ Convert an `u128` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":35370,"byte_end":35440,"line_start":442,"line_end":442,"column_start":5,"column_end":75}},{"value":"/ type cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":35445,"byte_end":35515,"line_start":443,"line_end":443,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":35520,"byte_end":35523,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ This method is only available with feature `i128` enabled on Rust >= 1.26.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":35528,"byte_end":35606,"line_start":445,"line_end":445,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":35611,"byte_end":35614,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ The default implementation converts through `from_u64()`.  Types implementing","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":35619,"byte_end":35700,"line_start":447,"line_end":447,"column_start":5,"column_end":86}},{"value":"/ this trait should override this method if they can represent a greater range.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":35705,"byte_end":35786,"line_start":448,"line_end":448,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":35791,"byte_end":35800,"line_start":449,"line_end":449,"column_start":5,"column_end":14}},{"value":"cfg(has_i128)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":35805,"byte_end":35821,"line_start":450,"line_end":450,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":36095,"byte_end":36103,"line_start":458,"line_end":458,"column_start":8,"column_end":16},"name":"from_f32","qualname":"::cast::FromPrimitive::from_f32","value":"pub fn from_f32(f32) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Convert a `f32` to return an optional value of this type. If the\n type cannot be represented by this value, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Convert a `f32` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":35930,"byte_end":35998,"line_start":455,"line_end":455,"column_start":5,"column_end":73}},{"value":"/ type cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":36003,"byte_end":36073,"line_start":456,"line_end":456,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":36078,"byte_end":36087,"line_start":457,"line_end":457,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":36353,"byte_end":36361,"line_start":465,"line_end":465,"column_start":8,"column_end":16},"name":"from_f64","qualname":"::cast::FromPrimitive::from_f64","value":"pub fn from_f64(f64) -> Option<Self>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Convert a `f64` to return an optional value of this type. If the\n type cannot be represented by this value, then `None` is returned.\n","sig":null,"attributes":[{"value":"/ Convert a `f64` to return an optional value of this type. If the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":36188,"byte_end":36256,"line_start":462,"line_end":462,"column_start":5,"column_end":73}},{"value":"/ type cannot be represented by this value, then `None` is returned.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":36261,"byte_end":36331,"line_start":463,"line_end":463,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":36336,"byte_end":36345,"line_start":464,"line_end":464,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40607,"byte_end":40611,"line_start":635,"line_end":635,"column_start":8,"column_end":12},"name":"cast","qualname":"::cast::cast","value":"pub fn cast<T: NumCast, U: NumCast>(T) -> Option<U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one machine scalar to another.","sig":null,"attributes":[{"value":"/ Cast from one machine scalar to another.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40394,"byte_end":40438,"line_start":624,"line_end":624,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40439,"byte_end":40442,"line_start":625,"line_end":625,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40443,"byte_end":40457,"line_start":626,"line_end":626,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40458,"byte_end":40461,"line_start":627,"line_end":627,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40462,"byte_end":40469,"line_start":628,"line_end":628,"column_start":1,"column_end":8}},{"value":"/ # use num_traits as num;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40470,"byte_end":40498,"line_start":629,"line_end":629,"column_start":1,"column_end":29}},{"value":"/ let twenty: f32 = num::cast(0x14).unwrap();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40499,"byte_end":40546,"line_start":630,"line_end":630,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(twenty, 20f32);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40547,"byte_end":40577,"line_start":631,"line_end":631,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40578,"byte_end":40585,"line_start":632,"line_end":632,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40586,"byte_end":40589,"line_start":633,"line_end":633,"column_start":1,"column_end":4}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40590,"byte_end":40599,"line_start":634,"line_end":634,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40745,"byte_end":40752,"line_start":640,"line_end":640,"column_start":11,"column_end":18},"name":"NumCast","qualname":"::cast::NumCast","value":"NumCast: Sized + ToPrimitive","parent":null,"children":[{"krate":0,"index":171}],"decl_id":null,"docs":" An interface for casting between machine scalars.\n","sig":null,"attributes":[{"value":"/ An interface for casting between machine scalars.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40681,"byte_end":40734,"line_start":639,"line_end":639,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40903,"byte_end":40907,"line_start":643,"line_end":643,"column_start":8,"column_end":12},"name":"from","qualname":"::cast::NumCast::from","value":"pub fn from<T: ToPrimitive>(T) -> Option<Self>","parent":{"krate":0,"index":170},"children":[],"decl_id":null,"docs":" Creates a number from another value that can be converted into\n a primitive via the `ToPrimitive` trait.\n","sig":null,"attributes":[{"value":"/ Creates a number from another value that can be converted into","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40780,"byte_end":40846,"line_start":641,"line_end":641,"column_start":5,"column_end":71}},{"value":"/ a primitive via the `ToPrimitive` trait.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40851,"byte_end":40895,"line_start":642,"line_end":642,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":178},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":43041,"byte_end":43052,"line_start":718,"line_end":718,"column_start":11,"column_end":22},"name":"AsPrimitive","qualname":"::cast::AsPrimitive","value":"AsPrimitive<T>: 'static + Copy","parent":null,"children":[{"krate":0,"index":180}],"decl_id":null,"docs":" A generic interface for casting between machine scalars with the\n `as` operator, which admits narrowing and precision loss.\n Implementers of this trait AsPrimitive should behave like a primitive\n numeric type (e.g. a newtype around another primitive), and the\n intended conversion must never fail.","sig":null,"attributes":[{"value":"/ A generic interface for casting between machine scalars with the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":41935,"byte_end":42003,"line_start":683,"line_end":683,"column_start":1,"column_end":69}},{"value":"/ `as` operator, which admits narrowing and precision loss.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42004,"byte_end":42065,"line_start":684,"line_end":684,"column_start":1,"column_end":62}},{"value":"/ Implementers of this trait AsPrimitive should behave like a primitive","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42066,"byte_end":42139,"line_start":685,"line_end":685,"column_start":1,"column_end":74}},{"value":"/ numeric type (e.g. a newtype around another primitive), and the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42140,"byte_end":42207,"line_start":686,"line_end":686,"column_start":1,"column_end":68}},{"value":"/ intended conversion must never fail.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42208,"byte_end":42248,"line_start":687,"line_end":687,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42249,"byte_end":42252,"line_start":688,"line_end":688,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42253,"byte_end":42267,"line_start":689,"line_end":689,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42268,"byte_end":42271,"line_start":690,"line_end":690,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42272,"byte_end":42279,"line_start":691,"line_end":691,"column_start":1,"column_end":8}},{"value":"/ # use num_traits::AsPrimitive;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42280,"byte_end":42314,"line_start":692,"line_end":692,"column_start":1,"column_end":35}},{"value":"/ let three: i32 = (3.14159265f32).as_();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42315,"byte_end":42358,"line_start":693,"line_end":693,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(three, 3);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42359,"byte_end":42384,"line_start":694,"line_end":694,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42385,"byte_end":42392,"line_start":695,"line_end":695,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42393,"byte_end":42396,"line_start":696,"line_end":696,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42397,"byte_end":42409,"line_start":697,"line_end":697,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42410,"byte_end":42413,"line_start":698,"line_end":698,"column_start":1,"column_end":4}},{"value":"/ Currently, some uses of the `as` operator are not entirely safe.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42414,"byte_end":42482,"line_start":699,"line_end":699,"column_start":1,"column_end":69}},{"value":"/ In particular, it is undefined behavior if:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42483,"byte_end":42530,"line_start":700,"line_end":700,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42531,"byte_end":42534,"line_start":701,"line_end":701,"column_start":1,"column_end":4}},{"value":"/ - A truncated floating point value cannot fit in the target integer","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42535,"byte_end":42606,"line_start":702,"line_end":702,"column_start":1,"column_end":72}},{"value":"/   type ([#10184](https://github.com/rust-lang/rust/issues/10184));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42607,"byte_end":42677,"line_start":703,"line_end":703,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42678,"byte_end":42681,"line_start":704,"line_end":704,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42682,"byte_end":42695,"line_start":705,"line_end":705,"column_start":1,"column_end":14}},{"value":"/ # use num_traits::AsPrimitive;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42696,"byte_end":42730,"line_start":706,"line_end":706,"column_start":1,"column_end":35}},{"value":"/ let x: u8 = (1.04E+17).as_(); // UB","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42731,"byte_end":42770,"line_start":707,"line_end":707,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42771,"byte_end":42778,"line_start":708,"line_end":708,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42779,"byte_end":42782,"line_start":709,"line_end":709,"column_start":1,"column_end":4}},{"value":"/ - Or a floating point value does not fit in another floating","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42783,"byte_end":42847,"line_start":710,"line_end":710,"column_start":1,"column_end":65}},{"value":"/   point type ([#15536](https://github.com/rust-lang/rust/issues/15536)).","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42848,"byte_end":42924,"line_start":711,"line_end":711,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42925,"byte_end":42928,"line_start":712,"line_end":712,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42929,"byte_end":42942,"line_start":713,"line_end":713,"column_start":1,"column_end":14}},{"value":"/ # use num_traits::AsPrimitive;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42943,"byte_end":42977,"line_start":714,"line_end":714,"column_start":1,"column_end":35}},{"value":"/ let x: f32 = (1e300f64).as_(); // UB","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":42978,"byte_end":43018,"line_start":715,"line_end":715,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":43019,"byte_end":43026,"line_start":716,"line_end":716,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":43027,"byte_end":43030,"line_start":717,"line_end":717,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":43171,"byte_end":43174,"line_start":723,"line_end":723,"column_start":8,"column_end":11},"name":"as_","qualname":"::cast::AsPrimitive::as_","value":"pub fn as_(Self) -> T","parent":{"krate":0,"index":178},"children":[],"decl_id":null,"docs":" Convert a value to another, using the `as` operator.\n","sig":null,"attributes":[{"value":"/ Convert a value to another, using the `as` operator.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":43107,"byte_end":43163,"line_start":722,"line_end":722,"column_start":5,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":182},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"float","qualname":"::float","value":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":1983},{"krate":0,"index":2041},{"krate":0,"index":2099},{"krate":0,"index":2116},{"krate":0,"index":2133}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":44825,"byte_end":44834,"line_start":13,"line_end":13,"column_start":11,"column_end":20},"name":"FloatCore","qualname":"::float::FloatCore","value":"FloatCore: Num + NumCast + Neg<Output = Self> + PartialOrd + Copy","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221}],"decl_id":null,"docs":" Generic trait for floating point numbers that works with `no_std`.","sig":null,"attributes":[{"value":"/ Generic trait for floating point numbers that works with `no_std`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":44683,"byte_end":44753,"line_start":10,"line_end":10,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":44754,"byte_end":44757,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This trait implements a subset of the `Float` trait.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":44758,"byte_end":44814,"line_start":12,"line_end":12,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45231,"byte_end":45239,"line_start":29,"line_end":29,"column_start":8,"column_end":16},"name":"infinity","qualname":"::float::FloatCore::infinity","value":"pub fn infinity() -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns positive infinity.","sig":null,"attributes":[{"value":"/ Returns positive infinity.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":44897,"byte_end":44927,"line_start":14,"line_end":14,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":44932,"byte_end":44935,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":44940,"byte_end":44954,"line_start":16,"line_end":16,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":44959,"byte_end":44962,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":44967,"byte_end":44974,"line_start":18,"line_end":18,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":44979,"byte_end":45016,"line_start":19,"line_end":19,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45021,"byte_end":45045,"line_start":20,"line_end":20,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45050,"byte_end":45053,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45058,"byte_end":45092,"line_start":22,"line_end":22,"column_start":5,"column_end":39}},{"value":"/     assert!(T::infinity() == x);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45097,"byte_end":45133,"line_start":23,"line_end":23,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45138,"byte_end":45143,"line_start":24,"line_end":24,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45148,"byte_end":45151,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45156,"byte_end":45181,"line_start":26,"line_end":26,"column_start":5,"column_end":30}},{"value":"/ check(f64::INFINITY);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45186,"byte_end":45211,"line_start":27,"line_end":27,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45216,"byte_end":45223,"line_start":28,"line_end":28,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45602,"byte_end":45614,"line_start":46,"line_end":46,"column_start":8,"column_end":20},"name":"neg_infinity","qualname":"::float::FloatCore::neg_infinity","value":"pub fn neg_infinity() -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns negative infinity.","sig":null,"attributes":[{"value":"/ Returns negative infinity.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45256,"byte_end":45286,"line_start":31,"line_end":31,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45291,"byte_end":45294,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45299,"byte_end":45313,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45318,"byte_end":45321,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45326,"byte_end":45333,"line_start":35,"line_end":35,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45338,"byte_end":45375,"line_start":36,"line_end":36,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45380,"byte_end":45404,"line_start":37,"line_end":37,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45409,"byte_end":45412,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45417,"byte_end":45451,"line_start":39,"line_end":39,"column_start":5,"column_end":39}},{"value":"/     assert!(T::neg_infinity() == x);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45456,"byte_end":45496,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45501,"byte_end":45506,"line_start":41,"line_end":41,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45511,"byte_end":45514,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ check(f32::NEG_INFINITY);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45519,"byte_end":45548,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/ check(f64::NEG_INFINITY);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45553,"byte_end":45582,"line_start":44,"line_end":44,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45587,"byte_end":45594,"line_start":45,"line_end":45,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45924,"byte_end":45927,"line_start":63,"line_end":63,"column_start":8,"column_end":11},"name":"nan","qualname":"::float::FloatCore::nan","value":"pub fn nan() -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns NaN.","sig":null,"attributes":[{"value":"/ Returns NaN.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45631,"byte_end":45647,"line_start":48,"line_end":48,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45652,"byte_end":45655,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45660,"byte_end":45674,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45679,"byte_end":45682,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45687,"byte_end":45694,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45699,"byte_end":45736,"line_start":53,"line_end":53,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45741,"byte_end":45744,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>() {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45749,"byte_end":45779,"line_start":55,"line_end":55,"column_start":5,"column_end":35}},{"value":"/     let n = T::nan();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45784,"byte_end":45809,"line_start":56,"line_end":56,"column_start":5,"column_end":30}},{"value":"/     assert!(n != n);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45814,"byte_end":45838,"line_start":57,"line_end":57,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45843,"byte_end":45848,"line_start":58,"line_end":58,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45853,"byte_end":45856,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ check::<f32>();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45861,"byte_end":45880,"line_start":60,"line_end":60,"column_start":5,"column_end":24}},{"value":"/ check::<f64>();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45885,"byte_end":45904,"line_start":61,"line_end":61,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45909,"byte_end":45916,"line_start":62,"line_end":62,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46343,"byte_end":46351,"line_start":82,"line_end":82,"column_start":8,"column_end":16},"name":"neg_zero","qualname":"::float::FloatCore::neg_zero","value":"pub fn neg_zero() -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns `-0.0`.","sig":null,"attributes":[{"value":"/ Returns `-0.0`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45944,"byte_end":45963,"line_start":65,"line_end":65,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45968,"byte_end":45971,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45976,"byte_end":45990,"line_start":67,"line_end":67,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":45995,"byte_end":45998,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46003,"byte_end":46010,"line_start":69,"line_end":69,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46015,"byte_end":46052,"line_start":70,"line_end":70,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46057,"byte_end":46081,"line_start":71,"line_end":71,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46086,"byte_end":46089,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(n: T) {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46094,"byte_end":46128,"line_start":73,"line_end":73,"column_start":5,"column_end":39}},{"value":"/     let z = T::neg_zero();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46133,"byte_end":46163,"line_start":74,"line_end":74,"column_start":5,"column_end":35}},{"value":"/     assert!(z.is_zero());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46168,"byte_end":46197,"line_start":75,"line_end":75,"column_start":5,"column_end":34}},{"value":"/     assert!(T::one() / z == n);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46202,"byte_end":46237,"line_start":76,"line_end":76,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46242,"byte_end":46247,"line_start":77,"line_end":77,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46252,"byte_end":46255,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ check(f32::NEG_INFINITY);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46260,"byte_end":46289,"line_start":79,"line_end":79,"column_start":5,"column_end":34}},{"value":"/ check(f64::NEG_INFINITY);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46294,"byte_end":46323,"line_start":80,"line_end":80,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46328,"byte_end":46335,"line_start":81,"line_end":81,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46730,"byte_end":46739,"line_start":99,"line_end":99,"column_start":8,"column_end":17},"name":"min_value","qualname":"::float::FloatCore::min_value","value":"pub fn min_value() -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns the smallest finite value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the smallest finite value that this type can represent.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46368,"byte_end":46435,"line_start":84,"line_end":84,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46440,"byte_end":46443,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46448,"byte_end":46462,"line_start":86,"line_end":86,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46467,"byte_end":46470,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46475,"byte_end":46482,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46487,"byte_end":46524,"line_start":89,"line_end":89,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46529,"byte_end":46553,"line_start":90,"line_end":90,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46558,"byte_end":46561,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46566,"byte_end":46600,"line_start":92,"line_end":92,"column_start":5,"column_end":39}},{"value":"/     assert!(T::min_value() == x);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46605,"byte_end":46642,"line_start":93,"line_end":93,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46647,"byte_end":46652,"line_start":94,"line_end":94,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46657,"byte_end":46660,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ check(f32::MIN);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46665,"byte_end":46685,"line_start":96,"line_end":96,"column_start":5,"column_end":25}},{"value":"/ check(f64::MIN);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46690,"byte_end":46710,"line_start":97,"line_end":97,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46715,"byte_end":46722,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47159,"byte_end":47177,"line_start":116,"line_end":116,"column_start":8,"column_end":26},"name":"min_positive_value","qualname":"::float::FloatCore::min_positive_value","value":"pub fn min_positive_value() -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns the smallest positive, normalized value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the smallest positive, normalized value that this type can represent.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46756,"byte_end":46837,"line_start":101,"line_end":101,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46842,"byte_end":46845,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46850,"byte_end":46864,"line_start":103,"line_end":103,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46869,"byte_end":46872,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46877,"byte_end":46884,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46889,"byte_end":46926,"line_start":106,"line_end":106,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46931,"byte_end":46955,"line_start":107,"line_end":107,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46960,"byte_end":46963,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":46968,"byte_end":47002,"line_start":109,"line_end":109,"column_start":5,"column_end":39}},{"value":"/     assert!(T::min_positive_value() == x);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47007,"byte_end":47053,"line_start":110,"line_end":110,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47058,"byte_end":47063,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47068,"byte_end":47071,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ check(f32::MIN_POSITIVE);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47076,"byte_end":47105,"line_start":113,"line_end":113,"column_start":5,"column_end":34}},{"value":"/ check(f64::MIN_POSITIVE);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47110,"byte_end":47139,"line_start":114,"line_end":114,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47144,"byte_end":47151,"line_start":115,"line_end":115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47539,"byte_end":47546,"line_start":133,"line_end":133,"column_start":8,"column_end":15},"name":"epsilon","qualname":"::float::FloatCore::epsilon","value":"pub fn epsilon() -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns epsilon, a small positive value.","sig":null,"attributes":[{"value":"/ Returns epsilon, a small positive value.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47194,"byte_end":47238,"line_start":118,"line_end":118,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47243,"byte_end":47246,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47251,"byte_end":47265,"line_start":120,"line_end":120,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47270,"byte_end":47273,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47278,"byte_end":47285,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47290,"byte_end":47327,"line_start":123,"line_end":123,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47332,"byte_end":47356,"line_start":124,"line_end":124,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47361,"byte_end":47364,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47369,"byte_end":47403,"line_start":126,"line_end":126,"column_start":5,"column_end":39}},{"value":"/     assert!(T::epsilon() == x);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47408,"byte_end":47443,"line_start":127,"line_end":127,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47448,"byte_end":47453,"line_start":128,"line_end":128,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47458,"byte_end":47461,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ check(f32::EPSILON);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47466,"byte_end":47490,"line_start":130,"line_end":130,"column_start":5,"column_end":29}},{"value":"/ check(f64::EPSILON);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47495,"byte_end":47519,"line_start":131,"line_end":131,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47524,"byte_end":47531,"line_start":132,"line_end":132,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47924,"byte_end":47933,"line_start":150,"line_end":150,"column_start":8,"column_end":17},"name":"max_value","qualname":"::float::FloatCore::max_value","value":"pub fn max_value() -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns the largest finite value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the largest finite value that this type can represent.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47563,"byte_end":47629,"line_start":135,"line_end":135,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47634,"byte_end":47637,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47642,"byte_end":47656,"line_start":137,"line_end":137,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47661,"byte_end":47664,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47669,"byte_end":47676,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47681,"byte_end":47718,"line_start":140,"line_end":140,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47723,"byte_end":47747,"line_start":141,"line_end":141,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47752,"byte_end":47755,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T) {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47760,"byte_end":47794,"line_start":143,"line_end":143,"column_start":5,"column_end":39}},{"value":"/     assert!(T::max_value() == x);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47799,"byte_end":47836,"line_start":144,"line_end":144,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47841,"byte_end":47846,"line_start":145,"line_end":145,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47851,"byte_end":47854,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ check(f32::MAX);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47859,"byte_end":47879,"line_start":147,"line_end":147,"column_start":5,"column_end":25}},{"value":"/ check(f64::MAX);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47884,"byte_end":47904,"line_start":148,"line_end":148,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47909,"byte_end":47916,"line_start":149,"line_end":149,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48383,"byte_end":48389,"line_start":170,"line_end":170,"column_start":8,"column_end":14},"name":"is_nan","qualname":"::float::FloatCore::is_nan","value":"pub fn is_nan(Self) -> bool","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns `true` if the number is NaN.","sig":null,"attributes":[{"value":"/ Returns `true` if the number is NaN.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47950,"byte_end":47990,"line_start":152,"line_end":152,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":47995,"byte_end":47998,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48003,"byte_end":48017,"line_start":154,"line_end":154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48022,"byte_end":48025,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48030,"byte_end":48037,"line_start":156,"line_end":156,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48042,"byte_end":48079,"line_start":157,"line_end":157,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48084,"byte_end":48108,"line_start":158,"line_end":158,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48113,"byte_end":48116,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48121,"byte_end":48164,"line_start":160,"line_end":160,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_nan() == p);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48169,"byte_end":48202,"line_start":161,"line_end":161,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48207,"byte_end":48212,"line_start":162,"line_end":162,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48217,"byte_end":48220,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ check(f32::NAN, true);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48225,"byte_end":48251,"line_start":164,"line_end":164,"column_start":5,"column_end":31}},{"value":"/ check(f32::INFINITY, false);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48256,"byte_end":48288,"line_start":165,"line_end":165,"column_start":5,"column_end":37}},{"value":"/ check(f64::NAN, true);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48293,"byte_end":48319,"line_start":166,"line_end":166,"column_start":5,"column_end":31}},{"value":"/ check(0.0f64, false);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48324,"byte_end":48349,"line_start":167,"line_end":167,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48354,"byte_end":48361,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48366,"byte_end":48375,"line_start":169,"line_end":169,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48966,"byte_end":48977,"line_start":194,"line_end":194,"column_start":8,"column_end":19},"name":"is_infinite","qualname":"::float::FloatCore::is_infinite","value":"pub fn is_infinite(Self) -> bool","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns `true` if the number is infinite.","sig":null,"attributes":[{"value":"/ Returns `true` if the number is infinite.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48438,"byte_end":48483,"line_start":174,"line_end":174,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48488,"byte_end":48491,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48496,"byte_end":48510,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48515,"byte_end":48518,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48523,"byte_end":48530,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48535,"byte_end":48572,"line_start":179,"line_end":179,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48577,"byte_end":48601,"line_start":180,"line_end":180,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48606,"byte_end":48609,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48614,"byte_end":48657,"line_start":182,"line_end":182,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_infinite() == p);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48662,"byte_end":48700,"line_start":183,"line_end":183,"column_start":5,"column_end":43}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48705,"byte_end":48710,"line_start":184,"line_end":184,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48715,"byte_end":48718,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, true);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48723,"byte_end":48754,"line_start":186,"line_end":186,"column_start":5,"column_end":36}},{"value":"/ check(f32::NEG_INFINITY, true);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48759,"byte_end":48794,"line_start":187,"line_end":187,"column_start":5,"column_end":40}},{"value":"/ check(f32::NAN, false);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48799,"byte_end":48826,"line_start":188,"line_end":188,"column_start":5,"column_end":32}},{"value":"/ check(f64::INFINITY, true);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48831,"byte_end":48862,"line_start":189,"line_end":189,"column_start":5,"column_end":36}},{"value":"/ check(f64::NEG_INFINITY, true);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48867,"byte_end":48902,"line_start":190,"line_end":190,"column_start":5,"column_end":40}},{"value":"/ check(0.0f64, false);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48907,"byte_end":48932,"line_start":191,"line_end":191,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48937,"byte_end":48944,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":48949,"byte_end":48958,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49578,"byte_end":49587,"line_start":217,"line_end":217,"column_start":8,"column_end":17},"name":"is_finite","qualname":"::float::FloatCore::is_finite","value":"pub fn is_finite(Self) -> bool","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns `true` if the number is neither infinite or NaN.","sig":null,"attributes":[{"value":"/ Returns `true` if the number is neither infinite or NaN.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49070,"byte_end":49130,"line_start":198,"line_end":198,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49135,"byte_end":49138,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49143,"byte_end":49157,"line_start":200,"line_end":200,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49162,"byte_end":49165,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49170,"byte_end":49177,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49182,"byte_end":49219,"line_start":203,"line_end":203,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49224,"byte_end":49248,"line_start":204,"line_end":204,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49253,"byte_end":49256,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49261,"byte_end":49304,"line_start":206,"line_end":206,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_finite() == p);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49309,"byte_end":49345,"line_start":207,"line_end":207,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49350,"byte_end":49355,"line_start":208,"line_end":208,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49360,"byte_end":49363,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, false);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49368,"byte_end":49400,"line_start":210,"line_end":210,"column_start":5,"column_end":37}},{"value":"/ check(f32::MAX, true);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49405,"byte_end":49431,"line_start":211,"line_end":211,"column_start":5,"column_end":31}},{"value":"/ check(f64::NEG_INFINITY, false);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49436,"byte_end":49472,"line_start":212,"line_end":212,"column_start":5,"column_end":41}},{"value":"/ check(f64::MIN_POSITIVE, true);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49477,"byte_end":49512,"line_start":213,"line_end":213,"column_start":5,"column_end":40}},{"value":"/ check(f64::NAN, false);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49517,"byte_end":49544,"line_start":214,"line_end":214,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49549,"byte_end":49556,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49561,"byte_end":49570,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50185,"byte_end":50194,"line_start":240,"line_end":240,"column_start":8,"column_end":17},"name":"is_normal","qualname":"::float::FloatCore::is_normal","value":"pub fn is_normal(Self) -> bool","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns `true` if the number is neither zero, infinite, subnormal or NaN.","sig":null,"attributes":[{"value":"/ Returns `true` if the number is neither zero, infinite, subnormal or NaN.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49662,"byte_end":49739,"line_start":221,"line_end":221,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49744,"byte_end":49747,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49752,"byte_end":49766,"line_start":223,"line_end":223,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49771,"byte_end":49774,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49779,"byte_end":49786,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49791,"byte_end":49828,"line_start":226,"line_end":226,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49833,"byte_end":49857,"line_start":227,"line_end":227,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49862,"byte_end":49865,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49870,"byte_end":49913,"line_start":229,"line_end":229,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_normal() == p);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49918,"byte_end":49954,"line_start":230,"line_end":230,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49959,"byte_end":49964,"line_start":231,"line_end":231,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49969,"byte_end":49972,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, false);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":49977,"byte_end":50009,"line_start":233,"line_end":233,"column_start":5,"column_end":37}},{"value":"/ check(f32::MAX, true);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50014,"byte_end":50040,"line_start":234,"line_end":234,"column_start":5,"column_end":31}},{"value":"/ check(f64::NEG_INFINITY, false);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50045,"byte_end":50081,"line_start":235,"line_end":235,"column_start":5,"column_end":41}},{"value":"/ check(f64::MIN_POSITIVE, true);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50086,"byte_end":50121,"line_start":236,"line_end":236,"column_start":5,"column_end":40}},{"value":"/ check(0.0f64, false);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50126,"byte_end":50151,"line_start":237,"line_end":237,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50156,"byte_end":50163,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50168,"byte_end":50177,"line_start":239,"line_end":239,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51033,"byte_end":51041,"line_start":266,"line_end":266,"column_start":8,"column_end":16},"name":"classify","qualname":"::float::FloatCore::classify","value":"pub fn classify(Self) -> FpCategory","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns the floating point category of the number. If only one property\n is going to be tested, it is generally faster to use the specific\n predicate instead.","sig":null,"attributes":[{"value":"/ Returns the floating point category of the number. If only one property","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50268,"byte_end":50343,"line_start":244,"line_end":244,"column_start":5,"column_end":80}},{"value":"/ is going to be tested, it is generally faster to use the specific","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50348,"byte_end":50417,"line_start":245,"line_end":245,"column_start":5,"column_end":74}},{"value":"/ predicate instead.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50422,"byte_end":50444,"line_start":246,"line_end":246,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50449,"byte_end":50452,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50457,"byte_end":50471,"line_start":248,"line_end":248,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50476,"byte_end":50479,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50484,"byte_end":50491,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50496,"byte_end":50533,"line_start":251,"line_end":251,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50538,"byte_end":50562,"line_start":252,"line_end":252,"column_start":5,"column_end":29}},{"value":"/ use std::num::FpCategory;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50567,"byte_end":50596,"line_start":253,"line_end":253,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50601,"byte_end":50604,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, c: FpCategory) {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50609,"byte_end":50658,"line_start":255,"line_end":255,"column_start":5,"column_end":54}},{"value":"/     assert!(x.classify() == c);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50663,"byte_end":50698,"line_start":256,"line_end":256,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50703,"byte_end":50708,"line_start":257,"line_end":257,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50713,"byte_end":50716,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, FpCategory::Infinite);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50721,"byte_end":50768,"line_start":259,"line_end":259,"column_start":5,"column_end":52}},{"value":"/ check(f32::MAX, FpCategory::Normal);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50773,"byte_end":50813,"line_start":260,"line_end":260,"column_start":5,"column_end":45}},{"value":"/ check(f64::NAN, FpCategory::Nan);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50818,"byte_end":50855,"line_start":261,"line_end":261,"column_start":5,"column_end":42}},{"value":"/ check(f64::MIN_POSITIVE, FpCategory::Normal);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50860,"byte_end":50909,"line_start":262,"line_end":262,"column_start":5,"column_end":54}},{"value":"/ check(f64::MIN_POSITIVE / 2.0, FpCategory::Subnormal);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50914,"byte_end":50972,"line_start":263,"line_end":263,"column_start":5,"column_end":63}},{"value":"/ check(0.0f64, FpCategory::Zero);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":50977,"byte_end":51013,"line_start":264,"line_end":264,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51018,"byte_end":51025,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51674,"byte_end":51679,"line_start":291,"line_end":291,"column_start":8,"column_end":13},"name":"floor","qualname":"::float::FloatCore::floor","value":"pub fn floor(Self) -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns the largest integer less than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the largest integer less than or equal to a number.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51068,"byte_end":51131,"line_start":268,"line_end":268,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51136,"byte_end":51139,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51144,"byte_end":51158,"line_start":270,"line_end":270,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51163,"byte_end":51166,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51171,"byte_end":51178,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51183,"byte_end":51220,"line_start":273,"line_end":273,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51225,"byte_end":51249,"line_start":274,"line_end":274,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51254,"byte_end":51257,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51262,"byte_end":51302,"line_start":276,"line_end":276,"column_start":5,"column_end":45}},{"value":"/     assert!(x.floor() == y);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51307,"byte_end":51339,"line_start":277,"line_end":277,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51344,"byte_end":51349,"line_start":278,"line_end":278,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51354,"byte_end":51357,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, f32::INFINITY);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51362,"byte_end":51402,"line_start":280,"line_end":280,"column_start":5,"column_end":45}},{"value":"/ check(0.9f32, 0.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51407,"byte_end":51430,"line_start":281,"line_end":281,"column_start":5,"column_end":28}},{"value":"/ check(1.0f32, 1.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51435,"byte_end":51458,"line_start":282,"line_end":282,"column_start":5,"column_end":28}},{"value":"/ check(1.1f32, 1.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51463,"byte_end":51486,"line_start":283,"line_end":283,"column_start":5,"column_end":28}},{"value":"/ check(-0.0f64, 0.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51491,"byte_end":51515,"line_start":284,"line_end":284,"column_start":5,"column_end":29}},{"value":"/ check(-0.9f64, -1.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51520,"byte_end":51545,"line_start":285,"line_end":285,"column_start":5,"column_end":30}},{"value":"/ check(-1.0f64, -1.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51550,"byte_end":51575,"line_start":286,"line_end":286,"column_start":5,"column_end":30}},{"value":"/ check(-1.1f64, -2.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51580,"byte_end":51605,"line_start":287,"line_end":287,"column_start":5,"column_end":30}},{"value":"/ check(f64::MIN, f64::MIN);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51610,"byte_end":51640,"line_start":288,"line_end":288,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51645,"byte_end":51652,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51657,"byte_end":51666,"line_start":290,"line_end":290,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52525,"byte_end":52529,"line_start":325,"line_end":325,"column_start":8,"column_end":12},"name":"ceil","qualname":"::float::FloatCore::ceil","value":"pub fn ceil(Self) -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns the smallest integer greater than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the smallest integer greater than or equal to a number.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51916,"byte_end":51983,"line_start":302,"line_end":302,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51988,"byte_end":51991,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":51996,"byte_end":52010,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52015,"byte_end":52018,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52023,"byte_end":52030,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52035,"byte_end":52072,"line_start":307,"line_end":307,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52077,"byte_end":52101,"line_start":308,"line_end":308,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52106,"byte_end":52109,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52114,"byte_end":52154,"line_start":310,"line_end":310,"column_start":5,"column_end":45}},{"value":"/     assert!(x.ceil() == y);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52159,"byte_end":52190,"line_start":311,"line_end":311,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52195,"byte_end":52200,"line_start":312,"line_end":312,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52205,"byte_end":52208,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, f32::INFINITY);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52213,"byte_end":52253,"line_start":314,"line_end":314,"column_start":5,"column_end":45}},{"value":"/ check(0.9f32, 1.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52258,"byte_end":52281,"line_start":315,"line_end":315,"column_start":5,"column_end":28}},{"value":"/ check(1.0f32, 1.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52286,"byte_end":52309,"line_start":316,"line_end":316,"column_start":5,"column_end":28}},{"value":"/ check(1.1f32, 2.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52314,"byte_end":52337,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/ check(-0.0f64, 0.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52342,"byte_end":52366,"line_start":318,"line_end":318,"column_start":5,"column_end":29}},{"value":"/ check(-0.9f64, -0.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52371,"byte_end":52396,"line_start":319,"line_end":319,"column_start":5,"column_end":30}},{"value":"/ check(-1.0f64, -1.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52401,"byte_end":52426,"line_start":320,"line_end":320,"column_start":5,"column_end":30}},{"value":"/ check(-1.1f64, -1.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52431,"byte_end":52456,"line_start":321,"line_end":321,"column_start":5,"column_end":30}},{"value":"/ check(f64::MIN, f64::MIN);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52461,"byte_end":52491,"line_start":322,"line_end":322,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52496,"byte_end":52503,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52508,"byte_end":52517,"line_start":324,"line_end":324,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53361,"byte_end":53366,"line_start":358,"line_end":358,"column_start":8,"column_end":13},"name":"round","qualname":"::float::FloatCore::round","value":"pub fn round(Self) -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns the nearest integer to a number. Round half-way cases away from `0.0`.","sig":null,"attributes":[{"value":"/ Returns the nearest integer to a number. Round half-way cases away from `0.0`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52766,"byte_end":52848,"line_start":336,"line_end":336,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52853,"byte_end":52856,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52861,"byte_end":52875,"line_start":338,"line_end":338,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52880,"byte_end":52883,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52888,"byte_end":52895,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52900,"byte_end":52937,"line_start":341,"line_end":341,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52942,"byte_end":52966,"line_start":342,"line_end":342,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52971,"byte_end":52974,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":52979,"byte_end":53019,"line_start":344,"line_end":344,"column_start":5,"column_end":45}},{"value":"/     assert!(x.round() == y);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53024,"byte_end":53056,"line_start":345,"line_end":345,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53061,"byte_end":53066,"line_start":346,"line_end":346,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53071,"byte_end":53074,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, f32::INFINITY);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53079,"byte_end":53119,"line_start":348,"line_end":348,"column_start":5,"column_end":45}},{"value":"/ check(0.4f32, 0.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53124,"byte_end":53147,"line_start":349,"line_end":349,"column_start":5,"column_end":28}},{"value":"/ check(0.5f32, 1.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53152,"byte_end":53175,"line_start":350,"line_end":350,"column_start":5,"column_end":28}},{"value":"/ check(0.6f32, 1.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53180,"byte_end":53203,"line_start":351,"line_end":351,"column_start":5,"column_end":28}},{"value":"/ check(-0.4f64, 0.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53208,"byte_end":53232,"line_start":352,"line_end":352,"column_start":5,"column_end":29}},{"value":"/ check(-0.5f64, -1.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53237,"byte_end":53262,"line_start":353,"line_end":353,"column_start":5,"column_end":30}},{"value":"/ check(-0.6f64, -1.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53267,"byte_end":53292,"line_start":354,"line_end":354,"column_start":5,"column_end":30}},{"value":"/ check(f64::MIN, f64::MIN);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53297,"byte_end":53327,"line_start":355,"line_end":355,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53332,"byte_end":53339,"line_start":356,"line_end":356,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53344,"byte_end":53353,"line_start":357,"line_end":357,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54457,"byte_end":54462,"line_start":402,"line_end":402,"column_start":8,"column_end":13},"name":"trunc","qualname":"::float::FloatCore::trunc","value":"pub fn trunc(Self) -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Return the integer part of a number.","sig":null,"attributes":[{"value":"/ Return the integer part of a number.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53874,"byte_end":53914,"line_start":379,"line_end":379,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53919,"byte_end":53922,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53927,"byte_end":53941,"line_start":381,"line_end":381,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53946,"byte_end":53949,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53954,"byte_end":53961,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":53966,"byte_end":54003,"line_start":384,"line_end":384,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54008,"byte_end":54032,"line_start":385,"line_end":385,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54037,"byte_end":54040,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54045,"byte_end":54085,"line_start":387,"line_end":387,"column_start":5,"column_end":45}},{"value":"/     assert!(x.trunc() == y);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54090,"byte_end":54122,"line_start":388,"line_end":388,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54127,"byte_end":54132,"line_start":389,"line_end":389,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54137,"byte_end":54140,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, f32::INFINITY);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54145,"byte_end":54185,"line_start":391,"line_end":391,"column_start":5,"column_end":45}},{"value":"/ check(0.9f32, 0.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54190,"byte_end":54213,"line_start":392,"line_end":392,"column_start":5,"column_end":28}},{"value":"/ check(1.0f32, 1.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54218,"byte_end":54241,"line_start":393,"line_end":393,"column_start":5,"column_end":28}},{"value":"/ check(1.1f32, 1.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54246,"byte_end":54269,"line_start":394,"line_end":394,"column_start":5,"column_end":28}},{"value":"/ check(-0.0f64, 0.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54274,"byte_end":54298,"line_start":395,"line_end":395,"column_start":5,"column_end":29}},{"value":"/ check(-0.9f64, -0.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54303,"byte_end":54328,"line_start":396,"line_end":396,"column_start":5,"column_end":30}},{"value":"/ check(-1.0f64, -1.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54333,"byte_end":54358,"line_start":397,"line_end":397,"column_start":5,"column_end":30}},{"value":"/ check(-1.1f64, -1.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54363,"byte_end":54388,"line_start":398,"line_end":398,"column_start":5,"column_end":30}},{"value":"/ check(f64::MIN, f64::MIN);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54393,"byte_end":54423,"line_start":399,"line_end":399,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54428,"byte_end":54435,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54440,"byte_end":54449,"line_start":401,"line_end":401,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55183,"byte_end":55188,"line_start":434,"line_end":434,"column_start":8,"column_end":13},"name":"fract","qualname":"::float::FloatCore::fract","value":"pub fn fract(Self) -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns the fractional part of a number.","sig":null,"attributes":[{"value":"/ Returns the fractional part of a number.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54609,"byte_end":54653,"line_start":411,"line_end":411,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54658,"byte_end":54661,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54666,"byte_end":54680,"line_start":413,"line_end":413,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54685,"byte_end":54688,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54693,"byte_end":54700,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54705,"byte_end":54742,"line_start":416,"line_end":416,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54747,"byte_end":54771,"line_start":417,"line_end":417,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54776,"byte_end":54779,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54784,"byte_end":54824,"line_start":419,"line_end":419,"column_start":5,"column_end":45}},{"value":"/     assert!(x.fract() == y);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54829,"byte_end":54861,"line_start":420,"line_end":420,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54866,"byte_end":54871,"line_start":421,"line_end":421,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54876,"byte_end":54879,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ check(f32::MAX, 0.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54884,"byte_end":54909,"line_start":423,"line_end":423,"column_start":5,"column_end":30}},{"value":"/ check(0.75f32, 0.75);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54914,"byte_end":54939,"line_start":424,"line_end":424,"column_start":5,"column_end":30}},{"value":"/ check(1.0f32, 0.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54944,"byte_end":54967,"line_start":425,"line_end":425,"column_start":5,"column_end":28}},{"value":"/ check(1.25f32, 0.25);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":54972,"byte_end":54997,"line_start":426,"line_end":426,"column_start":5,"column_end":30}},{"value":"/ check(-0.0f64, 0.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55002,"byte_end":55026,"line_start":427,"line_end":427,"column_start":5,"column_end":29}},{"value":"/ check(-0.75f64, -0.75);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55031,"byte_end":55058,"line_start":428,"line_end":428,"column_start":5,"column_end":32}},{"value":"/ check(-1.0f64, 0.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55063,"byte_end":55087,"line_start":429,"line_end":429,"column_start":5,"column_end":29}},{"value":"/ check(-1.25f64, -0.25);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55092,"byte_end":55119,"line_start":430,"line_end":430,"column_start":5,"column_end":32}},{"value":"/ check(f64::MIN, 0.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55124,"byte_end":55149,"line_start":431,"line_end":431,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55154,"byte_end":55161,"line_start":432,"line_end":432,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55166,"byte_end":55175,"line_start":433,"line_end":433,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55893,"byte_end":55896,"line_start":463,"line_end":463,"column_start":8,"column_end":11},"name":"abs","qualname":"::float::FloatCore::abs","value":"pub fn abs(Self) -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Computes the absolute value of `self`. Returns `FloatCore::nan()` if the\n number is `FloatCore::nan()`.","sig":null,"attributes":[{"value":"/ Computes the absolute value of `self`. Returns `FloatCore::nan()` if the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55327,"byte_end":55403,"line_start":442,"line_end":442,"column_start":5,"column_end":81}},{"value":"/ number is `FloatCore::nan()`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55408,"byte_end":55441,"line_start":443,"line_end":443,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55446,"byte_end":55449,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55454,"byte_end":55468,"line_start":445,"line_end":445,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55473,"byte_end":55476,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55481,"byte_end":55488,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55493,"byte_end":55530,"line_start":448,"line_end":448,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55535,"byte_end":55559,"line_start":449,"line_end":449,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55564,"byte_end":55567,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55572,"byte_end":55612,"line_start":451,"line_end":451,"column_start":5,"column_end":45}},{"value":"/     assert!(x.abs() == y);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55617,"byte_end":55647,"line_start":452,"line_end":452,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55652,"byte_end":55657,"line_start":453,"line_end":453,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55662,"byte_end":55665,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, f32::INFINITY);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55670,"byte_end":55710,"line_start":455,"line_end":455,"column_start":5,"column_end":45}},{"value":"/ check(1.0f32, 1.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55715,"byte_end":55738,"line_start":456,"line_end":456,"column_start":5,"column_end":28}},{"value":"/ check(0.0f64, 0.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55743,"byte_end":55766,"line_start":457,"line_end":457,"column_start":5,"column_end":28}},{"value":"/ check(-0.0f64, 0.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55771,"byte_end":55795,"line_start":458,"line_end":458,"column_start":5,"column_end":29}},{"value":"/ check(-1.0f64, 1.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55800,"byte_end":55824,"line_start":459,"line_end":459,"column_start":5,"column_end":29}},{"value":"/ check(f64::MIN, f64::MAX);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55829,"byte_end":55859,"line_start":460,"line_end":460,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55864,"byte_end":55871,"line_start":461,"line_end":461,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":55876,"byte_end":55885,"line_start":462,"line_end":462,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56820,"byte_end":56826,"line_start":497,"line_end":497,"column_start":8,"column_end":14},"name":"signum","qualname":"::float::FloatCore::signum","value":"pub fn signum(Self) -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns a number that represents the sign of `self`.","sig":null,"attributes":[{"value":"/ Returns a number that represents the sign of `self`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56089,"byte_end":56145,"line_start":473,"line_end":473,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56150,"byte_end":56153,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ - `1.0` if the number is positive, `+0.0` or `FloatCore::infinity()`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56158,"byte_end":56230,"line_start":475,"line_end":475,"column_start":5,"column_end":77}},{"value":"/ - `-1.0` if the number is negative, `-0.0` or `FloatCore::neg_infinity()`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56235,"byte_end":56312,"line_start":476,"line_end":476,"column_start":5,"column_end":82}},{"value":"/ - `FloatCore::nan()` if the number is `FloatCore::nan()`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56317,"byte_end":56377,"line_start":477,"line_end":477,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56382,"byte_end":56385,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56390,"byte_end":56404,"line_start":479,"line_end":479,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56409,"byte_end":56412,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56417,"byte_end":56424,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56429,"byte_end":56466,"line_start":482,"line_end":482,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56471,"byte_end":56495,"line_start":483,"line_end":483,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56500,"byte_end":56503,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56508,"byte_end":56548,"line_start":485,"line_end":485,"column_start":5,"column_end":45}},{"value":"/     assert!(x.signum() == y);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56553,"byte_end":56586,"line_start":486,"line_end":486,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56591,"byte_end":56596,"line_start":487,"line_end":487,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56601,"byte_end":56604,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, 1.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56609,"byte_end":56639,"line_start":489,"line_end":489,"column_start":5,"column_end":35}},{"value":"/ check(3.0f32, 1.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56644,"byte_end":56667,"line_start":490,"line_end":490,"column_start":5,"column_end":28}},{"value":"/ check(0.0f32, 1.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56672,"byte_end":56695,"line_start":491,"line_end":491,"column_start":5,"column_end":28}},{"value":"/ check(-0.0f64, -1.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56700,"byte_end":56725,"line_start":492,"line_end":492,"column_start":5,"column_end":30}},{"value":"/ check(-3.0f64, -1.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56730,"byte_end":56755,"line_start":493,"line_end":493,"column_start":5,"column_end":30}},{"value":"/ check(f64::MIN, -1.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56760,"byte_end":56786,"line_start":494,"line_end":494,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56791,"byte_end":56798,"line_start":495,"line_end":495,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":56803,"byte_end":56812,"line_start":496,"line_end":496,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57688,"byte_end":57704,"line_start":530,"line_end":530,"column_start":8,"column_end":24},"name":"is_sign_positive","qualname":"::float::FloatCore::is_sign_positive","value":"pub fn is_sign_positive(Self) -> bool","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is positive, including `+0.0` and\n `FloatCore::infinity()`, and since Rust 1.20 also\n `FloatCore::nan()`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is positive, including `+0.0` and","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57025,"byte_end":57087,"line_start":507,"line_end":507,"column_start":5,"column_end":67}},{"value":"/ `FloatCore::infinity()`, and since Rust 1.20 also","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57092,"byte_end":57145,"line_start":508,"line_end":508,"column_start":5,"column_end":58}},{"value":"/ `FloatCore::nan()`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57150,"byte_end":57173,"line_start":509,"line_end":509,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57178,"byte_end":57181,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57186,"byte_end":57200,"line_start":511,"line_end":511,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57205,"byte_end":57208,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57213,"byte_end":57220,"line_start":513,"line_end":513,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57225,"byte_end":57262,"line_start":514,"line_end":514,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57267,"byte_end":57291,"line_start":515,"line_end":515,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57296,"byte_end":57299,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57304,"byte_end":57347,"line_start":517,"line_end":517,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_sign_positive() == p);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57352,"byte_end":57395,"line_start":518,"line_end":518,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57400,"byte_end":57405,"line_start":519,"line_end":519,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57410,"byte_end":57413,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, true);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57418,"byte_end":57449,"line_start":521,"line_end":521,"column_start":5,"column_end":36}},{"value":"/ check(f32::MAX, true);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57454,"byte_end":57480,"line_start":522,"line_end":522,"column_start":5,"column_end":31}},{"value":"/ check(0.0f32, true);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57485,"byte_end":57509,"line_start":523,"line_end":523,"column_start":5,"column_end":29}},{"value":"/ check(-0.0f64, false);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57514,"byte_end":57540,"line_start":524,"line_end":524,"column_start":5,"column_end":31}},{"value":"/ check(f64::NEG_INFINITY, false);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57545,"byte_end":57581,"line_start":525,"line_end":525,"column_start":5,"column_end":41}},{"value":"/ check(f64::MIN_POSITIVE, true);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57586,"byte_end":57621,"line_start":526,"line_end":526,"column_start":5,"column_end":40}},{"value":"/ check(-f64::NAN, false);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57626,"byte_end":57654,"line_start":527,"line_end":527,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57659,"byte_end":57666,"line_start":528,"line_end":528,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57671,"byte_end":57680,"line_start":529,"line_end":529,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58434,"byte_end":58450,"line_start":557,"line_end":557,"column_start":8,"column_end":24},"name":"is_sign_negative","qualname":"::float::FloatCore::is_sign_negative","value":"pub fn is_sign_negative(Self) -> bool","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is negative, including `-0.0` and\n `FloatCore::neg_infinity()`, and since Rust 1.20 also\n `-FloatCore::nan()`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is negative, including `-0.0` and","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57765,"byte_end":57827,"line_start":534,"line_end":534,"column_start":5,"column_end":67}},{"value":"/ `FloatCore::neg_infinity()`, and since Rust 1.20 also","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57832,"byte_end":57889,"line_start":535,"line_end":535,"column_start":5,"column_end":62}},{"value":"/ `-FloatCore::nan()`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57894,"byte_end":57918,"line_start":536,"line_end":536,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57923,"byte_end":57926,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57931,"byte_end":57945,"line_start":538,"line_end":538,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57950,"byte_end":57953,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57958,"byte_end":57965,"line_start":540,"line_end":540,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":57970,"byte_end":58007,"line_start":541,"line_end":541,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58012,"byte_end":58036,"line_start":542,"line_end":542,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58041,"byte_end":58044,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, p: bool) {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58049,"byte_end":58092,"line_start":544,"line_end":544,"column_start":5,"column_end":48}},{"value":"/     assert!(x.is_sign_negative() == p);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58097,"byte_end":58140,"line_start":545,"line_end":545,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58145,"byte_end":58150,"line_start":546,"line_end":546,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58155,"byte_end":58158,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, false);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58163,"byte_end":58195,"line_start":548,"line_end":548,"column_start":5,"column_end":37}},{"value":"/ check(f32::MAX, false);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58200,"byte_end":58227,"line_start":549,"line_end":549,"column_start":5,"column_end":32}},{"value":"/ check(0.0f32, false);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58232,"byte_end":58257,"line_start":550,"line_end":550,"column_start":5,"column_end":30}},{"value":"/ check(-0.0f64, true);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58262,"byte_end":58287,"line_start":551,"line_end":551,"column_start":5,"column_end":30}},{"value":"/ check(f64::NEG_INFINITY, true);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58292,"byte_end":58327,"line_start":552,"line_end":552,"column_start":5,"column_end":40}},{"value":"/ check(f64::MIN_POSITIVE, false);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58332,"byte_end":58368,"line_start":553,"line_end":553,"column_start":5,"column_end":41}},{"value":"/ check(f64::NAN, false);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58373,"byte_end":58400,"line_start":554,"line_end":554,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58405,"byte_end":58412,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58417,"byte_end":58426,"line_start":556,"line_end":556,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59083,"byte_end":59086,"line_start":582,"line_end":582,"column_start":8,"column_end":11},"name":"min","qualname":"::float::FloatCore::min","value":"pub fn min(Self, Self) -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns the minimum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the minimum of the two numbers.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58545,"byte_end":58588,"line_start":562,"line_end":562,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58593,"byte_end":58596,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ If one of the arguments is NaN, then the other argument is returned.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58601,"byte_end":58673,"line_start":564,"line_end":564,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58678,"byte_end":58681,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58686,"byte_end":58700,"line_start":566,"line_end":566,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58705,"byte_end":58708,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58713,"byte_end":58720,"line_start":568,"line_end":568,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58725,"byte_end":58762,"line_start":569,"line_end":569,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58767,"byte_end":58791,"line_start":570,"line_end":570,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58796,"byte_end":58799,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T, min: T) {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58804,"byte_end":58852,"line_start":572,"line_end":572,"column_start":5,"column_end":53}},{"value":"/     assert!(x.min(y) == min);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58857,"byte_end":58890,"line_start":573,"line_end":573,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58895,"byte_end":58900,"line_start":574,"line_end":574,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58905,"byte_end":58908,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ check(1.0f32, 2.0, 1.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58913,"byte_end":58941,"line_start":576,"line_end":576,"column_start":5,"column_end":33}},{"value":"/ check(f32::NAN, 2.0, 2.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58946,"byte_end":58976,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/ check(1.0f64, -2.0, -2.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":58981,"byte_end":59011,"line_start":578,"line_end":578,"column_start":5,"column_end":35}},{"value":"/ check(1.0f64, f64::NAN, 1.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59016,"byte_end":59049,"line_start":579,"line_end":579,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59054,"byte_end":59061,"line_start":580,"line_end":580,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59066,"byte_end":59075,"line_start":581,"line_end":581,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59883,"byte_end":59886,"line_start":616,"line_end":616,"column_start":8,"column_end":11},"name":"max","qualname":"::float::FloatCore::max","value":"pub fn max(Self, Self) -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns the maximum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the maximum of the two numbers.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59341,"byte_end":59384,"line_start":596,"line_end":596,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59389,"byte_end":59392,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ If one of the arguments is NaN, then the other argument is returned.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59397,"byte_end":59469,"line_start":598,"line_end":598,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59474,"byte_end":59477,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59482,"byte_end":59496,"line_start":600,"line_end":600,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59501,"byte_end":59504,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59509,"byte_end":59516,"line_start":602,"line_end":602,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59521,"byte_end":59558,"line_start":603,"line_end":603,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59563,"byte_end":59587,"line_start":604,"line_end":604,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59592,"byte_end":59595,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T, min: T) {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59600,"byte_end":59648,"line_start":606,"line_end":606,"column_start":5,"column_end":53}},{"value":"/     assert!(x.max(y) == min);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59653,"byte_end":59686,"line_start":607,"line_end":607,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59691,"byte_end":59696,"line_start":608,"line_end":608,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59701,"byte_end":59704,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ check(1.0f32, 2.0, 2.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59709,"byte_end":59737,"line_start":610,"line_end":610,"column_start":5,"column_end":33}},{"value":"/ check(1.0f32, f32::NAN, 1.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59742,"byte_end":59775,"line_start":611,"line_end":611,"column_start":5,"column_end":38}},{"value":"/ check(-1.0f64, 2.0, 2.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59780,"byte_end":59809,"line_start":612,"line_end":612,"column_start":5,"column_end":34}},{"value":"/ check(-1.0f64, f64::NAN, -1.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59814,"byte_end":59849,"line_start":613,"line_end":613,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59854,"byte_end":59861,"line_start":614,"line_end":614,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":59866,"byte_end":59875,"line_start":615,"line_end":615,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60641,"byte_end":60646,"line_start":649,"line_end":649,"column_start":8,"column_end":13},"name":"recip","qualname":"::float::FloatCore::recip","value":"pub fn recip(Self) -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns the reciprocal (multiplicative inverse) of the number.","sig":null,"attributes":[{"value":"/ Returns the reciprocal (multiplicative inverse) of the number.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60141,"byte_end":60207,"line_start":630,"line_end":630,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60212,"byte_end":60215,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60220,"byte_end":60234,"line_start":632,"line_end":632,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60239,"byte_end":60242,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60247,"byte_end":60254,"line_start":634,"line_end":634,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60259,"byte_end":60296,"line_start":635,"line_end":635,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60301,"byte_end":60325,"line_start":636,"line_end":636,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60330,"byte_end":60333,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, y: T) {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60338,"byte_end":60378,"line_start":638,"line_end":638,"column_start":5,"column_end":45}},{"value":"/     assert!(x.recip() == y);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60383,"byte_end":60415,"line_start":639,"line_end":639,"column_start":5,"column_end":37}},{"value":"/     assert!(y.recip() == x);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60420,"byte_end":60452,"line_start":640,"line_end":640,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60457,"byte_end":60462,"line_start":641,"line_end":641,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60467,"byte_end":60470,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ check(f32::INFINITY, 0.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60475,"byte_end":60505,"line_start":643,"line_end":643,"column_start":5,"column_end":35}},{"value":"/ check(2.0f32, 0.5);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60510,"byte_end":60533,"line_start":644,"line_end":644,"column_start":5,"column_end":28}},{"value":"/ check(-0.25f64, -4.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60538,"byte_end":60564,"line_start":645,"line_end":645,"column_start":5,"column_end":31}},{"value":"/ check(-0.0f64, f64::NEG_INFINITY);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60569,"byte_end":60607,"line_start":646,"line_end":646,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60612,"byte_end":60619,"line_start":647,"line_end":647,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60624,"byte_end":60633,"line_start":648,"line_end":648,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61240,"byte_end":61244,"line_start":673,"line_end":673,"column_start":8,"column_end":12},"name":"powi","qualname":"::float::FloatCore::powi","value":"pub fn powi(Self, i32) -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Raise a number to an integer power.","sig":null,"attributes":[{"value":"/ Raise a number to an integer power.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60701,"byte_end":60740,"line_start":653,"line_end":653,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60745,"byte_end":60748,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ Using this function is generally faster than using `powf`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60753,"byte_end":60814,"line_start":655,"line_end":655,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60819,"byte_end":60822,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60827,"byte_end":60841,"line_start":657,"line_end":657,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60846,"byte_end":60849,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60854,"byte_end":60861,"line_start":659,"line_end":659,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60866,"byte_end":60903,"line_start":660,"line_end":660,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60908,"byte_end":60911,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, exp: i32, powi: T) {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60916,"byte_end":60969,"line_start":662,"line_end":662,"column_start":5,"column_end":58}},{"value":"/     assert!(x.powi(exp) == powi);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":60974,"byte_end":61011,"line_start":663,"line_end":663,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61016,"byte_end":61021,"line_start":664,"line_end":664,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61026,"byte_end":61029,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ check(9.0f32, 2, 81.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61034,"byte_end":61061,"line_start":666,"line_end":666,"column_start":5,"column_end":32}},{"value":"/ check(1.0f32, -2, 1.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61066,"byte_end":61093,"line_start":667,"line_end":667,"column_start":5,"column_end":32}},{"value":"/ check(10.0f64, 20, 1e20);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61098,"byte_end":61127,"line_start":668,"line_end":668,"column_start":5,"column_end":34}},{"value":"/ check(4.0f64, -2, 0.0625);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61132,"byte_end":61162,"line_start":669,"line_end":669,"column_start":5,"column_end":35}},{"value":"/ check(-1.0f64, std::i32::MIN, 1.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61167,"byte_end":61206,"line_start":670,"line_end":670,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61211,"byte_end":61218,"line_start":671,"line_end":671,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61223,"byte_end":61232,"line_start":672,"line_end":672,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62161,"byte_end":62171,"line_start":701,"line_end":701,"column_start":8,"column_end":18},"name":"to_degrees","qualname":"::float::FloatCore::to_degrees","value":"pub fn to_degrees(Self) -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Converts to degrees, assuming the number is in radians.","sig":null,"attributes":[{"value":"/ Converts to degrees, assuming the number is in radians.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61686,"byte_end":61745,"line_start":684,"line_end":684,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61750,"byte_end":61753,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61758,"byte_end":61772,"line_start":686,"line_end":686,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61777,"byte_end":61780,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61785,"byte_end":61792,"line_start":688,"line_end":688,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61797,"byte_end":61834,"line_start":689,"line_end":689,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61839,"byte_end":61863,"line_start":690,"line_end":690,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61868,"byte_end":61871,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(rad: T, deg: T) {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61876,"byte_end":61920,"line_start":692,"line_end":692,"column_start":5,"column_end":49}},{"value":"/     assert!(rad.to_degrees() == deg);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61925,"byte_end":61966,"line_start":693,"line_end":693,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61971,"byte_end":61976,"line_start":694,"line_end":694,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61981,"byte_end":61984,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ check(0.0f32, 0.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":61989,"byte_end":62012,"line_start":696,"line_end":696,"column_start":5,"column_end":28}},{"value":"/ check(f32::consts::PI, 180.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62017,"byte_end":62051,"line_start":697,"line_end":697,"column_start":5,"column_end":39}},{"value":"/ check(f64::consts::FRAC_PI_4, 45.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62056,"byte_end":62096,"line_start":698,"line_end":698,"column_start":5,"column_end":45}},{"value":"/ check(f64::INFINITY, f64::INFINITY);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62101,"byte_end":62141,"line_start":699,"line_end":699,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62146,"byte_end":62153,"line_start":700,"line_end":700,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62667,"byte_end":62677,"line_start":720,"line_end":720,"column_start":8,"column_end":18},"name":"to_radians","qualname":"::float::FloatCore::to_radians","value":"pub fn to_radians(Self) -> Self","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Converts to radians, assuming the number is in degrees.","sig":null,"attributes":[{"value":"/ Converts to radians, assuming the number is in degrees.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62192,"byte_end":62251,"line_start":703,"line_end":703,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62256,"byte_end":62259,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62264,"byte_end":62278,"line_start":705,"line_end":705,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62283,"byte_end":62286,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62291,"byte_end":62298,"line_start":707,"line_end":707,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62303,"byte_end":62340,"line_start":708,"line_end":708,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62345,"byte_end":62369,"line_start":709,"line_end":709,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62374,"byte_end":62377,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(deg: T, rad: T) {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62382,"byte_end":62426,"line_start":711,"line_end":711,"column_start":5,"column_end":49}},{"value":"/     assert!(deg.to_radians() == rad);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62431,"byte_end":62472,"line_start":712,"line_end":712,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62477,"byte_end":62482,"line_start":713,"line_end":713,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62487,"byte_end":62490,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ check(0.0f32, 0.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62495,"byte_end":62518,"line_start":715,"line_end":715,"column_start":5,"column_end":28}},{"value":"/ check(180.0, f32::consts::PI);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62523,"byte_end":62557,"line_start":716,"line_end":716,"column_start":5,"column_end":39}},{"value":"/ check(45.0, f64::consts::FRAC_PI_4);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62562,"byte_end":62602,"line_start":717,"line_end":717,"column_start":5,"column_end":45}},{"value":"/ check(f64::INFINITY, f64::INFINITY);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62607,"byte_end":62647,"line_start":718,"line_end":718,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62652,"byte_end":62659,"line_start":719,"line_end":719,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":63436,"byte_end":63450,"line_start":743,"line_end":743,"column_start":8,"column_end":22},"name":"integer_decode","qualname":"::float::FloatCore::integer_decode","value":"pub fn integer_decode(Self) -> (u64, i16, i8)","parent":{"krate":0,"index":192},"children":[],"decl_id":null,"docs":" Returns the mantissa, base 2 exponent, and sign as integers, respectively.\n The original number can be recovered by `sign * mantissa * 2 ^ exponent`.","sig":null,"attributes":[{"value":"/ Returns the mantissa, base 2 exponent, and sign as integers, respectively.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62698,"byte_end":62776,"line_start":722,"line_end":722,"column_start":5,"column_end":83}},{"value":"/ The original number can be recovered by `sign * mantissa * 2 ^ exponent`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62781,"byte_end":62858,"line_start":723,"line_end":723,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62863,"byte_end":62866,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62871,"byte_end":62885,"line_start":725,"line_end":725,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62890,"byte_end":62893,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62898,"byte_end":62905,"line_start":727,"line_end":727,"column_start":5,"column_end":12}},{"value":"/ use num_traits::float::FloatCore;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62910,"byte_end":62947,"line_start":728,"line_end":728,"column_start":5,"column_end":42}},{"value":"/ use std::{f32, f64};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62952,"byte_end":62976,"line_start":729,"line_end":729,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62981,"byte_end":62984,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ fn check<T: FloatCore>(x: T, m: u64, e: i16, s:i8) {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":62989,"byte_end":63045,"line_start":731,"line_end":731,"column_start":5,"column_end":61}},{"value":"/     let (mantissa, exponent, sign) = x.integer_decode();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":63050,"byte_end":63110,"line_start":732,"line_end":732,"column_start":5,"column_end":65}},{"value":"/     assert_eq!(mantissa, m);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":63115,"byte_end":63147,"line_start":733,"line_end":733,"column_start":5,"column_end":37}},{"value":"/     assert_eq!(exponent, e);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":63152,"byte_end":63184,"line_start":734,"line_end":734,"column_start":5,"column_end":37}},{"value":"/     assert_eq!(sign, s);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":63189,"byte_end":63217,"line_start":735,"line_end":735,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":63222,"byte_end":63227,"line_start":736,"line_end":736,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":63232,"byte_end":63235,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ check(2.0f32, 1 << 23, -22, 1);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":63240,"byte_end":63275,"line_start":738,"line_end":738,"column_start":5,"column_end":40}},{"value":"/ check(-2.0f32, 1 << 23, -22, -1);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":63280,"byte_end":63317,"line_start":739,"line_end":739,"column_start":5,"column_end":42}},{"value":"/ check(f32::INFINITY, 1 << 23, 105, 1);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":63322,"byte_end":63364,"line_start":740,"line_end":740,"column_start":5,"column_end":47}},{"value":"/ check(f64::NEG_INFINITY, 1 << 52, 972, -1);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":63369,"byte_end":63416,"line_start":741,"line_end":741,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":63421,"byte_end":63428,"line_start":742,"line_end":742,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68188,"byte_end":68193,"line_start":898,"line_end":898,"column_start":11,"column_end":16},"name":"Float","qualname":"::float::Float","value":"Float: Num + Copy + NumCast + PartialOrd + Neg<Output = Self>","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283}],"decl_id":null,"docs":" Generic trait for floating point numbers","sig":null,"attributes":[{"value":"/ Generic trait for floating point numbers","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68048,"byte_end":68092,"line_start":894,"line_end":894,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68093,"byte_end":68096,"line_start":895,"line_end":895,"column_start":1,"column_end":4}},{"value":"/ This trait is only available with the `std` feature.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68097,"byte_end":68153,"line_start":896,"line_end":896,"column_start":1,"column_end":57}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68154,"byte_end":68177,"line_start":897,"line_end":897,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68439,"byte_end":68442,"line_start":908,"line_end":908,"column_start":8,"column_end":11},"name":"nan","qualname":"::float::Float::nan","value":"pub fn nan() -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the `NaN` value.","sig":null,"attributes":[{"value":"/ Returns the `NaN` value.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68256,"byte_end":68284,"line_start":899,"line_end":899,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68289,"byte_end":68292,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68297,"byte_end":68304,"line_start":901,"line_end":901,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68309,"byte_end":68335,"line_start":902,"line_end":902,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68340,"byte_end":68343,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ let nan: f32 = Float::nan();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68348,"byte_end":68380,"line_start":904,"line_end":904,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68385,"byte_end":68388,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ assert!(nan.is_nan());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68393,"byte_end":68419,"line_start":906,"line_end":906,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68424,"byte_end":68431,"line_start":907,"line_end":907,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68764,"byte_end":68772,"line_start":921,"line_end":921,"column_start":8,"column_end":16},"name":"infinity","qualname":"::float::Float::infinity","value":"pub fn infinity() -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the infinite value.","sig":null,"attributes":[{"value":"/ Returns the infinite value.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68458,"byte_end":68489,"line_start":909,"line_end":909,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68494,"byte_end":68497,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68502,"byte_end":68509,"line_start":911,"line_end":911,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68514,"byte_end":68540,"line_start":912,"line_end":912,"column_start":5,"column_end":31}},{"value":"/ use std::f32;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68545,"byte_end":68562,"line_start":913,"line_end":913,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68567,"byte_end":68570,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ let infinity: f32 = Float::infinity();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68575,"byte_end":68617,"line_start":915,"line_end":915,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68622,"byte_end":68625,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ assert!(infinity.is_infinite());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68630,"byte_end":68666,"line_start":917,"line_end":917,"column_start":5,"column_end":41}},{"value":"/ assert!(!infinity.is_finite());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68671,"byte_end":68706,"line_start":918,"line_end":918,"column_start":5,"column_end":40}},{"value":"/ assert!(infinity > f32::MAX);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68711,"byte_end":68744,"line_start":919,"line_end":919,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68749,"byte_end":68756,"line_start":920,"line_end":920,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":69123,"byte_end":69135,"line_start":934,"line_end":934,"column_start":8,"column_end":20},"name":"neg_infinity","qualname":"::float::Float::neg_infinity","value":"pub fn neg_infinity() -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the negative infinite value.","sig":null,"attributes":[{"value":"/ Returns the negative infinite value.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68788,"byte_end":68828,"line_start":922,"line_end":922,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68833,"byte_end":68836,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68841,"byte_end":68848,"line_start":924,"line_end":924,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68853,"byte_end":68879,"line_start":925,"line_end":925,"column_start":5,"column_end":31}},{"value":"/ use std::f32;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68884,"byte_end":68901,"line_start":926,"line_end":926,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68906,"byte_end":68909,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ let neg_infinity: f32 = Float::neg_infinity();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68914,"byte_end":68964,"line_start":928,"line_end":928,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68969,"byte_end":68972,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ assert!(neg_infinity.is_infinite());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68977,"byte_end":69017,"line_start":930,"line_end":930,"column_start":5,"column_end":45}},{"value":"/ assert!(!neg_infinity.is_finite());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":69022,"byte_end":69061,"line_start":931,"line_end":931,"column_start":5,"column_end":44}},{"value":"/ assert!(neg_infinity < f32::MIN);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":69066,"byte_end":69103,"line_start":932,"line_end":932,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":69108,"byte_end":69115,"line_start":933,"line_end":933,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":69505,"byte_end":69513,"line_start":948,"line_end":948,"column_start":8,"column_end":16},"name":"neg_zero","qualname":"::float::Float::neg_zero","value":"pub fn neg_zero() -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns `-0.0`.","sig":null,"attributes":[{"value":"/ Returns `-0.0`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":69151,"byte_end":69170,"line_start":935,"line_end":935,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":69175,"byte_end":69178,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":69183,"byte_end":69190,"line_start":937,"line_end":937,"column_start":5,"column_end":12}},{"value":"/ use num_traits::{Zero, Float};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":69195,"byte_end":69229,"line_start":938,"line_end":938,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":69234,"byte_end":69237,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ let inf: f32 = Float::infinity();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":69242,"byte_end":69279,"line_start":940,"line_end":940,"column_start":5,"column_end":42}},{"value":"/ let zero: f32 = Zero::zero();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":69284,"byte_end":69317,"line_start":941,"line_end":941,"column_start":5,"column_end":38}},{"value":"/ let neg_zero: f32 = Float::neg_zero();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":69322,"byte_end":69364,"line_start":942,"line_end":942,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":69369,"byte_end":69372,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(zero, neg_zero);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":69377,"byte_end":69408,"line_start":944,"line_end":944,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(7.0f32/inf, zero);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":69413,"byte_end":69446,"line_start":945,"line_end":945,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(zero * 10.0, zero);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":69451,"byte_end":69485,"line_start":946,"line_end":946,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":69490,"byte_end":69497,"line_start":947,"line_end":947,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":69780,"byte_end":69789,"line_start":960,"line_end":960,"column_start":8,"column_end":17},"name":"min_value","qualname":"::float::Float::min_value","value":"pub fn min_value() -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the smallest finite value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the smallest finite value that this type can represent.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":69530,"byte_end":69597,"line_start":950,"line_end":950,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":69602,"byte_end":69605,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":69610,"byte_end":69617,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":69622,"byte_end":69648,"line_start":953,"line_end":953,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":69653,"byte_end":69670,"line_start":954,"line_end":954,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":69675,"byte_end":69678,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Float::min_value();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":69683,"byte_end":69719,"line_start":956,"line_end":956,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":69724,"byte_end":69727,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, f64::MIN);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":69732,"byte_end":69760,"line_start":958,"line_end":958,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":69765,"byte_end":69772,"line_start":959,"line_end":959,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":70088,"byte_end":70106,"line_start":972,"line_end":972,"column_start":8,"column_end":26},"name":"min_positive_value","qualname":"::float::Float::min_positive_value","value":"pub fn min_positive_value() -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the smallest positive, normalized value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the smallest positive, normalized value that this type can represent.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":69806,"byte_end":69887,"line_start":962,"line_end":962,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":69892,"byte_end":69895,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":69900,"byte_end":69907,"line_start":964,"line_end":964,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":69912,"byte_end":69938,"line_start":965,"line_end":965,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":69943,"byte_end":69960,"line_start":966,"line_end":966,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":69965,"byte_end":69968,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Float::min_positive_value();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":69973,"byte_end":70018,"line_start":968,"line_end":968,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":70023,"byte_end":70026,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, f64::MIN_POSITIVE);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":70031,"byte_end":70068,"line_start":970,"line_end":970,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":70073,"byte_end":70080,"line_start":971,"line_end":971,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":70483,"byte_end":70490,"line_start":989,"line_end":989,"column_start":8,"column_end":15},"name":"epsilon","qualname":"::float::Float::epsilon","value":"pub fn epsilon() -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns epsilon, a small positive value.","sig":null,"attributes":[{"value":"/ Returns epsilon, a small positive value.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":70123,"byte_end":70167,"line_start":974,"line_end":974,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":70172,"byte_end":70175,"line_start":975,"line_end":975,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":70180,"byte_end":70187,"line_start":976,"line_end":976,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":70192,"byte_end":70218,"line_start":977,"line_end":977,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":70223,"byte_end":70240,"line_start":978,"line_end":978,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":70245,"byte_end":70248,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Float::epsilon();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":70253,"byte_end":70287,"line_start":980,"line_end":980,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":70292,"byte_end":70295,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, f64::EPSILON);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":70300,"byte_end":70332,"line_start":982,"line_end":982,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":70337,"byte_end":70344,"line_start":983,"line_end":983,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":70349,"byte_end":70352,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":70357,"byte_end":70369,"line_start":985,"line_end":985,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":70374,"byte_end":70377,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ The default implementation will panic if `f32::EPSILON` cannot","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":70382,"byte_end":70448,"line_start":987,"line_end":987,"column_start":5,"column_end":71}},{"value":"/ be cast to `Self`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":70453,"byte_end":70475,"line_start":988,"line_end":988,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":70831,"byte_end":70840,"line_start":1002,"line_end":1002,"column_start":8,"column_end":17},"name":"max_value","qualname":"::float::Float::max_value","value":"pub fn max_value() -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the largest finite value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the largest finite value that this type can represent.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":70590,"byte_end":70656,"line_start":993,"line_end":993,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":70661,"byte_end":70664,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":70669,"byte_end":70676,"line_start":995,"line_end":995,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":70681,"byte_end":70707,"line_start":996,"line_end":996,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":70712,"byte_end":70729,"line_start":997,"line_end":997,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":70734,"byte_end":70737,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Float::max_value();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":70742,"byte_end":70778,"line_start":999,"line_end":999,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(x, f64::MAX);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":70783,"byte_end":70811,"line_start":1000,"line_end":1000,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":70816,"byte_end":70823,"line_start":1001,"line_end":1001,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":71138,"byte_end":71144,"line_start":1016,"line_end":1016,"column_start":8,"column_end":14},"name":"is_nan","qualname":"::float::Float::is_nan","value":"pub fn is_nan(Self) -> bool","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns `true` if this value is `NaN` and false otherwise.","sig":null,"attributes":[{"value":"/ Returns `true` if this value is `NaN` and false otherwise.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":70857,"byte_end":70919,"line_start":1004,"line_end":1004,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":70924,"byte_end":70927,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":70932,"byte_end":70939,"line_start":1006,"line_end":1006,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":70944,"byte_end":70970,"line_start":1007,"line_end":1007,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":70975,"byte_end":70992,"line_start":1008,"line_end":1008,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":70997,"byte_end":71000,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ let nan = f64::NAN;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":71005,"byte_end":71028,"line_start":1010,"line_end":1010,"column_start":5,"column_end":28}},{"value":"/ let f = 7.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":71033,"byte_end":71049,"line_start":1011,"line_end":1011,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":71054,"byte_end":71057,"line_start":1012,"line_end":1012,"column_start":5,"column_end":8}},{"value":"/ assert!(nan.is_nan());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":71062,"byte_end":71088,"line_start":1013,"line_end":1013,"column_start":5,"column_end":31}},{"value":"/ assert!(!f.is_nan());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":71093,"byte_end":71118,"line_start":1014,"line_end":1014,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":71123,"byte_end":71130,"line_start":1015,"line_end":1015,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":71682,"byte_end":71693,"line_start":1036,"line_end":1036,"column_start":8,"column_end":19},"name":"is_infinite","qualname":"::float::Float::is_infinite","value":"pub fn is_infinite(Self) -> bool","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns `true` if this value is positive infinity or negative infinity and\n false otherwise.","sig":null,"attributes":[{"value":"/ Returns `true` if this value is positive infinity or negative infinity and","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":71165,"byte_end":71243,"line_start":1018,"line_end":1018,"column_start":5,"column_end":83}},{"value":"/ false otherwise.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":71248,"byte_end":71268,"line_start":1019,"line_end":1019,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":71273,"byte_end":71276,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":71281,"byte_end":71288,"line_start":1021,"line_end":1021,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":71293,"byte_end":71319,"line_start":1022,"line_end":1022,"column_start":5,"column_end":31}},{"value":"/ use std::f32;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":71324,"byte_end":71341,"line_start":1023,"line_end":1023,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":71346,"byte_end":71349,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ let f = 7.0f32;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":71354,"byte_end":71373,"line_start":1025,"line_end":1025,"column_start":5,"column_end":24}},{"value":"/ let inf: f32 = Float::infinity();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":71378,"byte_end":71415,"line_start":1026,"line_end":1026,"column_start":5,"column_end":42}},{"value":"/ let neg_inf: f32 = Float::neg_infinity();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":71420,"byte_end":71465,"line_start":1027,"line_end":1027,"column_start":5,"column_end":50}},{"value":"/ let nan: f32 = f32::NAN;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":71470,"byte_end":71498,"line_start":1028,"line_end":1028,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":71503,"byte_end":71506,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ assert!(!f.is_infinite());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":71511,"byte_end":71541,"line_start":1030,"line_end":1030,"column_start":5,"column_end":35}},{"value":"/ assert!(!nan.is_infinite());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":71546,"byte_end":71578,"line_start":1031,"line_end":1031,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":71583,"byte_end":71586,"line_start":1032,"line_end":1032,"column_start":5,"column_end":8}},{"value":"/ assert!(inf.is_infinite());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":71591,"byte_end":71622,"line_start":1033,"line_end":1033,"column_start":5,"column_end":36}},{"value":"/ assert!(neg_inf.is_infinite());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":71627,"byte_end":71662,"line_start":1034,"line_end":1034,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":71667,"byte_end":71674,"line_start":1035,"line_end":1035,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":72185,"byte_end":72194,"line_start":1055,"line_end":1055,"column_start":8,"column_end":17},"name":"is_finite","qualname":"::float::Float::is_finite","value":"pub fn is_finite(Self) -> bool","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns `true` if this number is neither infinite nor `NaN`.","sig":null,"attributes":[{"value":"/ Returns `true` if this number is neither infinite nor `NaN`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":71714,"byte_end":71778,"line_start":1038,"line_end":1038,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":71783,"byte_end":71786,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":71791,"byte_end":71798,"line_start":1040,"line_end":1040,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":71803,"byte_end":71829,"line_start":1041,"line_end":1041,"column_start":5,"column_end":31}},{"value":"/ use std::f32;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":71834,"byte_end":71851,"line_start":1042,"line_end":1042,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":71856,"byte_end":71859,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ let f = 7.0f32;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":71864,"byte_end":71883,"line_start":1044,"line_end":1044,"column_start":5,"column_end":24}},{"value":"/ let inf: f32 = Float::infinity();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":71888,"byte_end":71925,"line_start":1045,"line_end":1045,"column_start":5,"column_end":42}},{"value":"/ let neg_inf: f32 = Float::neg_infinity();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":71930,"byte_end":71975,"line_start":1046,"line_end":1046,"column_start":5,"column_end":50}},{"value":"/ let nan: f32 = f32::NAN;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":71980,"byte_end":72008,"line_start":1047,"line_end":1047,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":72013,"byte_end":72016,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ assert!(f.is_finite());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":72021,"byte_end":72048,"line_start":1049,"line_end":1049,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":72053,"byte_end":72056,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ assert!(!nan.is_finite());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":72061,"byte_end":72091,"line_start":1051,"line_end":1051,"column_start":5,"column_end":35}},{"value":"/ assert!(!inf.is_finite());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":72096,"byte_end":72126,"line_start":1052,"line_end":1052,"column_start":5,"column_end":35}},{"value":"/ assert!(!neg_inf.is_finite());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":72131,"byte_end":72165,"line_start":1053,"line_end":1053,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":72170,"byte_end":72177,"line_start":1054,"line_end":1054,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":72944,"byte_end":72953,"line_start":1079,"line_end":1079,"column_start":8,"column_end":17},"name":"is_normal","qualname":"::float::Float::is_normal","value":"pub fn is_normal(Self) -> bool","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns `true` if the number is neither zero, infinite,\n [subnormal][subnormal], or `NaN`.","sig":null,"attributes":[{"value":"/ Returns `true` if the number is neither zero, infinite,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":72215,"byte_end":72274,"line_start":1057,"line_end":1057,"column_start":5,"column_end":64}},{"value":"/ [subnormal][subnormal], or `NaN`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":72279,"byte_end":72316,"line_start":1058,"line_end":1058,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":72321,"byte_end":72324,"line_start":1059,"line_end":1059,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":72329,"byte_end":72336,"line_start":1060,"line_end":1060,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":72341,"byte_end":72367,"line_start":1061,"line_end":1061,"column_start":5,"column_end":31}},{"value":"/ use std::f32;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":72372,"byte_end":72389,"line_start":1062,"line_end":1062,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":72394,"byte_end":72397,"line_start":1063,"line_end":1063,"column_start":5,"column_end":8}},{"value":"/ let min = f32::MIN_POSITIVE; // 1.17549435e-38f32","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":72402,"byte_end":72455,"line_start":1064,"line_end":1064,"column_start":5,"column_end":58}},{"value":"/ let max = f32::MAX;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":72460,"byte_end":72483,"line_start":1065,"line_end":1065,"column_start":5,"column_end":28}},{"value":"/ let lower_than_min = 1.0e-40_f32;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":72488,"byte_end":72525,"line_start":1066,"line_end":1066,"column_start":5,"column_end":42}},{"value":"/ let zero = 0.0f32;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":72530,"byte_end":72552,"line_start":1067,"line_end":1067,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":72557,"byte_end":72560,"line_start":1068,"line_end":1068,"column_start":5,"column_end":8}},{"value":"/ assert!(min.is_normal());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":72565,"byte_end":72594,"line_start":1069,"line_end":1069,"column_start":5,"column_end":34}},{"value":"/ assert!(max.is_normal());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":72599,"byte_end":72628,"line_start":1070,"line_end":1070,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":72633,"byte_end":72636,"line_start":1071,"line_end":1071,"column_start":5,"column_end":8}},{"value":"/ assert!(!zero.is_normal());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":72641,"byte_end":72672,"line_start":1072,"line_end":1072,"column_start":5,"column_end":36}},{"value":"/ assert!(!f32::NAN.is_normal());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":72677,"byte_end":72712,"line_start":1073,"line_end":1073,"column_start":5,"column_end":40}},{"value":"/ assert!(!f32::INFINITY.is_normal());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":72717,"byte_end":72757,"line_start":1074,"line_end":1074,"column_start":5,"column_end":45}},{"value":"/ // Values between `0` and `min` are Subnormal.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":72762,"byte_end":72812,"line_start":1075,"line_end":1075,"column_start":5,"column_end":55}},{"value":"/ assert!(!lower_than_min.is_normal());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":72817,"byte_end":72858,"line_start":1076,"line_end":1076,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":72863,"byte_end":72870,"line_start":1077,"line_end":1077,"column_start":5,"column_end":12}},{"value":"/ [subnormal]: http://en.wikipedia.org/wiki/Denormal_number","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":72875,"byte_end":72936,"line_start":1078,"line_end":1078,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":73467,"byte_end":73475,"line_start":1096,"line_end":1096,"column_start":8,"column_end":16},"name":"classify","qualname":"::float::Float::classify","value":"pub fn classify(Self) -> FpCategory","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the floating point category of the number. If only one property\n is going to be tested, it is generally faster to use the specific\n predicate instead.","sig":null,"attributes":[{"value":"/ Returns the floating point category of the number. If only one property","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":72974,"byte_end":73049,"line_start":1081,"line_end":1081,"column_start":5,"column_end":80}},{"value":"/ is going to be tested, it is generally faster to use the specific","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":73054,"byte_end":73123,"line_start":1082,"line_end":1082,"column_start":5,"column_end":74}},{"value":"/ predicate instead.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":73128,"byte_end":73150,"line_start":1083,"line_end":1083,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":73155,"byte_end":73158,"line_start":1084,"line_end":1084,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":73163,"byte_end":73170,"line_start":1085,"line_end":1085,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":73175,"byte_end":73201,"line_start":1086,"line_end":1086,"column_start":5,"column_end":31}},{"value":"/ use std::num::FpCategory;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":73206,"byte_end":73235,"line_start":1087,"line_end":1087,"column_start":5,"column_end":34}},{"value":"/ use std::f32;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":73240,"byte_end":73257,"line_start":1088,"line_end":1088,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":73262,"byte_end":73265,"line_start":1089,"line_end":1089,"column_start":5,"column_end":8}},{"value":"/ let num = 12.4f32;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":73270,"byte_end":73292,"line_start":1090,"line_end":1090,"column_start":5,"column_end":27}},{"value":"/ let inf = f32::INFINITY;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":73297,"byte_end":73325,"line_start":1091,"line_end":1091,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":73330,"byte_end":73333,"line_start":1092,"line_end":1092,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(num.classify(), FpCategory::Normal);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":73338,"byte_end":73389,"line_start":1093,"line_end":1093,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(inf.classify(), FpCategory::Infinite);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":73394,"byte_end":73447,"line_start":1094,"line_end":1094,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":73452,"byte_end":73459,"line_start":1095,"line_end":1095,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":73767,"byte_end":73772,"line_start":1109,"line_end":1109,"column_start":8,"column_end":13},"name":"floor","qualname":"::float::Float::floor","value":"pub fn floor(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the largest integer less than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the largest integer less than or equal to a number.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":73502,"byte_end":73565,"line_start":1098,"line_end":1098,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":73570,"byte_end":73573,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":73578,"byte_end":73585,"line_start":1100,"line_end":1100,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":73590,"byte_end":73616,"line_start":1101,"line_end":1101,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":73621,"byte_end":73624,"line_start":1102,"line_end":1102,"column_start":5,"column_end":8}},{"value":"/ let f = 3.99;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":73629,"byte_end":73646,"line_start":1103,"line_end":1103,"column_start":5,"column_end":22}},{"value":"/ let g = 3.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":73651,"byte_end":73667,"line_start":1104,"line_end":1104,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":73672,"byte_end":73675,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.floor(), 3.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":73680,"byte_end":73711,"line_start":1106,"line_end":1106,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(g.floor(), 3.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":73716,"byte_end":73747,"line_start":1107,"line_end":1107,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":73752,"byte_end":73759,"line_start":1108,"line_end":1108,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74060,"byte_end":74064,"line_start":1122,"line_end":1122,"column_start":8,"column_end":12},"name":"ceil","qualname":"::float::Float::ceil","value":"pub fn ceil(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the smallest integer greater than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the smallest integer greater than or equal to a number.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":73793,"byte_end":73860,"line_start":1111,"line_end":1111,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":73865,"byte_end":73868,"line_start":1112,"line_end":1112,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":73873,"byte_end":73880,"line_start":1113,"line_end":1113,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":73885,"byte_end":73911,"line_start":1114,"line_end":1114,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":73916,"byte_end":73919,"line_start":1115,"line_end":1115,"column_start":5,"column_end":8}},{"value":"/ let f = 3.01;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":73924,"byte_end":73941,"line_start":1116,"line_end":1116,"column_start":5,"column_end":22}},{"value":"/ let g = 4.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":73946,"byte_end":73962,"line_start":1117,"line_end":1117,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":73967,"byte_end":73970,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.ceil(), 4.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":73975,"byte_end":74005,"line_start":1119,"line_end":1119,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(g.ceil(), 4.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74010,"byte_end":74040,"line_start":1120,"line_end":1120,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74045,"byte_end":74052,"line_start":1121,"line_end":1121,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74378,"byte_end":74383,"line_start":1136,"line_end":1136,"column_start":8,"column_end":13},"name":"round","qualname":"::float::Float::round","value":"pub fn round(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the nearest integer to a number. Round half-way cases away from\n `0.0`.","sig":null,"attributes":[{"value":"/ Returns the nearest integer to a number. Round half-way cases away from","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74085,"byte_end":74160,"line_start":1124,"line_end":1124,"column_start":5,"column_end":80}},{"value":"/ `0.0`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74165,"byte_end":74175,"line_start":1125,"line_end":1125,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74180,"byte_end":74183,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74188,"byte_end":74195,"line_start":1127,"line_end":1127,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74200,"byte_end":74226,"line_start":1128,"line_end":1128,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74231,"byte_end":74234,"line_start":1129,"line_end":1129,"column_start":5,"column_end":8}},{"value":"/ let f = 3.3;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74239,"byte_end":74255,"line_start":1130,"line_end":1130,"column_start":5,"column_end":21}},{"value":"/ let g = -3.3;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74260,"byte_end":74277,"line_start":1131,"line_end":1131,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74282,"byte_end":74285,"line_start":1132,"line_end":1132,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.round(), 3.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74290,"byte_end":74321,"line_start":1133,"line_end":1133,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(g.round(), -3.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74326,"byte_end":74358,"line_start":1134,"line_end":1134,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74363,"byte_end":74370,"line_start":1135,"line_end":1135,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74647,"byte_end":74652,"line_start":1149,"line_end":1149,"column_start":8,"column_end":13},"name":"trunc","qualname":"::float::Float::trunc","value":"pub fn trunc(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Return the integer part of a number.","sig":null,"attributes":[{"value":"/ Return the integer part of a number.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74404,"byte_end":74444,"line_start":1138,"line_end":1138,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74449,"byte_end":74452,"line_start":1139,"line_end":1139,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74457,"byte_end":74464,"line_start":1140,"line_end":1140,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74469,"byte_end":74495,"line_start":1141,"line_end":1141,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74500,"byte_end":74503,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ let f = 3.3;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74508,"byte_end":74524,"line_start":1143,"line_end":1143,"column_start":5,"column_end":21}},{"value":"/ let g = -3.7;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74529,"byte_end":74546,"line_start":1144,"line_end":1144,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74551,"byte_end":74554,"line_start":1145,"line_end":1145,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.trunc(), 3.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74559,"byte_end":74590,"line_start":1146,"line_end":1146,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(g.trunc(), -3.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74595,"byte_end":74627,"line_start":1147,"line_end":1147,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74632,"byte_end":74639,"line_start":1148,"line_end":1148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":75048,"byte_end":75053,"line_start":1164,"line_end":1164,"column_start":8,"column_end":13},"name":"fract","qualname":"::float::Float::fract","value":"pub fn fract(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the fractional part of a number.","sig":null,"attributes":[{"value":"/ Returns the fractional part of a number.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74673,"byte_end":74717,"line_start":1151,"line_end":1151,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74722,"byte_end":74725,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74730,"byte_end":74737,"line_start":1153,"line_end":1153,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74742,"byte_end":74768,"line_start":1154,"line_end":1154,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74773,"byte_end":74776,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ let x = 3.5;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74781,"byte_end":74797,"line_start":1156,"line_end":1156,"column_start":5,"column_end":21}},{"value":"/ let y = -3.5;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74802,"byte_end":74819,"line_start":1157,"line_end":1157,"column_start":5,"column_end":22}},{"value":"/ let abs_difference_x = (x.fract() - 0.5).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74824,"byte_end":74875,"line_start":1158,"line_end":1158,"column_start":5,"column_end":56}},{"value":"/ let abs_difference_y = (y.fract() - (-0.5)).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74880,"byte_end":74934,"line_start":1159,"line_end":1159,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74939,"byte_end":74942,"line_start":1160,"line_end":1160,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_x < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74947,"byte_end":74985,"line_start":1161,"line_end":1161,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_y < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":74990,"byte_end":75028,"line_start":1162,"line_end":1162,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":75033,"byte_end":75040,"line_start":1163,"line_end":1163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":75583,"byte_end":75586,"line_start":1184,"line_end":1184,"column_start":8,"column_end":11},"name":"abs","qualname":"::float::Float::abs","value":"pub fn abs(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Computes the absolute value of `self`. Returns `Float::nan()` if the\n number is `Float::nan()`.","sig":null,"attributes":[{"value":"/ Computes the absolute value of `self`. Returns `Float::nan()` if the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":75074,"byte_end":75146,"line_start":1166,"line_end":1166,"column_start":5,"column_end":77}},{"value":"/ number is `Float::nan()`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":75151,"byte_end":75180,"line_start":1167,"line_end":1167,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":75185,"byte_end":75188,"line_start":1168,"line_end":1168,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":75193,"byte_end":75200,"line_start":1169,"line_end":1169,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":75205,"byte_end":75231,"line_start":1170,"line_end":1170,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":75236,"byte_end":75253,"line_start":1171,"line_end":1171,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":75258,"byte_end":75261,"line_start":1172,"line_end":1172,"column_start":5,"column_end":8}},{"value":"/ let x = 3.5;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":75266,"byte_end":75282,"line_start":1173,"line_end":1173,"column_start":5,"column_end":21}},{"value":"/ let y = -3.5;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":75287,"byte_end":75304,"line_start":1174,"line_end":1174,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":75309,"byte_end":75312,"line_start":1175,"line_end":1175,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_x = (x.abs() - x).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":75317,"byte_end":75364,"line_start":1176,"line_end":1176,"column_start":5,"column_end":52}},{"value":"/ let abs_difference_y = (y.abs() - (-y)).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":75369,"byte_end":75419,"line_start":1177,"line_end":1177,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":75424,"byte_end":75427,"line_start":1178,"line_end":1178,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_x < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":75432,"byte_end":75470,"line_start":1179,"line_end":1179,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_y < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":75475,"byte_end":75513,"line_start":1180,"line_end":1180,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":75518,"byte_end":75521,"line_start":1181,"line_end":1181,"column_start":5,"column_end":8}},{"value":"/ assert!(f64::NAN.abs().is_nan());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":75526,"byte_end":75563,"line_start":1182,"line_end":1182,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":75568,"byte_end":75575,"line_start":1183,"line_end":1183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":76153,"byte_end":76159,"line_start":1203,"line_end":1203,"column_start":8,"column_end":14},"name":"signum","qualname":"::float::Float::signum","value":"pub fn signum(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns a number that represents the sign of `self`.","sig":null,"attributes":[{"value":"/ Returns a number that represents the sign of `self`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":75607,"byte_end":75663,"line_start":1186,"line_end":1186,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":75668,"byte_end":75671,"line_start":1187,"line_end":1187,"column_start":5,"column_end":8}},{"value":"/ - `1.0` if the number is positive, `+0.0` or `Float::infinity()`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":75676,"byte_end":75744,"line_start":1188,"line_end":1188,"column_start":5,"column_end":73}},{"value":"/ - `-1.0` if the number is negative, `-0.0` or `Float::neg_infinity()`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":75749,"byte_end":75822,"line_start":1189,"line_end":1189,"column_start":5,"column_end":78}},{"value":"/ - `Float::nan()` if the number is `Float::nan()`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":75827,"byte_end":75879,"line_start":1190,"line_end":1190,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":75884,"byte_end":75887,"line_start":1191,"line_end":1191,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":75892,"byte_end":75899,"line_start":1192,"line_end":1192,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":75904,"byte_end":75930,"line_start":1193,"line_end":1193,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":75935,"byte_end":75952,"line_start":1194,"line_end":1194,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":75957,"byte_end":75960,"line_start":1195,"line_end":1195,"column_start":5,"column_end":8}},{"value":"/ let f = 3.5;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":75965,"byte_end":75981,"line_start":1196,"line_end":1196,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":75986,"byte_end":75989,"line_start":1197,"line_end":1197,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.signum(), 1.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":75994,"byte_end":76026,"line_start":1198,"line_end":1198,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(f64::NEG_INFINITY.signum(), -1.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":76031,"byte_end":76080,"line_start":1199,"line_end":1199,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":76085,"byte_end":76088,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ assert!(f64::NAN.signum().is_nan());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":76093,"byte_end":76133,"line_start":1201,"line_end":1201,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":76138,"byte_end":76145,"line_start":1202,"line_end":1202,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":76632,"byte_end":76648,"line_start":1221,"line_end":1221,"column_start":8,"column_end":24},"name":"is_sign_positive","qualname":"::float::Float::is_sign_positive","value":"pub fn is_sign_positive(Self) -> bool","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is positive, including `+0.0`,\n `Float::infinity()`, and since Rust 1.20 also `Float::nan()`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is positive, including `+0.0`,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":76180,"byte_end":76239,"line_start":1205,"line_end":1205,"column_start":5,"column_end":64}},{"value":"/ `Float::infinity()`, and since Rust 1.20 also `Float::nan()`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":76244,"byte_end":76309,"line_start":1206,"line_end":1206,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":76314,"byte_end":76317,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":76322,"byte_end":76329,"line_start":1208,"line_end":1208,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":76334,"byte_end":76360,"line_start":1209,"line_end":1209,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":76365,"byte_end":76382,"line_start":1210,"line_end":1210,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":76387,"byte_end":76390,"line_start":1211,"line_end":1211,"column_start":5,"column_end":8}},{"value":"/ let neg_nan: f64 = -f64::NAN;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":76395,"byte_end":76428,"line_start":1212,"line_end":1212,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":76433,"byte_end":76436,"line_start":1213,"line_end":1213,"column_start":5,"column_end":8}},{"value":"/ let f = 7.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":76441,"byte_end":76457,"line_start":1214,"line_end":1214,"column_start":5,"column_end":21}},{"value":"/ let g = -7.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":76462,"byte_end":76479,"line_start":1215,"line_end":1215,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":76484,"byte_end":76487,"line_start":1216,"line_end":1216,"column_start":5,"column_end":8}},{"value":"/ assert!(f.is_sign_positive());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":76492,"byte_end":76526,"line_start":1217,"line_end":1217,"column_start":5,"column_end":39}},{"value":"/ assert!(!g.is_sign_positive());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":76531,"byte_end":76566,"line_start":1218,"line_end":1218,"column_start":5,"column_end":40}},{"value":"/ assert!(!neg_nan.is_sign_positive());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":76571,"byte_end":76612,"line_start":1219,"line_end":1219,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":76617,"byte_end":76624,"line_start":1220,"line_end":1220,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":77117,"byte_end":77133,"line_start":1239,"line_end":1239,"column_start":8,"column_end":24},"name":"is_sign_negative","qualname":"::float::Float::is_sign_negative","value":"pub fn is_sign_negative(Self) -> bool","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is negative, including `-0.0`,\n `Float::neg_infinity()`, and since Rust 1.20 also `-Float::nan()`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is negative, including `-0.0`,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":76669,"byte_end":76728,"line_start":1223,"line_end":1223,"column_start":5,"column_end":64}},{"value":"/ `Float::neg_infinity()`, and since Rust 1.20 also `-Float::nan()`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":76733,"byte_end":76803,"line_start":1224,"line_end":1224,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":76808,"byte_end":76811,"line_start":1225,"line_end":1225,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":76816,"byte_end":76823,"line_start":1226,"line_end":1226,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":76828,"byte_end":76854,"line_start":1227,"line_end":1227,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":76859,"byte_end":76876,"line_start":1228,"line_end":1228,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":76881,"byte_end":76884,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ let nan: f64 = f64::NAN;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":76889,"byte_end":76917,"line_start":1230,"line_end":1230,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":76922,"byte_end":76925,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ let f = 7.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":76930,"byte_end":76946,"line_start":1232,"line_end":1232,"column_start":5,"column_end":21}},{"value":"/ let g = -7.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":76951,"byte_end":76968,"line_start":1233,"line_end":1233,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":76973,"byte_end":76976,"line_start":1234,"line_end":1234,"column_start":5,"column_end":8}},{"value":"/ assert!(!f.is_sign_negative());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":76981,"byte_end":77016,"line_start":1235,"line_end":1235,"column_start":5,"column_end":40}},{"value":"/ assert!(g.is_sign_negative());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":77021,"byte_end":77055,"line_start":1236,"line_end":1236,"column_start":5,"column_end":39}},{"value":"/ assert!(!nan.is_sign_negative());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":77060,"byte_end":77097,"line_start":1237,"line_end":1237,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":77102,"byte_end":77109,"line_start":1238,"line_end":1238,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":77745,"byte_end":77752,"line_start":1259,"line_end":1259,"column_start":8,"column_end":15},"name":"mul_add","qualname":"::float::Float::mul_add","value":"pub fn mul_add(Self, Self, Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Fused multiply-add. Computes `(self * a) + b` with only one rounding\n error, yielding a more accurate result than an unfused multiply-add.","sig":null,"attributes":[{"value":"/ Fused multiply-add. Computes `(self * a) + b` with only one rounding","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":77154,"byte_end":77226,"line_start":1241,"line_end":1241,"column_start":5,"column_end":77}},{"value":"/ error, yielding a more accurate result than an unfused multiply-add.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":77231,"byte_end":77303,"line_start":1242,"line_end":1242,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":77308,"byte_end":77311,"line_start":1243,"line_end":1243,"column_start":5,"column_end":8}},{"value":"/ Using `mul_add` can be more performant than an unfused multiply-add if","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":77316,"byte_end":77390,"line_start":1244,"line_end":1244,"column_start":5,"column_end":79}},{"value":"/ the target architecture has a dedicated `fma` CPU instruction.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":77395,"byte_end":77461,"line_start":1245,"line_end":1245,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":77466,"byte_end":77469,"line_start":1246,"line_end":1246,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":77474,"byte_end":77481,"line_start":1247,"line_end":1247,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":77486,"byte_end":77512,"line_start":1248,"line_end":1248,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":77517,"byte_end":77520,"line_start":1249,"line_end":1249,"column_start":5,"column_end":8}},{"value":"/ let m = 10.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":77525,"byte_end":77542,"line_start":1250,"line_end":1250,"column_start":5,"column_end":22}},{"value":"/ let x = 4.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":77547,"byte_end":77563,"line_start":1251,"line_end":1251,"column_start":5,"column_end":21}},{"value":"/ let b = 60.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":77568,"byte_end":77585,"line_start":1252,"line_end":1252,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":77590,"byte_end":77593,"line_start":1253,"line_end":1253,"column_start":5,"column_end":8}},{"value":"/ // 100.0","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":77598,"byte_end":77610,"line_start":1254,"line_end":1254,"column_start":5,"column_end":17}},{"value":"/ let abs_difference = (m.mul_add(x, b) - (m*x + b)).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":77615,"byte_end":77676,"line_start":1255,"line_end":1255,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":77681,"byte_end":77684,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":77689,"byte_end":77725,"line_start":1257,"line_end":1257,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":77730,"byte_end":77737,"line_start":1258,"line_end":1258,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":78050,"byte_end":78055,"line_start":1270,"line_end":1270,"column_start":8,"column_end":13},"name":"recip","qualname":"::float::Float::recip","value":"pub fn recip(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Take the reciprocal (inverse) of a number, `1/x`.","sig":null,"attributes":[{"value":"/ Take the reciprocal (inverse) of a number, `1/x`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":77790,"byte_end":77843,"line_start":1260,"line_end":1260,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":77848,"byte_end":77851,"line_start":1261,"line_end":1261,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":77856,"byte_end":77863,"line_start":1262,"line_end":1262,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":77868,"byte_end":77894,"line_start":1263,"line_end":1263,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":77899,"byte_end":77902,"line_start":1264,"line_end":1264,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":77907,"byte_end":77923,"line_start":1265,"line_end":1265,"column_start":5,"column_end":21}},{"value":"/ let abs_difference = (x.recip() - (1.0/x)).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":77928,"byte_end":77981,"line_start":1266,"line_end":1266,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":77986,"byte_end":77989,"line_start":1267,"line_end":1267,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":77994,"byte_end":78030,"line_start":1268,"line_end":1268,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":78035,"byte_end":78042,"line_start":1269,"line_end":1269,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":78392,"byte_end":78396,"line_start":1284,"line_end":1284,"column_start":8,"column_end":12},"name":"powi","qualname":"::float::Float::powi","value":"pub fn powi(Self, i32) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Raise a number to an integer power.","sig":null,"attributes":[{"value":"/ Raise a number to an integer power.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":78076,"byte_end":78115,"line_start":1272,"line_end":1272,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":78120,"byte_end":78123,"line_start":1273,"line_end":1273,"column_start":5,"column_end":8}},{"value":"/ Using this function is generally faster than using `powf`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":78128,"byte_end":78189,"line_start":1274,"line_end":1274,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":78194,"byte_end":78197,"line_start":1275,"line_end":1275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":78202,"byte_end":78209,"line_start":1276,"line_end":1276,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":78214,"byte_end":78240,"line_start":1277,"line_end":1277,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":78245,"byte_end":78248,"line_start":1278,"line_end":1278,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":78253,"byte_end":78269,"line_start":1279,"line_end":1279,"column_start":5,"column_end":21}},{"value":"/ let abs_difference = (x.powi(2) - x*x).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":78274,"byte_end":78323,"line_start":1280,"line_end":1280,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":78328,"byte_end":78331,"line_start":1281,"line_end":1281,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":78336,"byte_end":78372,"line_start":1282,"line_end":1282,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":78377,"byte_end":78384,"line_start":1283,"line_end":1283,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":78675,"byte_end":78679,"line_start":1296,"line_end":1296,"column_start":8,"column_end":12},"name":"powf","qualname":"::float::Float::powf","value":"pub fn powf(Self, Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Raise a number to a floating point power.","sig":null,"attributes":[{"value":"/ Raise a number to a floating point power.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":78425,"byte_end":78470,"line_start":1286,"line_end":1286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":78475,"byte_end":78478,"line_start":1287,"line_end":1287,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":78483,"byte_end":78490,"line_start":1288,"line_end":1288,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":78495,"byte_end":78521,"line_start":1289,"line_end":1289,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":78526,"byte_end":78529,"line_start":1290,"line_end":1290,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":78534,"byte_end":78550,"line_start":1291,"line_end":1291,"column_start":5,"column_end":21}},{"value":"/ let abs_difference = (x.powf(2.0) - x*x).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":78555,"byte_end":78606,"line_start":1292,"line_end":1292,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":78611,"byte_end":78614,"line_start":1293,"line_end":1293,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":78619,"byte_end":78655,"line_start":1294,"line_end":1294,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":78660,"byte_end":78667,"line_start":1295,"line_end":1295,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79102,"byte_end":79106,"line_start":1313,"line_end":1313,"column_start":8,"column_end":12},"name":"sqrt","qualname":"::float::Float::sqrt","value":"pub fn sqrt(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Take the square root of a number.","sig":null,"attributes":[{"value":"/ Take the square root of a number.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":78709,"byte_end":78746,"line_start":1298,"line_end":1298,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":78751,"byte_end":78754,"line_start":1299,"line_end":1299,"column_start":5,"column_end":8}},{"value":"/ Returns NaN if `self` is a negative number.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":78759,"byte_end":78806,"line_start":1300,"line_end":1300,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":78811,"byte_end":78814,"line_start":1301,"line_end":1301,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":78819,"byte_end":78826,"line_start":1302,"line_end":1302,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":78831,"byte_end":78857,"line_start":1303,"line_end":1303,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":78862,"byte_end":78865,"line_start":1304,"line_end":1304,"column_start":5,"column_end":8}},{"value":"/ let positive = 4.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":78870,"byte_end":78893,"line_start":1305,"line_end":1305,"column_start":5,"column_end":28}},{"value":"/ let negative = -4.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":78898,"byte_end":78922,"line_start":1306,"line_end":1306,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":78927,"byte_end":78930,"line_start":1307,"line_end":1307,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (positive.sqrt() - 2.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":78935,"byte_end":78990,"line_start":1308,"line_end":1308,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":78995,"byte_end":78998,"line_start":1309,"line_end":1309,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79003,"byte_end":79039,"line_start":1310,"line_end":1310,"column_start":5,"column_end":41}},{"value":"/ assert!(negative.sqrt().is_nan());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79044,"byte_end":79082,"line_start":1311,"line_end":1311,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79087,"byte_end":79094,"line_start":1312,"line_end":1312,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79456,"byte_end":79459,"line_start":1329,"line_end":1329,"column_start":8,"column_end":11},"name":"exp","qualname":"::float::Float::exp","value":"pub fn exp(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns `e^(self)`, (the exponential function).","sig":null,"attributes":[{"value":"/ Returns `e^(self)`, (the exponential function).","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79127,"byte_end":79178,"line_start":1315,"line_end":1315,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79183,"byte_end":79186,"line_start":1316,"line_end":1316,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79191,"byte_end":79198,"line_start":1317,"line_end":1317,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79203,"byte_end":79229,"line_start":1318,"line_end":1318,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79234,"byte_end":79237,"line_start":1319,"line_end":1319,"column_start":5,"column_end":8}},{"value":"/ let one = 1.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79242,"byte_end":79260,"line_start":1320,"line_end":1320,"column_start":5,"column_end":23}},{"value":"/ // e^1","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79265,"byte_end":79275,"line_start":1321,"line_end":1321,"column_start":5,"column_end":15}},{"value":"/ let e = one.exp();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79280,"byte_end":79302,"line_start":1322,"line_end":1322,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79307,"byte_end":79310,"line_start":1323,"line_end":1323,"column_start":5,"column_end":8}},{"value":"/ // ln(e) - 1 == 0","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79315,"byte_end":79336,"line_start":1324,"line_end":1324,"column_start":5,"column_end":26}},{"value":"/ let abs_difference = (e.ln() - 1.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79341,"byte_end":79387,"line_start":1325,"line_end":1325,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79392,"byte_end":79395,"line_start":1326,"line_end":1326,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79400,"byte_end":79436,"line_start":1327,"line_end":1327,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79441,"byte_end":79448,"line_start":1328,"line_end":1328,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79737,"byte_end":79741,"line_start":1343,"line_end":1343,"column_start":8,"column_end":12},"name":"exp2","qualname":"::float::Float::exp2","value":"pub fn exp2(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns `2^(self)`.","sig":null,"attributes":[{"value":"/ Returns `2^(self)`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79480,"byte_end":79503,"line_start":1331,"line_end":1331,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79508,"byte_end":79511,"line_start":1332,"line_end":1332,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79516,"byte_end":79523,"line_start":1333,"line_end":1333,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79528,"byte_end":79554,"line_start":1334,"line_end":1334,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79559,"byte_end":79562,"line_start":1335,"line_end":1335,"column_start":5,"column_end":8}},{"value":"/ let f = 2.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79567,"byte_end":79583,"line_start":1336,"line_end":1336,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79588,"byte_end":79591,"line_start":1337,"line_end":1337,"column_start":5,"column_end":8}},{"value":"/ // 2^2 - 4 == 0","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79596,"byte_end":79615,"line_start":1338,"line_end":1338,"column_start":5,"column_end":24}},{"value":"/ let abs_difference = (f.exp2() - 4.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79620,"byte_end":79668,"line_start":1339,"line_end":1339,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79673,"byte_end":79676,"line_start":1340,"line_end":1340,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79681,"byte_end":79717,"line_start":1341,"line_end":1341,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79722,"byte_end":79729,"line_start":1342,"line_end":1342,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":80088,"byte_end":80090,"line_start":1359,"line_end":1359,"column_start":8,"column_end":10},"name":"ln","qualname":"::float::Float::ln","value":"pub fn ln(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the natural logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the natural logarithm of the number.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79762,"byte_end":79810,"line_start":1345,"line_end":1345,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79815,"byte_end":79818,"line_start":1346,"line_end":1346,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79823,"byte_end":79830,"line_start":1347,"line_end":1347,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79835,"byte_end":79861,"line_start":1348,"line_end":1348,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79866,"byte_end":79869,"line_start":1349,"line_end":1349,"column_start":5,"column_end":8}},{"value":"/ let one = 1.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79874,"byte_end":79892,"line_start":1350,"line_end":1350,"column_start":5,"column_end":23}},{"value":"/ // e^1","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79897,"byte_end":79907,"line_start":1351,"line_end":1351,"column_start":5,"column_end":15}},{"value":"/ let e = one.exp();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79912,"byte_end":79934,"line_start":1352,"line_end":1352,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79939,"byte_end":79942,"line_start":1353,"line_end":1353,"column_start":5,"column_end":8}},{"value":"/ // ln(e) - 1 == 0","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79947,"byte_end":79968,"line_start":1354,"line_end":1354,"column_start":5,"column_end":26}},{"value":"/ let abs_difference = (e.ln() - 1.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":79973,"byte_end":80019,"line_start":1355,"line_end":1355,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":80024,"byte_end":80027,"line_start":1356,"line_end":1356,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":80032,"byte_end":80068,"line_start":1357,"line_end":1357,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":80073,"byte_end":80080,"line_start":1358,"line_end":1358,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":80600,"byte_end":80603,"line_start":1378,"line_end":1378,"column_start":8,"column_end":11},"name":"log","qualname":"::float::Float::log","value":"pub fn log(Self, Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the logarithm of the number with respect to an arbitrary base.","sig":null,"attributes":[{"value":"/ Returns the logarithm of the number with respect to an arbitrary base.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":80111,"byte_end":80185,"line_start":1361,"line_end":1361,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":80190,"byte_end":80193,"line_start":1362,"line_end":1362,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":80198,"byte_end":80205,"line_start":1363,"line_end":1363,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":80210,"byte_end":80236,"line_start":1364,"line_end":1364,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":80241,"byte_end":80244,"line_start":1365,"line_end":1365,"column_start":5,"column_end":8}},{"value":"/ let ten = 10.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":80249,"byte_end":80268,"line_start":1366,"line_end":1366,"column_start":5,"column_end":24}},{"value":"/ let two = 2.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":80273,"byte_end":80291,"line_start":1367,"line_end":1367,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":80296,"byte_end":80299,"line_start":1368,"line_end":1368,"column_start":5,"column_end":8}},{"value":"/ // log10(10) - 1 == 0","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":80304,"byte_end":80329,"line_start":1369,"line_end":1369,"column_start":5,"column_end":30}},{"value":"/ let abs_difference_10 = (ten.log(10.0) - 1.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":80334,"byte_end":80390,"line_start":1370,"line_end":1370,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":80395,"byte_end":80398,"line_start":1371,"line_end":1371,"column_start":5,"column_end":8}},{"value":"/ // log2(2) - 1 == 0","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":80403,"byte_end":80426,"line_start":1372,"line_end":1372,"column_start":5,"column_end":28}},{"value":"/ let abs_difference_2 = (two.log(2.0) - 1.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":80431,"byte_end":80485,"line_start":1373,"line_end":1373,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":80490,"byte_end":80493,"line_start":1374,"line_end":1374,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_10 < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":80498,"byte_end":80537,"line_start":1375,"line_end":1375,"column_start":5,"column_end":44}},{"value":"/ assert!(abs_difference_2 < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":80542,"byte_end":80580,"line_start":1376,"line_end":1376,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":80585,"byte_end":80592,"line_start":1377,"line_end":1377,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":80925,"byte_end":80929,"line_start":1392,"line_end":1392,"column_start":8,"column_end":12},"name":"log2","qualname":"::float::Float::log2","value":"pub fn log2(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the base 2 logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the base 2 logarithm of the number.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":80636,"byte_end":80683,"line_start":1380,"line_end":1380,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":80688,"byte_end":80691,"line_start":1381,"line_end":1381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":80696,"byte_end":80703,"line_start":1382,"line_end":1382,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":80708,"byte_end":80734,"line_start":1383,"line_end":1383,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":80739,"byte_end":80742,"line_start":1384,"line_end":1384,"column_start":5,"column_end":8}},{"value":"/ let two = 2.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":80747,"byte_end":80765,"line_start":1385,"line_end":1385,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":80770,"byte_end":80773,"line_start":1386,"line_end":1386,"column_start":5,"column_end":8}},{"value":"/ // log2(2) - 1 == 0","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":80778,"byte_end":80801,"line_start":1387,"line_end":1387,"column_start":5,"column_end":28}},{"value":"/ let abs_difference = (two.log2() - 1.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":80806,"byte_end":80856,"line_start":1388,"line_end":1388,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":80861,"byte_end":80864,"line_start":1389,"line_end":1389,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":80869,"byte_end":80905,"line_start":1390,"line_end":1390,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":80910,"byte_end":80917,"line_start":1391,"line_end":1391,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":81244,"byte_end":81249,"line_start":1406,"line_end":1406,"column_start":8,"column_end":13},"name":"log10","qualname":"::float::Float::log10","value":"pub fn log10(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the base 10 logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the base 10 logarithm of the number.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":80950,"byte_end":80998,"line_start":1394,"line_end":1394,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":81003,"byte_end":81006,"line_start":1395,"line_end":1395,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":81011,"byte_end":81018,"line_start":1396,"line_end":1396,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":81023,"byte_end":81049,"line_start":1397,"line_end":1397,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":81054,"byte_end":81057,"line_start":1398,"line_end":1398,"column_start":5,"column_end":8}},{"value":"/ let ten = 10.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":81062,"byte_end":81081,"line_start":1399,"line_end":1399,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":81086,"byte_end":81089,"line_start":1400,"line_end":1400,"column_start":5,"column_end":8}},{"value":"/ // log10(10) - 1 == 0","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":81094,"byte_end":81119,"line_start":1401,"line_end":1401,"column_start":5,"column_end":30}},{"value":"/ let abs_difference = (ten.log10() - 1.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":81124,"byte_end":81175,"line_start":1402,"line_end":1402,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":81180,"byte_end":81183,"line_start":1403,"line_end":1403,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":81188,"byte_end":81224,"line_start":1404,"line_end":1404,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":81229,"byte_end":81236,"line_start":1405,"line_end":1405,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":81548,"byte_end":81558,"line_start":1420,"line_end":1420,"column_start":8,"column_end":18},"name":"to_degrees","qualname":"::float::Float::to_degrees","value":"pub fn to_degrees(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Converts radians to degrees.","sig":null,"attributes":[{"value":"/ Converts radians to degrees.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":81270,"byte_end":81302,"line_start":1408,"line_end":1408,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":81307,"byte_end":81310,"line_start":1409,"line_end":1409,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":81315,"byte_end":81322,"line_start":1410,"line_end":1410,"column_start":5,"column_end":12}},{"value":"/ use std::f64::consts;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":81327,"byte_end":81352,"line_start":1411,"line_end":1411,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":81357,"byte_end":81360,"line_start":1412,"line_end":1412,"column_start":5,"column_end":8}},{"value":"/ let angle = consts::PI;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":81365,"byte_end":81392,"line_start":1413,"line_end":1413,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":81397,"byte_end":81400,"line_start":1414,"line_end":1414,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (angle.to_degrees() - 180.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":81405,"byte_end":81465,"line_start":1415,"line_end":1415,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":81470,"byte_end":81473,"line_start":1416,"line_end":1416,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":81478,"byte_end":81514,"line_start":1417,"line_end":1417,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":81519,"byte_end":81526,"line_start":1418,"line_end":1418,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":81531,"byte_end":81540,"line_start":1419,"line_end":1419,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":81989,"byte_end":81999,"line_start":1438,"line_end":1438,"column_start":8,"column_end":18},"name":"to_radians","qualname":"::float::Float::to_radians","value":"pub fn to_radians(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Converts degrees to radians.","sig":null,"attributes":[{"value":"/ Converts degrees to radians.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":81707,"byte_end":81739,"line_start":1426,"line_end":1426,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":81744,"byte_end":81747,"line_start":1427,"line_end":1427,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":81752,"byte_end":81759,"line_start":1428,"line_end":1428,"column_start":5,"column_end":12}},{"value":"/ use std::f64::consts;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":81764,"byte_end":81789,"line_start":1429,"line_end":1429,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":81794,"byte_end":81797,"line_start":1430,"line_end":1430,"column_start":5,"column_end":8}},{"value":"/ let angle = 180.0_f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":81802,"byte_end":81828,"line_start":1431,"line_end":1431,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":81833,"byte_end":81836,"line_start":1432,"line_end":1432,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (angle.to_radians() - consts::PI).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":81841,"byte_end":81906,"line_start":1433,"line_end":1433,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":81911,"byte_end":81914,"line_start":1434,"line_end":1434,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":81919,"byte_end":81955,"line_start":1435,"line_end":1435,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":81960,"byte_end":81967,"line_start":1436,"line_end":1436,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":81972,"byte_end":81981,"line_start":1437,"line_end":1437,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":82353,"byte_end":82356,"line_start":1454,"line_end":1454,"column_start":8,"column_end":11},"name":"max","qualname":"::float::Float::max","value":"pub fn max(Self, Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the maximum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the maximum of the two numbers.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":82148,"byte_end":82191,"line_start":1444,"line_end":1444,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":82196,"byte_end":82199,"line_start":1445,"line_end":1445,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":82204,"byte_end":82211,"line_start":1446,"line_end":1446,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":82216,"byte_end":82242,"line_start":1447,"line_end":1447,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":82247,"byte_end":82250,"line_start":1448,"line_end":1448,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":82255,"byte_end":82271,"line_start":1449,"line_end":1449,"column_start":5,"column_end":21}},{"value":"/ let y = 2.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":82276,"byte_end":82292,"line_start":1450,"line_end":1450,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":82297,"byte_end":82300,"line_start":1451,"line_end":1451,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x.max(y), y);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":82305,"byte_end":82333,"line_start":1452,"line_end":1452,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":82338,"byte_end":82345,"line_start":1453,"line_end":1453,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":82595,"byte_end":82598,"line_start":1466,"line_end":1466,"column_start":8,"column_end":11},"name":"min","qualname":"::float::Float::min","value":"pub fn min(Self, Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the minimum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the minimum of the two numbers.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":82390,"byte_end":82433,"line_start":1456,"line_end":1456,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":82438,"byte_end":82441,"line_start":1457,"line_end":1457,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":82446,"byte_end":82453,"line_start":1458,"line_end":1458,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":82458,"byte_end":82484,"line_start":1459,"line_end":1459,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":82489,"byte_end":82492,"line_start":1460,"line_end":1460,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":82497,"byte_end":82513,"line_start":1461,"line_end":1461,"column_start":5,"column_end":21}},{"value":"/ let y = 2.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":82518,"byte_end":82534,"line_start":1462,"line_end":1462,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":82539,"byte_end":82542,"line_start":1463,"line_end":1463,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x.min(y), x);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":82547,"byte_end":82575,"line_start":1464,"line_end":1464,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":82580,"byte_end":82587,"line_start":1465,"line_end":1465,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":83096,"byte_end":83103,"line_start":1485,"line_end":1485,"column_start":8,"column_end":15},"name":"abs_sub","qualname":"::float::Float::abs_sub","value":"pub fn abs_sub(Self, Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" The positive difference of two numbers.","sig":null,"attributes":[{"value":"/ The positive difference of two numbers.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":82632,"byte_end":82675,"line_start":1468,"line_end":1468,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":82680,"byte_end":82683,"line_start":1469,"line_end":1469,"column_start":5,"column_end":8}},{"value":"/ * If `self <= other`: `0:0`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":82688,"byte_end":82719,"line_start":1470,"line_end":1470,"column_start":5,"column_end":36}},{"value":"/ * Else: `self - other`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":82724,"byte_end":82750,"line_start":1471,"line_end":1471,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":82755,"byte_end":82758,"line_start":1472,"line_end":1472,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":82763,"byte_end":82770,"line_start":1473,"line_end":1473,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":82775,"byte_end":82801,"line_start":1474,"line_end":1474,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":82806,"byte_end":82809,"line_start":1475,"line_end":1475,"column_start":5,"column_end":8}},{"value":"/ let x = 3.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":82814,"byte_end":82830,"line_start":1476,"line_end":1476,"column_start":5,"column_end":21}},{"value":"/ let y = -3.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":82835,"byte_end":82852,"line_start":1477,"line_end":1477,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":82857,"byte_end":82860,"line_start":1478,"line_end":1478,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_x = (x.abs_sub(1.0) - 2.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":82865,"byte_end":82921,"line_start":1479,"line_end":1479,"column_start":5,"column_end":61}},{"value":"/ let abs_difference_y = (y.abs_sub(1.0) - 0.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":82926,"byte_end":82982,"line_start":1480,"line_end":1480,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":82987,"byte_end":82990,"line_start":1481,"line_end":1481,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_x < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":82995,"byte_end":83033,"line_start":1482,"line_end":1482,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_y < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":83038,"byte_end":83076,"line_start":1483,"line_end":1483,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":83081,"byte_end":83088,"line_start":1484,"line_end":1484,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":83411,"byte_end":83415,"line_start":1499,"line_end":1499,"column_start":8,"column_end":12},"name":"cbrt","qualname":"::float::Float::cbrt","value":"pub fn cbrt(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Take the cubic root of a number.","sig":null,"attributes":[{"value":"/ Take the cubic root of a number.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":83137,"byte_end":83173,"line_start":1487,"line_end":1487,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":83178,"byte_end":83181,"line_start":1488,"line_end":1488,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":83186,"byte_end":83193,"line_start":1489,"line_end":1489,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":83198,"byte_end":83224,"line_start":1490,"line_end":1490,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":83229,"byte_end":83232,"line_start":1491,"line_end":1491,"column_start":5,"column_end":8}},{"value":"/ let x = 8.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":83237,"byte_end":83253,"line_start":1492,"line_end":1492,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":83258,"byte_end":83261,"line_start":1493,"line_end":1493,"column_start":5,"column_end":8}},{"value":"/ // x^(1/3) - 2 == 0","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":83266,"byte_end":83289,"line_start":1494,"line_end":1494,"column_start":5,"column_end":28}},{"value":"/ let abs_difference = (x.cbrt() - 2.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":83294,"byte_end":83342,"line_start":1495,"line_end":1495,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":83347,"byte_end":83350,"line_start":1496,"line_end":1496,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":83355,"byte_end":83391,"line_start":1497,"line_end":1497,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":83396,"byte_end":83403,"line_start":1498,"line_end":1498,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":83833,"byte_end":83838,"line_start":1515,"line_end":1515,"column_start":8,"column_end":13},"name":"hypot","qualname":"::float::Float::hypot","value":"pub fn hypot(Self, Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Calculate the length of the hypotenuse of a right-angle triangle given\n legs of length `x` and `y`.","sig":null,"attributes":[{"value":"/ Calculate the length of the hypotenuse of a right-angle triangle given","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":83436,"byte_end":83510,"line_start":1501,"line_end":1501,"column_start":5,"column_end":79}},{"value":"/ legs of length `x` and `y`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":83515,"byte_end":83546,"line_start":1502,"line_end":1502,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":83551,"byte_end":83554,"line_start":1503,"line_end":1503,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":83559,"byte_end":83566,"line_start":1504,"line_end":1504,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":83571,"byte_end":83597,"line_start":1505,"line_end":1505,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":83602,"byte_end":83605,"line_start":1506,"line_end":1506,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":83610,"byte_end":83626,"line_start":1507,"line_end":1507,"column_start":5,"column_end":21}},{"value":"/ let y = 3.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":83631,"byte_end":83647,"line_start":1508,"line_end":1508,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":83652,"byte_end":83655,"line_start":1509,"line_end":1509,"column_start":5,"column_end":8}},{"value":"/ // sqrt(x^2 + y^2)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":83660,"byte_end":83682,"line_start":1510,"line_end":1510,"column_start":5,"column_end":27}},{"value":"/ let abs_difference = (x.hypot(y) - (x.powi(2) + y.powi(2)).sqrt()).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":83687,"byte_end":83764,"line_start":1511,"line_end":1511,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":83769,"byte_end":83772,"line_start":1512,"line_end":1512,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":83777,"byte_end":83813,"line_start":1513,"line_end":1513,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":83818,"byte_end":83825,"line_start":1514,"line_end":1514,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":84166,"byte_end":84169,"line_start":1529,"line_end":1529,"column_start":8,"column_end":11},"name":"sin","qualname":"::float::Float::sin","value":"pub fn sin(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Computes the sine of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the sine of a number (in radians).","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":83872,"byte_end":83919,"line_start":1517,"line_end":1517,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":83924,"byte_end":83927,"line_start":1518,"line_end":1518,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":83932,"byte_end":83939,"line_start":1519,"line_end":1519,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":83944,"byte_end":83970,"line_start":1520,"line_end":1520,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":83975,"byte_end":83992,"line_start":1521,"line_end":1521,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":83997,"byte_end":84000,"line_start":1522,"line_end":1522,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::PI/2.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":84005,"byte_end":84037,"line_start":1523,"line_end":1523,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":84042,"byte_end":84045,"line_start":1524,"line_end":1524,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (x.sin() - 1.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":84050,"byte_end":84097,"line_start":1525,"line_end":1525,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":84102,"byte_end":84105,"line_start":1526,"line_end":1526,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":84110,"byte_end":84146,"line_start":1527,"line_end":1527,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":84151,"byte_end":84158,"line_start":1528,"line_end":1528,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":84486,"byte_end":84489,"line_start":1543,"line_end":1543,"column_start":8,"column_end":11},"name":"cos","qualname":"::float::Float::cos","value":"pub fn cos(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Computes the cosine of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the cosine of a number (in radians).","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":84190,"byte_end":84239,"line_start":1531,"line_end":1531,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":84244,"byte_end":84247,"line_start":1532,"line_end":1532,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":84252,"byte_end":84259,"line_start":1533,"line_end":1533,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":84264,"byte_end":84290,"line_start":1534,"line_end":1534,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":84295,"byte_end":84312,"line_start":1535,"line_end":1535,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":84317,"byte_end":84320,"line_start":1536,"line_end":1536,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0*f64::consts::PI;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":84325,"byte_end":84357,"line_start":1537,"line_end":1537,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":84362,"byte_end":84365,"line_start":1538,"line_end":1538,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (x.cos() - 1.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":84370,"byte_end":84417,"line_start":1539,"line_end":1539,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":84422,"byte_end":84425,"line_start":1540,"line_end":1540,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":84430,"byte_end":84466,"line_start":1541,"line_end":1541,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":84471,"byte_end":84478,"line_start":1542,"line_end":1542,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":84799,"byte_end":84802,"line_start":1556,"line_end":1556,"column_start":8,"column_end":11},"name":"tan","qualname":"::float::Float::tan","value":"pub fn tan(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Computes the tangent of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the tangent of a number (in radians).","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":84510,"byte_end":84560,"line_start":1545,"line_end":1545,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":84565,"byte_end":84568,"line_start":1546,"line_end":1546,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":84573,"byte_end":84580,"line_start":1547,"line_end":1547,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":84585,"byte_end":84611,"line_start":1548,"line_end":1548,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":84616,"byte_end":84633,"line_start":1549,"line_end":1549,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":84638,"byte_end":84641,"line_start":1550,"line_end":1550,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::PI/4.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":84646,"byte_end":84678,"line_start":1551,"line_end":1551,"column_start":5,"column_end":37}},{"value":"/ let abs_difference = (x.tan() - 1.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":84683,"byte_end":84730,"line_start":1552,"line_end":1552,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":84735,"byte_end":84738,"line_start":1553,"line_end":1553,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-14);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":84743,"byte_end":84779,"line_start":1554,"line_end":1554,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":84784,"byte_end":84791,"line_start":1555,"line_end":1555,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":85282,"byte_end":85286,"line_start":1573,"line_end":1573,"column_start":8,"column_end":12},"name":"asin","qualname":"::float::Float::asin","value":"pub fn asin(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Computes the arcsine of a number. Return value is in radians in\n the range [-pi/2, pi/2] or NaN if the number is outside the range\n [-1, 1].","sig":null,"attributes":[{"value":"/ Computes the arcsine of a number. Return value is in radians in","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":84823,"byte_end":84890,"line_start":1558,"line_end":1558,"column_start":5,"column_end":72}},{"value":"/ the range [-pi/2, pi/2] or NaN if the number is outside the range","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":84895,"byte_end":84964,"line_start":1559,"line_end":1559,"column_start":5,"column_end":74}},{"value":"/ [-1, 1].","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":84969,"byte_end":84981,"line_start":1560,"line_end":1560,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":84986,"byte_end":84989,"line_start":1561,"line_end":1561,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":84994,"byte_end":85001,"line_start":1562,"line_end":1562,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":85006,"byte_end":85032,"line_start":1563,"line_end":1563,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":85037,"byte_end":85054,"line_start":1564,"line_end":1564,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":85059,"byte_end":85062,"line_start":1565,"line_end":1565,"column_start":5,"column_end":8}},{"value":"/ let f = f64::consts::PI / 2.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":85067,"byte_end":85101,"line_start":1566,"line_end":1566,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":85106,"byte_end":85109,"line_start":1567,"line_end":1567,"column_start":5,"column_end":8}},{"value":"/ // asin(sin(pi/2))","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":85114,"byte_end":85136,"line_start":1568,"line_end":1568,"column_start":5,"column_end":27}},{"value":"/ let abs_difference = (f.sin().asin() - f64::consts::PI / 2.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":85141,"byte_end":85213,"line_start":1569,"line_end":1569,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":85218,"byte_end":85221,"line_start":1570,"line_end":1570,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":85226,"byte_end":85262,"line_start":1571,"line_end":1571,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":85267,"byte_end":85274,"line_start":1572,"line_end":1572,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":85762,"byte_end":85766,"line_start":1590,"line_end":1590,"column_start":8,"column_end":12},"name":"acos","qualname":"::float::Float::acos","value":"pub fn acos(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Computes the arccosine of a number. Return value is in radians in\n the range [0, pi] or NaN if the number is outside the range\n [-1, 1].","sig":null,"attributes":[{"value":"/ Computes the arccosine of a number. Return value is in radians in","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":85307,"byte_end":85376,"line_start":1575,"line_end":1575,"column_start":5,"column_end":74}},{"value":"/ the range [0, pi] or NaN if the number is outside the range","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":85381,"byte_end":85444,"line_start":1576,"line_end":1576,"column_start":5,"column_end":68}},{"value":"/ [-1, 1].","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":85449,"byte_end":85461,"line_start":1577,"line_end":1577,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":85466,"byte_end":85469,"line_start":1578,"line_end":1578,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":85474,"byte_end":85481,"line_start":1579,"line_end":1579,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":85486,"byte_end":85512,"line_start":1580,"line_end":1580,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":85517,"byte_end":85534,"line_start":1581,"line_end":1581,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":85539,"byte_end":85542,"line_start":1582,"line_end":1582,"column_start":5,"column_end":8}},{"value":"/ let f = f64::consts::PI / 4.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":85547,"byte_end":85581,"line_start":1583,"line_end":1583,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":85586,"byte_end":85589,"line_start":1584,"line_end":1584,"column_start":5,"column_end":8}},{"value":"/ // acos(cos(pi/4))","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":85594,"byte_end":85616,"line_start":1585,"line_end":1585,"column_start":5,"column_end":27}},{"value":"/ let abs_difference = (f.cos().acos() - f64::consts::PI / 4.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":85621,"byte_end":85693,"line_start":1586,"line_end":1586,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":85698,"byte_end":85701,"line_start":1587,"line_end":1587,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":85706,"byte_end":85742,"line_start":1588,"line_end":1588,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":85747,"byte_end":85754,"line_start":1589,"line_end":1589,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":86130,"byte_end":86134,"line_start":1605,"line_end":1605,"column_start":8,"column_end":12},"name":"atan","qualname":"::float::Float::atan","value":"pub fn atan(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Computes the arctangent of a number. Return value is in radians in the\n range [-pi/2, pi/2];","sig":null,"attributes":[{"value":"/ Computes the arctangent of a number. Return value is in radians in the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":85787,"byte_end":85861,"line_start":1592,"line_end":1592,"column_start":5,"column_end":79}},{"value":"/ range [-pi/2, pi/2];","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":85866,"byte_end":85890,"line_start":1593,"line_end":1593,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":85895,"byte_end":85898,"line_start":1594,"line_end":1594,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":85903,"byte_end":85910,"line_start":1595,"line_end":1595,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":85915,"byte_end":85941,"line_start":1596,"line_end":1596,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":85946,"byte_end":85949,"line_start":1597,"line_end":1597,"column_start":5,"column_end":8}},{"value":"/ let f = 1.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":85954,"byte_end":85970,"line_start":1598,"line_end":1598,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":85975,"byte_end":85978,"line_start":1599,"line_end":1599,"column_start":5,"column_end":8}},{"value":"/ // atan(tan(1))","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":85983,"byte_end":86002,"line_start":1600,"line_end":1600,"column_start":5,"column_end":24}},{"value":"/ let abs_difference = (f.tan().atan() - 1.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":86007,"byte_end":86061,"line_start":1601,"line_end":1601,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":86066,"byte_end":86069,"line_start":1602,"line_end":1602,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":86074,"byte_end":86110,"line_start":1603,"line_end":1603,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":86115,"byte_end":86122,"line_start":1604,"line_end":1604,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":87015,"byte_end":87020,"line_start":1634,"line_end":1634,"column_start":8,"column_end":13},"name":"atan2","qualname":"::float::Float::atan2","value":"pub fn atan2(Self, Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).","sig":null,"attributes":[{"value":"/ Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":86155,"byte_end":86231,"line_start":1607,"line_end":1607,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":86236,"byte_end":86239,"line_start":1608,"line_end":1608,"column_start":5,"column_end":8}},{"value":"/ * `x = 0`, `y = 0`: `0`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":86244,"byte_end":86271,"line_start":1609,"line_end":1609,"column_start":5,"column_end":32}},{"value":"/ * `x >= 0`: `arctan(y/x)` -> `[-pi/2, pi/2]`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":86276,"byte_end":86324,"line_start":1610,"line_end":1610,"column_start":5,"column_end":53}},{"value":"/ * `y >= 0`: `arctan(y/x) + pi` -> `(pi/2, pi]`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":86329,"byte_end":86379,"line_start":1611,"line_end":1611,"column_start":5,"column_end":55}},{"value":"/ * `y < 0`: `arctan(y/x) - pi` -> `(-pi, -pi/2)`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":86384,"byte_end":86435,"line_start":1612,"line_end":1612,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":86440,"byte_end":86443,"line_start":1613,"line_end":1613,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":86448,"byte_end":86455,"line_start":1614,"line_end":1614,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":86460,"byte_end":86486,"line_start":1615,"line_end":1615,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":86491,"byte_end":86508,"line_start":1616,"line_end":1616,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":86513,"byte_end":86516,"line_start":1617,"line_end":1617,"column_start":5,"column_end":8}},{"value":"/ let pi = f64::consts::PI;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":86521,"byte_end":86550,"line_start":1618,"line_end":1618,"column_start":5,"column_end":34}},{"value":"/ // All angles from horizontal right (+x)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":86555,"byte_end":86599,"line_start":1619,"line_end":1619,"column_start":5,"column_end":49}},{"value":"/ // 45 deg counter-clockwise","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":86604,"byte_end":86635,"line_start":1620,"line_end":1620,"column_start":5,"column_end":36}},{"value":"/ let x1 = 3.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":86640,"byte_end":86657,"line_start":1621,"line_end":1621,"column_start":5,"column_end":22}},{"value":"/ let y1 = -3.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":86662,"byte_end":86680,"line_start":1622,"line_end":1622,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":86685,"byte_end":86688,"line_start":1623,"line_end":1623,"column_start":5,"column_end":8}},{"value":"/ // 135 deg clockwise","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":86693,"byte_end":86717,"line_start":1624,"line_end":1624,"column_start":5,"column_end":29}},{"value":"/ let x2 = -3.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":86722,"byte_end":86740,"line_start":1625,"line_end":1625,"column_start":5,"column_end":23}},{"value":"/ let y2 = 3.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":86745,"byte_end":86762,"line_start":1626,"line_end":1626,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":86767,"byte_end":86770,"line_start":1627,"line_end":1627,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_1 = (y1.atan2(x1) - (-pi/4.0)).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":86775,"byte_end":86835,"line_start":1628,"line_end":1628,"column_start":5,"column_end":65}},{"value":"/ let abs_difference_2 = (y2.atan2(x2) - 3.0*pi/4.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":86840,"byte_end":86901,"line_start":1629,"line_end":1629,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":86906,"byte_end":86909,"line_start":1630,"line_end":1630,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_1 < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":86914,"byte_end":86952,"line_start":1631,"line_end":1631,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_2 < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":86957,"byte_end":86995,"line_start":1632,"line_end":1632,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":87000,"byte_end":87007,"line_start":1633,"line_end":1633,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":87534,"byte_end":87541,"line_start":1652,"line_end":1652,"column_start":8,"column_end":15},"name":"sin_cos","qualname":"::float::Float::sin_cos","value":"pub fn sin_cos(Self) -> (Self, Self)","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Simultaneously computes the sine and cosine of the number, `x`. Returns\n `(sin(x), cos(x))`.","sig":null,"attributes":[{"value":"/ Simultaneously computes the sine and cosine of the number, `x`. Returns","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":87054,"byte_end":87129,"line_start":1636,"line_end":1636,"column_start":5,"column_end":80}},{"value":"/ `(sin(x), cos(x))`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":87134,"byte_end":87157,"line_start":1637,"line_end":1637,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":87162,"byte_end":87165,"line_start":1638,"line_end":1638,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":87170,"byte_end":87177,"line_start":1639,"line_end":1639,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":87182,"byte_end":87208,"line_start":1640,"line_end":1640,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":87213,"byte_end":87230,"line_start":1641,"line_end":1641,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":87235,"byte_end":87238,"line_start":1642,"line_end":1642,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::PI/4.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":87243,"byte_end":87275,"line_start":1643,"line_end":1643,"column_start":5,"column_end":37}},{"value":"/ let f = x.sin_cos();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":87280,"byte_end":87304,"line_start":1644,"line_end":1644,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":87309,"byte_end":87312,"line_start":1645,"line_end":1645,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_0 = (f.0 - x.sin()).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":87317,"byte_end":87366,"line_start":1646,"line_end":1646,"column_start":5,"column_end":54}},{"value":"/ let abs_difference_1 = (f.1 - x.cos()).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":87371,"byte_end":87420,"line_start":1647,"line_end":1647,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":87425,"byte_end":87428,"line_start":1648,"line_end":1648,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_0 < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":87433,"byte_end":87471,"line_start":1649,"line_end":1649,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_0 < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":87476,"byte_end":87514,"line_start":1650,"line_end":1650,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":87519,"byte_end":87526,"line_start":1651,"line_end":1651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":87909,"byte_end":87915,"line_start":1667,"line_end":1667,"column_start":8,"column_end":14},"name":"exp_m1","qualname":"::float::Float::exp_m1","value":"pub fn exp_m1(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns `e^(self) - 1` in a way that is accurate even if the\n number is close to zero.","sig":null,"attributes":[{"value":"/ Returns `e^(self) - 1` in a way that is accurate even if the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":87570,"byte_end":87634,"line_start":1654,"line_end":1654,"column_start":5,"column_end":69}},{"value":"/ number is close to zero.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":87639,"byte_end":87667,"line_start":1655,"line_end":1655,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":87672,"byte_end":87675,"line_start":1656,"line_end":1656,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":87680,"byte_end":87687,"line_start":1657,"line_end":1657,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":87692,"byte_end":87718,"line_start":1658,"line_end":1658,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":87723,"byte_end":87726,"line_start":1659,"line_end":1659,"column_start":5,"column_end":8}},{"value":"/ let x = 7.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":87731,"byte_end":87747,"line_start":1660,"line_end":1660,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":87752,"byte_end":87755,"line_start":1661,"line_end":1661,"column_start":5,"column_end":8}},{"value":"/ // e^(ln(7)) - 1","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":87760,"byte_end":87780,"line_start":1662,"line_end":1662,"column_start":5,"column_end":25}},{"value":"/ let abs_difference = (x.ln().exp_m1() - 6.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":87785,"byte_end":87840,"line_start":1663,"line_end":1663,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":87845,"byte_end":87848,"line_start":1664,"line_end":1664,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":87853,"byte_end":87889,"line_start":1665,"line_end":1665,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":87894,"byte_end":87901,"line_start":1666,"line_end":1666,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88342,"byte_end":88347,"line_start":1683,"line_end":1683,"column_start":8,"column_end":13},"name":"ln_1p","qualname":"::float::Float::ln_1p","value":"pub fn ln_1p(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns `ln(1+n)` (natural logarithm) more accurately than if\n the operations were performed separately.","sig":null,"attributes":[{"value":"/ Returns `ln(1+n)` (natural logarithm) more accurately than if","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":87936,"byte_end":88001,"line_start":1669,"line_end":1669,"column_start":5,"column_end":70}},{"value":"/ the operations were performed separately.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88006,"byte_end":88051,"line_start":1670,"line_end":1670,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88056,"byte_end":88059,"line_start":1671,"line_end":1671,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88064,"byte_end":88071,"line_start":1672,"line_end":1672,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88076,"byte_end":88102,"line_start":1673,"line_end":1673,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88107,"byte_end":88124,"line_start":1674,"line_end":1674,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88129,"byte_end":88132,"line_start":1675,"line_end":1675,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::E - 1.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88137,"byte_end":88170,"line_start":1676,"line_end":1676,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88175,"byte_end":88178,"line_start":1677,"line_end":1677,"column_start":5,"column_end":8}},{"value":"/ // ln(1 + (e - 1)) == ln(e) == 1","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88183,"byte_end":88219,"line_start":1678,"line_end":1678,"column_start":5,"column_end":41}},{"value":"/ let abs_difference = (x.ln_1p() - 1.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88224,"byte_end":88273,"line_start":1679,"line_end":1679,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88278,"byte_end":88281,"line_start":1680,"line_end":1680,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88286,"byte_end":88322,"line_start":1681,"line_end":1681,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88327,"byte_end":88334,"line_start":1682,"line_end":1682,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88767,"byte_end":88771,"line_start":1701,"line_end":1701,"column_start":8,"column_end":12},"name":"sinh","qualname":"::float::Float::sinh","value":"pub fn sinh(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Hyperbolic sine function.","sig":null,"attributes":[{"value":"/ Hyperbolic sine function.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88368,"byte_end":88397,"line_start":1685,"line_end":1685,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88402,"byte_end":88405,"line_start":1686,"line_end":1686,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88410,"byte_end":88417,"line_start":1687,"line_end":1687,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88422,"byte_end":88448,"line_start":1688,"line_end":1688,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88453,"byte_end":88470,"line_start":1689,"line_end":1689,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88475,"byte_end":88478,"line_start":1690,"line_end":1690,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88483,"byte_end":88510,"line_start":1691,"line_end":1691,"column_start":5,"column_end":32}},{"value":"/ let x = 1.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88515,"byte_end":88531,"line_start":1692,"line_end":1692,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88536,"byte_end":88539,"line_start":1693,"line_end":1693,"column_start":5,"column_end":8}},{"value":"/ let f = x.sinh();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88544,"byte_end":88565,"line_start":1694,"line_end":1694,"column_start":5,"column_end":26}},{"value":"/ // Solving sinh() at 1 gives `(e^2-1)/(2e)`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88570,"byte_end":88617,"line_start":1695,"line_end":1695,"column_start":5,"column_end":52}},{"value":"/ let g = (e*e - 1.0)/(2.0*e);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88622,"byte_end":88654,"line_start":1696,"line_end":1696,"column_start":5,"column_end":37}},{"value":"/ let abs_difference = (f - g).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88659,"byte_end":88698,"line_start":1697,"line_end":1697,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88703,"byte_end":88706,"line_start":1698,"line_end":1698,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88711,"byte_end":88747,"line_start":1699,"line_end":1699,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88752,"byte_end":88759,"line_start":1700,"line_end":1700,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":89207,"byte_end":89211,"line_start":1719,"line_end":1719,"column_start":8,"column_end":12},"name":"cosh","qualname":"::float::Float::cosh","value":"pub fn cosh(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Hyperbolic cosine function.","sig":null,"attributes":[{"value":"/ Hyperbolic cosine function.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88792,"byte_end":88823,"line_start":1703,"line_end":1703,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88828,"byte_end":88831,"line_start":1704,"line_end":1704,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88836,"byte_end":88843,"line_start":1705,"line_end":1705,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88848,"byte_end":88874,"line_start":1706,"line_end":1706,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88879,"byte_end":88896,"line_start":1707,"line_end":1707,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88901,"byte_end":88904,"line_start":1708,"line_end":1708,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88909,"byte_end":88936,"line_start":1709,"line_end":1709,"column_start":5,"column_end":32}},{"value":"/ let x = 1.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88941,"byte_end":88957,"line_start":1710,"line_end":1710,"column_start":5,"column_end":21}},{"value":"/ let f = x.cosh();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88962,"byte_end":88983,"line_start":1711,"line_end":1711,"column_start":5,"column_end":26}},{"value":"/ // Solving cosh() at 1 gives this result","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":88988,"byte_end":89032,"line_start":1712,"line_end":1712,"column_start":5,"column_end":49}},{"value":"/ let g = (e*e + 1.0)/(2.0*e);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":89037,"byte_end":89069,"line_start":1713,"line_end":1713,"column_start":5,"column_end":37}},{"value":"/ let abs_difference = (f - g).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":89074,"byte_end":89113,"line_start":1714,"line_end":1714,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":89118,"byte_end":89121,"line_start":1715,"line_end":1715,"column_start":5,"column_end":8}},{"value":"/ // Same result","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":89126,"byte_end":89144,"line_start":1716,"line_end":1716,"column_start":5,"column_end":23}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":89149,"byte_end":89187,"line_start":1717,"line_end":1717,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":89192,"byte_end":89199,"line_start":1718,"line_end":1718,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":89667,"byte_end":89671,"line_start":1737,"line_end":1737,"column_start":8,"column_end":12},"name":"tanh","qualname":"::float::Float::tanh","value":"pub fn tanh(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Hyperbolic tangent function.","sig":null,"attributes":[{"value":"/ Hyperbolic tangent function.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":89232,"byte_end":89264,"line_start":1721,"line_end":1721,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":89269,"byte_end":89272,"line_start":1722,"line_end":1722,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":89277,"byte_end":89284,"line_start":1723,"line_end":1723,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":89289,"byte_end":89315,"line_start":1724,"line_end":1724,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":89320,"byte_end":89337,"line_start":1725,"line_end":1725,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":89342,"byte_end":89345,"line_start":1726,"line_end":1726,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":89350,"byte_end":89377,"line_start":1727,"line_end":1727,"column_start":5,"column_end":32}},{"value":"/ let x = 1.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":89382,"byte_end":89398,"line_start":1728,"line_end":1728,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":89403,"byte_end":89406,"line_start":1729,"line_end":1729,"column_start":5,"column_end":8}},{"value":"/ let f = x.tanh();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":89411,"byte_end":89432,"line_start":1730,"line_end":1730,"column_start":5,"column_end":26}},{"value":"/ // Solving tanh() at 1 gives `(1 - e^(-2))/(1 + e^(-2))`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":89437,"byte_end":89497,"line_start":1731,"line_end":1731,"column_start":5,"column_end":65}},{"value":"/ let g = (1.0 - e.powi(-2))/(1.0 + e.powi(-2));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":89502,"byte_end":89552,"line_start":1732,"line_end":1732,"column_start":5,"column_end":55}},{"value":"/ let abs_difference = (f - g).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":89557,"byte_end":89596,"line_start":1733,"line_end":1733,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":89601,"byte_end":89604,"line_start":1734,"line_end":1734,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":89609,"byte_end":89647,"line_start":1735,"line_end":1735,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":89652,"byte_end":89659,"line_start":1736,"line_end":1736,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":89966,"byte_end":89971,"line_start":1751,"line_end":1751,"column_start":8,"column_end":13},"name":"asinh","qualname":"::float::Float::asinh","value":"pub fn asinh(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Inverse hyperbolic sine function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic sine function.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":89692,"byte_end":89729,"line_start":1739,"line_end":1739,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":89734,"byte_end":89737,"line_start":1740,"line_end":1740,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":89742,"byte_end":89749,"line_start":1741,"line_end":1741,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":89754,"byte_end":89780,"line_start":1742,"line_end":1742,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":89785,"byte_end":89788,"line_start":1743,"line_end":1743,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":89793,"byte_end":89809,"line_start":1744,"line_end":1744,"column_start":5,"column_end":21}},{"value":"/ let f = x.sinh().asinh();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":89814,"byte_end":89843,"line_start":1745,"line_end":1745,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":89848,"byte_end":89851,"line_start":1746,"line_end":1746,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (f - x).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":89856,"byte_end":89895,"line_start":1747,"line_end":1747,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":89900,"byte_end":89903,"line_start":1748,"line_end":1748,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":89908,"byte_end":89946,"line_start":1749,"line_end":1749,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":89951,"byte_end":89958,"line_start":1750,"line_end":1750,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":90268,"byte_end":90273,"line_start":1765,"line_end":1765,"column_start":8,"column_end":13},"name":"acosh","qualname":"::float::Float::acosh","value":"pub fn acosh(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Inverse hyperbolic cosine function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic cosine function.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":89992,"byte_end":90031,"line_start":1753,"line_end":1753,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":90036,"byte_end":90039,"line_start":1754,"line_end":1754,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":90044,"byte_end":90051,"line_start":1755,"line_end":1755,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":90056,"byte_end":90082,"line_start":1756,"line_end":1756,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":90087,"byte_end":90090,"line_start":1757,"line_end":1757,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":90095,"byte_end":90111,"line_start":1758,"line_end":1758,"column_start":5,"column_end":21}},{"value":"/ let f = x.cosh().acosh();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":90116,"byte_end":90145,"line_start":1759,"line_end":1759,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":90150,"byte_end":90153,"line_start":1760,"line_end":1760,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (f - x).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":90158,"byte_end":90197,"line_start":1761,"line_end":1761,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":90202,"byte_end":90205,"line_start":1762,"line_end":1762,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":90210,"byte_end":90248,"line_start":1763,"line_end":1763,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":90253,"byte_end":90260,"line_start":1764,"line_end":1764,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":90604,"byte_end":90609,"line_start":1780,"line_end":1780,"column_start":8,"column_end":13},"name":"atanh","qualname":"::float::Float::atanh","value":"pub fn atanh(Self) -> Self","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Inverse hyperbolic tangent function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic tangent function.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":90294,"byte_end":90334,"line_start":1767,"line_end":1767,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":90339,"byte_end":90342,"line_start":1768,"line_end":1768,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":90347,"byte_end":90354,"line_start":1769,"line_end":1769,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":90359,"byte_end":90385,"line_start":1770,"line_end":1770,"column_start":5,"column_end":31}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":90390,"byte_end":90407,"line_start":1771,"line_end":1771,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":90412,"byte_end":90415,"line_start":1772,"line_end":1772,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":90420,"byte_end":90447,"line_start":1773,"line_end":1773,"column_start":5,"column_end":32}},{"value":"/ let f = e.tanh().atanh();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":90452,"byte_end":90481,"line_start":1774,"line_end":1774,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":90486,"byte_end":90489,"line_start":1775,"line_end":1775,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (f - e).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":90494,"byte_end":90533,"line_start":1776,"line_end":1776,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":90538,"byte_end":90541,"line_start":1777,"line_end":1777,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":90546,"byte_end":90584,"line_start":1778,"line_end":1778,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":90589,"byte_end":90596,"line_start":1779,"line_end":1779,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":91301,"byte_end":91315,"line_start":1801,"line_end":1801,"column_start":8,"column_end":22},"name":"integer_decode","qualname":"::float::Float::integer_decode","value":"pub fn integer_decode(Self) -> (u64, i16, i8)","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" Returns the mantissa, base 2 exponent, and sign as integers, respectively.\n The original number can be recovered by `sign * mantissa * 2 ^ exponent`.","sig":null,"attributes":[{"value":"/ Returns the mantissa, base 2 exponent, and sign as integers, respectively.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":90630,"byte_end":90708,"line_start":1782,"line_end":1782,"column_start":5,"column_end":83}},{"value":"/ The original number can be recovered by `sign * mantissa * 2 ^ exponent`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":90713,"byte_end":90790,"line_start":1783,"line_end":1783,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":90795,"byte_end":90798,"line_start":1784,"line_end":1784,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":90803,"byte_end":90810,"line_start":1785,"line_end":1785,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Float;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":90815,"byte_end":90841,"line_start":1786,"line_end":1786,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":90846,"byte_end":90849,"line_start":1787,"line_end":1787,"column_start":5,"column_end":8}},{"value":"/ let num = 2.0f32;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":90854,"byte_end":90875,"line_start":1788,"line_end":1788,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":90880,"byte_end":90883,"line_start":1789,"line_end":1789,"column_start":5,"column_end":8}},{"value":"/ // (8388608, -22, 1)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":90888,"byte_end":90912,"line_start":1790,"line_end":1790,"column_start":5,"column_end":29}},{"value":"/ let (mantissa, exponent, sign) = Float::integer_decode(num);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":90917,"byte_end":90981,"line_start":1791,"line_end":1791,"column_start":5,"column_end":69}},{"value":"/ let sign_f = sign as f32;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":90986,"byte_end":91015,"line_start":1792,"line_end":1792,"column_start":5,"column_end":34}},{"value":"/ let mantissa_f = mantissa as f32;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":91020,"byte_end":91057,"line_start":1793,"line_end":1793,"column_start":5,"column_end":42}},{"value":"/ let exponent_f = num.powf(exponent as f32);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":91062,"byte_end":91109,"line_start":1794,"line_end":1794,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":91114,"byte_end":91117,"line_start":1795,"line_end":1795,"column_start":5,"column_end":8}},{"value":"/ // 1 * 8388608 * 2^(-22) == 2","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":91122,"byte_end":91155,"line_start":1796,"line_end":1796,"column_start":5,"column_end":38}},{"value":"/ let abs_difference = (sign_f * mantissa_f * exponent_f - num).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":91160,"byte_end":91232,"line_start":1797,"line_end":1797,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":91237,"byte_end":91240,"line_start":1798,"line_end":1798,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":91245,"byte_end":91281,"line_start":1799,"line_end":1799,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":91286,"byte_end":91293,"line_start":1800,"line_end":1800,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2100},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":95960,"byte_end":95961,"line_start":1936,"line_end":1936,"column_start":5,"column_end":6},"name":"E","qualname":"::float::FloatConst::E","value":"pub fn E() -> Self","parent":{"krate":0,"index":2099},"children":[],"decl_id":null,"docs":"Return Euler’s number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2101},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96001,"byte_end":96010,"line_start":1938,"line_end":1938,"column_start":5,"column_end":14},"name":"FRAC_1_PI","qualname":"::float::FloatConst::FRAC_1_PI","value":"pub fn FRAC_1_PI() -> Self","parent":{"krate":0,"index":2099},"children":[],"decl_id":null,"docs":"Return `1.0 / π`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2102},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96057,"byte_end":96070,"line_start":1940,"line_end":1940,"column_start":5,"column_end":18},"name":"FRAC_1_SQRT_2","qualname":"::float::FloatConst::FRAC_1_SQRT_2","value":"pub fn FRAC_1_SQRT_2() -> Self","parent":{"krate":0,"index":2099},"children":[],"decl_id":null,"docs":"Return `1.0 / sqrt(2.0)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2103},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96110,"byte_end":96119,"line_start":1942,"line_end":1942,"column_start":5,"column_end":14},"name":"FRAC_2_PI","qualname":"::float::FloatConst::FRAC_2_PI","value":"pub fn FRAC_2_PI() -> Self","parent":{"krate":0,"index":2099},"children":[],"decl_id":null,"docs":"Return `2.0 / π`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2104},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96165,"byte_end":96179,"line_start":1944,"line_end":1944,"column_start":5,"column_end":19},"name":"FRAC_2_SQRT_PI","qualname":"::float::FloatConst::FRAC_2_SQRT_PI","value":"pub fn FRAC_2_SQRT_PI() -> Self","parent":{"krate":0,"index":2099},"children":[],"decl_id":null,"docs":"Return `2.0 / sqrt(π)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2105},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96219,"byte_end":96228,"line_start":1946,"line_end":1946,"column_start":5,"column_end":14},"name":"FRAC_PI_2","qualname":"::float::FloatConst::FRAC_PI_2","value":"pub fn FRAC_PI_2() -> Self","parent":{"krate":0,"index":2099},"children":[],"decl_id":null,"docs":"Return `π / 2.0`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2106},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96268,"byte_end":96277,"line_start":1948,"line_end":1948,"column_start":5,"column_end":14},"name":"FRAC_PI_3","qualname":"::float::FloatConst::FRAC_PI_3","value":"pub fn FRAC_PI_3() -> Self","parent":{"krate":0,"index":2099},"children":[],"decl_id":null,"docs":"Return `π / 3.0`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2107},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96317,"byte_end":96326,"line_start":1950,"line_end":1950,"column_start":5,"column_end":14},"name":"FRAC_PI_4","qualname":"::float::FloatConst::FRAC_PI_4","value":"pub fn FRAC_PI_4() -> Self","parent":{"krate":0,"index":2099},"children":[],"decl_id":null,"docs":"Return `π / 4.0`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2108},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96366,"byte_end":96375,"line_start":1952,"line_end":1952,"column_start":5,"column_end":14},"name":"FRAC_PI_6","qualname":"::float::FloatConst::FRAC_PI_6","value":"pub fn FRAC_PI_6() -> Self","parent":{"krate":0,"index":2099},"children":[],"decl_id":null,"docs":"Return `π / 6.0`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2109},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96415,"byte_end":96424,"line_start":1954,"line_end":1954,"column_start":5,"column_end":14},"name":"FRAC_PI_8","qualname":"::float::FloatConst::FRAC_PI_8","value":"pub fn FRAC_PI_8() -> Self","parent":{"krate":0,"index":2099},"children":[],"decl_id":null,"docs":"Return `π / 8.0`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2110},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96464,"byte_end":96469,"line_start":1956,"line_end":1956,"column_start":5,"column_end":10},"name":"LN_10","qualname":"::float::FloatConst::LN_10","value":"pub fn LN_10() -> Self","parent":{"krate":0,"index":2099},"children":[],"decl_id":null,"docs":"Return `ln(10.0)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2111},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96508,"byte_end":96512,"line_start":1958,"line_end":1958,"column_start":5,"column_end":9},"name":"LN_2","qualname":"::float::FloatConst::LN_2","value":"pub fn LN_2() -> Self","parent":{"krate":0,"index":2099},"children":[],"decl_id":null,"docs":"Return `ln(2.0)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2112},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96552,"byte_end":96559,"line_start":1960,"line_end":1960,"column_start":5,"column_end":12},"name":"LOG10_E","qualname":"::float::FloatConst::LOG10_E","value":"pub fn LOG10_E() -> Self","parent":{"krate":0,"index":2099},"children":[],"decl_id":null,"docs":"Return `log10(e)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2113},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96598,"byte_end":96604,"line_start":1962,"line_end":1962,"column_start":5,"column_end":11},"name":"LOG2_E","qualname":"::float::FloatConst::LOG2_E","value":"pub fn LOG2_E() -> Self","parent":{"krate":0,"index":2099},"children":[],"decl_id":null,"docs":"Return `log2(e)`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2114},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96656,"byte_end":96658,"line_start":1964,"line_end":1964,"column_start":5,"column_end":7},"name":"PI","qualname":"::float::FloatConst::PI","value":"pub fn PI() -> Self","parent":{"krate":0,"index":2099},"children":[],"decl_id":null,"docs":"Return Archimedes’ constant.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2115},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":96699,"byte_end":96705,"line_start":1966,"line_end":1966,"column_start":5,"column_end":11},"name":"SQRT_2","qualname":"::float::FloatConst::SQRT_2","value":"pub fn SQRT_2() -> Self","parent":{"krate":0,"index":2099},"children":[],"decl_id":null,"docs":"Return `sqrt(2.0)`.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":288},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"identities","qualname":"::identities","value":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":4550},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":2150},{"krate":0,"index":2153},{"krate":0,"index":2156},{"krate":0,"index":2159},{"krate":0,"index":2162},{"krate":0,"index":2165},{"krate":0,"index":2168},{"krate":0,"index":2171},{"krate":0,"index":2174},{"krate":0,"index":2177},{"krate":0,"index":2180},{"krate":0,"index":2183},{"krate":0,"index":2186},{"krate":0,"index":2189},{"krate":0,"index":298},{"krate":0,"index":303},{"krate":0,"index":2192},{"krate":0,"index":2195},{"krate":0,"index":2198},{"krate":0,"index":2201},{"krate":0,"index":2204},{"krate":0,"index":2207},{"krate":0,"index":2210},{"krate":0,"index":2213},{"krate":0,"index":2216},{"krate":0,"index":2219},{"krate":0,"index":2222},{"krate":0,"index":2225},{"krate":0,"index":2228},{"krate":0,"index":2231},{"krate":0,"index":308},{"krate":0,"index":312},{"krate":0,"index":314}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":98589,"byte_end":98593,"line_start":12,"line_end":12,"column_start":11,"column_end":15},"name":"Zero","qualname":"::identities::Zero","value":"Zero: Sized + Add<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296}],"decl_id":null,"docs":" Defines an additive identity element for `Self`.","sig":null,"attributes":[{"value":"/ Defines an additive identity element for `Self`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":98414,"byte_end":98466,"line_start":4,"line_end":4,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":98467,"byte_end":98470,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Laws","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":98471,"byte_end":98481,"line_start":6,"line_end":6,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":98482,"byte_end":98485,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ```{.text}","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":98486,"byte_end":98500,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"/ a + 0 = a       ∀ a ∈ Self","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":98501,"byte_end":98535,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/ 0 + a = a       ∀ a ∈ Self","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":98536,"byte_end":98570,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":98571,"byte_end":98578,"line_start":11,"line_end":11,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":98963,"byte_end":98967,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"zero","qualname":"::identities::Zero::zero","value":"pub fn zero() -> Self","parent":{"krate":0,"index":293},"children":[],"decl_id":null,"docs":" Returns the additive identity element of `Self`, `0`.\n # Purity","sig":null,"attributes":[{"value":"/ Returns the additive identity element of `Self`, `0`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":98634,"byte_end":98691,"line_start":13,"line_end":13,"column_start":5,"column_end":62}},{"value":"/ # Purity","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":98696,"byte_end":98708,"line_start":14,"line_end":14,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":98713,"byte_end":98716,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ This function should return the same result at all times regardless of","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":98721,"byte_end":98795,"line_start":16,"line_end":16,"column_start":5,"column_end":79}},{"value":"/ external mutable state, for example values stored in TLS or in","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":98800,"byte_end":98866,"line_start":17,"line_end":17,"column_start":5,"column_end":71}},{"value":"/ `static mut`s.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":98871,"byte_end":98889,"line_start":18,"line_end":18,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":99056,"byte_end":99064,"line_start":23,"line_end":23,"column_start":8,"column_end":16},"name":"set_zero","qualname":"::identities::Zero::set_zero","value":"pub fn set_zero(&mut Self)","parent":{"krate":0,"index":293},"children":[],"decl_id":null,"docs":" Sets `self` to the additive identity element of `Self`, `0`.\n","sig":null,"attributes":[{"value":"/ Sets `self` to the additive identity element of `Self`, `0`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":98984,"byte_end":99048,"line_start":22,"line_end":22,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":99204,"byte_end":99211,"line_start":29,"line_end":29,"column_start":8,"column_end":15},"name":"is_zero","qualname":"::identities::Zero::is_zero","value":"pub fn is_zero(&Self) -> bool","parent":{"krate":0,"index":293},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is equal to the additive identity.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is equal to the additive identity.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":99119,"byte_end":99182,"line_start":27,"line_end":27,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":99187,"byte_end":99196,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":303},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100298,"byte_end":100301,"line_start":91,"line_end":91,"column_start":11,"column_end":14},"name":"One","qualname":"::identities::One","value":"One: Sized + Mul<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306}],"decl_id":null,"docs":" Defines a multiplicative identity element for `Self`.","sig":null,"attributes":[{"value":"/ Defines a multiplicative identity element for `Self`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100118,"byte_end":100175,"line_start":83,"line_end":83,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100176,"byte_end":100179,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ # Laws","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100180,"byte_end":100190,"line_start":85,"line_end":85,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100191,"byte_end":100194,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ ```{.text}","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100195,"byte_end":100209,"line_start":87,"line_end":87,"column_start":1,"column_end":15}},{"value":"/ a * 1 = a       ∀ a ∈ Self","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100210,"byte_end":100244,"line_start":88,"line_end":88,"column_start":1,"column_end":31}},{"value":"/ 1 * a = a       ∀ a ∈ Self","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100245,"byte_end":100279,"line_start":89,"line_end":89,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100280,"byte_end":100287,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100685,"byte_end":100688,"line_start":100,"line_end":100,"column_start":8,"column_end":11},"name":"one","qualname":"::identities::One::one","value":"pub fn one() -> Self","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Returns the multiplicative identity element of `Self`, `1`.","sig":null,"attributes":[{"value":"/ Returns the multiplicative identity element of `Self`, `1`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100342,"byte_end":100405,"line_start":92,"line_end":92,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100410,"byte_end":100413,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Purity","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100418,"byte_end":100430,"line_start":94,"line_end":94,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100435,"byte_end":100438,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ This function should return the same result at all times regardless of","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100443,"byte_end":100517,"line_start":96,"line_end":96,"column_start":5,"column_end":79}},{"value":"/ external mutable state, for example values stored in TLS or in","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100522,"byte_end":100588,"line_start":97,"line_end":97,"column_start":5,"column_end":71}},{"value":"/ `static mut`s.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100593,"byte_end":100611,"line_start":98,"line_end":98,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100783,"byte_end":100790,"line_start":103,"line_end":103,"column_start":8,"column_end":15},"name":"set_one","qualname":"::identities::One::set_one","value":"pub fn set_one(&mut Self)","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Sets `self` to the multiplicative identity element of `Self`, `1`.\n","sig":null,"attributes":[{"value":"/ Sets `self` to the multiplicative identity element of `Self`, `1`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100705,"byte_end":100775,"line_start":102,"line_end":102,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":101135,"byte_end":101141,"line_start":113,"line_end":113,"column_start":8,"column_end":14},"name":"is_one","qualname":"::identities::One::is_one","value":"pub fn is_one(&Self) -> bool where Self: PartialEq","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is equal to the multiplicative identity.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is equal to the multiplicative identity.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100843,"byte_end":100912,"line_start":107,"line_end":107,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100917,"byte_end":100920,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ For performance reasons, it's best to implement this manually.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100925,"byte_end":100991,"line_start":109,"line_end":109,"column_start":5,"column_end":71}},{"value":"/ After a semver bump, this method will be required, and the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100996,"byte_end":101058,"line_start":110,"line_end":110,"column_start":5,"column_end":67}},{"value":"/ `where Self: PartialEq` bound will be removed.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":101063,"byte_end":101113,"line_start":111,"line_end":111,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":101118,"byte_end":101127,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":312},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":102164,"byte_end":102168,"line_start":172,"line_end":172,"column_start":8,"column_end":12},"name":"zero","qualname":"::identities::zero","value":"pub fn zero<T: Zero>() -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the additive identity, `0`.\n","sig":null,"attributes":[{"value":"/ Returns the additive identity, `0`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":102099,"byte_end":102138,"line_start":170,"line_end":170,"column_start":1,"column_end":40}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":102139,"byte_end":102156,"line_start":171,"line_end":171,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":314},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":102278,"byte_end":102281,"line_start":178,"line_end":178,"column_start":8,"column_end":11},"name":"one","qualname":"::identities::one","value":"pub fn one<T: One>() -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the multiplicative identity, `1`.\n","sig":null,"attributes":[{"value":"/ Returns the multiplicative identity, `1`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":102207,"byte_end":102252,"line_start":176,"line_end":176,"column_start":1,"column_end":46}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":102253,"byte_end":102270,"line_start":177,"line_end":177,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":316},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"int","qualname":"::int","value":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":2234},{"krate":0,"index":2251},{"krate":0,"index":2268},{"krate":0,"index":2285},{"krate":0,"index":2302},{"krate":0,"index":2319},{"krate":0,"index":2336},{"krate":0,"index":2353},{"krate":0,"index":2370},{"krate":0,"index":2387},{"krate":0,"index":2404},{"krate":0,"index":2421}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104853,"byte_end":104860,"line_start":34,"line_end":34,"column_start":11,"column_end":18},"name":"PrimInt","qualname":"::int::PrimInt","value":"PrimInt: Sized + Copy + Num + NumCast + Bounded + PartialOrd + Ord + Eq + Not<Output =\nSelf> + BitAnd<Output = Self> + BitOr<Output = Self> + BitXor<Output = Self> +\nShl<usize, Output = Self> + Shr<usize, Output = Self> + CheckedAdd<Output =\nSelf> + CheckedSub<Output = Self> + CheckedMul<Output = Self> +\nCheckedDiv<Output = Self> + Saturating","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346}],"decl_id":null,"docs":" Generic trait for primitive integers.","sig":null,"attributes":[{"value":"/ Generic trait for primitive integers.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":103197,"byte_end":103238,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":103239,"byte_end":103242,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The `PrimInt` trait is an abstraction over the builtin primitive integer types (e.g., `u8`,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":103243,"byte_end":103338,"line_start":10,"line_end":10,"column_start":1,"column_end":96}},{"value":"/ `u32`, `isize`, `i128`, ...). It inherits the basic numeric traits and extends them with","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":103339,"byte_end":103431,"line_start":11,"line_end":11,"column_start":1,"column_end":93}},{"value":"/ bitwise operators and non-wrapping arithmetic.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":103432,"byte_end":103482,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":103483,"byte_end":103486,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The trait explicitly inherits `Copy`, `Eq`, `Ord`, and `Sized`. The intention is that all","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":103487,"byte_end":103580,"line_start":14,"line_end":14,"column_start":1,"column_end":94}},{"value":"/ types implementing this trait behave like primitive types that are passed by value by default","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":103581,"byte_end":103678,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ and behave like builtin integers. Furthermore, the types are expected to expose the integer","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":103679,"byte_end":103774,"line_start":16,"line_end":16,"column_start":1,"column_end":96}},{"value":"/ value in binary representation and support bitwise operators. The standard bitwise operations","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":103775,"byte_end":103872,"line_start":17,"line_end":17,"column_start":1,"column_end":98}},{"value":"/ (e.g., bitwise-and, bitwise-or, right-shift, left-shift) are inherited and the trait extends","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":103873,"byte_end":103969,"line_start":18,"line_end":18,"column_start":1,"column_end":97}},{"value":"/ these with introspective queries (e.g., `PrimInt::count_ones()`, `PrimInt::leading_zeros()`),","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":103970,"byte_end":104067,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"/ bitwise combinators (e.g., `PrimInt::rotate_left()`), and endianness converters (e.g.,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104068,"byte_end":104158,"line_start":20,"line_end":20,"column_start":1,"column_end":91}},{"value":"/ `PrimInt::to_be()`).","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104159,"byte_end":104183,"line_start":21,"line_end":21,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104184,"byte_end":104187,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ All `PrimInt` types are expected to be fixed-width binary integers. The width can be queried","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104188,"byte_end":104284,"line_start":23,"line_end":23,"column_start":1,"column_end":97}},{"value":"/ via `T::zero().count_zeros()`. The trait currently lacks a way to query the width at","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104285,"byte_end":104373,"line_start":24,"line_end":24,"column_start":1,"column_end":89}},{"value":"/ compile-time.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104374,"byte_end":104391,"line_start":25,"line_end":25,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104392,"byte_end":104395,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ While a default implementation for all builtin primitive integers is provided, the trait is in","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104396,"byte_end":104494,"line_start":27,"line_end":27,"column_start":1,"column_end":99}},{"value":"/ no way restricted to these. Other integer types that fulfil the requirements are free to","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104495,"byte_end":104587,"line_start":28,"line_end":28,"column_start":1,"column_end":93}},{"value":"/ implement the trait was well.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104588,"byte_end":104621,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104622,"byte_end":104625,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This trait and many of the method names originate in the unstable `core::num::Int` trait from","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104626,"byte_end":104723,"line_start":31,"line_end":31,"column_start":1,"column_end":98}},{"value":"/ the rust standard library. The original trait was never stabilized and thus removed from the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104724,"byte_end":104820,"line_start":32,"line_end":32,"column_start":1,"column_end":97}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104821,"byte_end":104842,"line_start":33,"line_end":33,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105535,"byte_end":105545,"line_start":66,"line_end":66,"column_start":8,"column_end":18},"name":"count_ones","qualname":"::int::PrimInt::count_ones","value":"pub fn count_ones(Self) -> u32","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Returns the number of ones in the binary representation of `self`.","sig":null,"attributes":[{"value":"/ Returns the number of ones in the binary representation of `self`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105280,"byte_end":105350,"line_start":55,"line_end":55,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105355,"byte_end":105358,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105363,"byte_end":105377,"line_start":57,"line_end":57,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105382,"byte_end":105385,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105390,"byte_end":105397,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105402,"byte_end":105430,"line_start":60,"line_end":60,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105435,"byte_end":105438,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let n = 0b01001100u8;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105443,"byte_end":105468,"line_start":62,"line_end":62,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105473,"byte_end":105476,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.count_ones(), 3);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105481,"byte_end":105515,"line_start":64,"line_end":64,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105520,"byte_end":105527,"line_start":65,"line_end":65,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105822,"byte_end":105833,"line_start":79,"line_end":79,"column_start":8,"column_end":19},"name":"count_zeros","qualname":"::int::PrimInt::count_zeros","value":"pub fn count_zeros(Self) -> u32","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Returns the number of zeros in the binary representation of `self`.","sig":null,"attributes":[{"value":"/ Returns the number of zeros in the binary representation of `self`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105565,"byte_end":105636,"line_start":68,"line_end":68,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105641,"byte_end":105644,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105649,"byte_end":105663,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105668,"byte_end":105671,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105676,"byte_end":105683,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105688,"byte_end":105716,"line_start":73,"line_end":73,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105721,"byte_end":105724,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let n = 0b01001100u8;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105729,"byte_end":105754,"line_start":75,"line_end":75,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105759,"byte_end":105762,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.count_zeros(), 5);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105767,"byte_end":105802,"line_start":77,"line_end":77,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105807,"byte_end":105814,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106129,"byte_end":106142,"line_start":93,"line_end":93,"column_start":8,"column_end":21},"name":"leading_zeros","qualname":"::int::PrimInt::leading_zeros","value":"pub fn leading_zeros(Self) -> u32","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Returns the number of leading zeros in the binary representation\n of `self`.","sig":null,"attributes":[{"value":"/ Returns the number of leading zeros in the binary representation","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105853,"byte_end":105921,"line_start":81,"line_end":81,"column_start":5,"column_end":73}},{"value":"/ of `self`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105926,"byte_end":105940,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105945,"byte_end":105948,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105953,"byte_end":105967,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105972,"byte_end":105975,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105980,"byte_end":105987,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105992,"byte_end":106020,"line_start":87,"line_end":87,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106025,"byte_end":106028,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let n = 0b0101000u16;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106033,"byte_end":106058,"line_start":89,"line_end":89,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106063,"byte_end":106066,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.leading_zeros(), 10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106071,"byte_end":106109,"line_start":91,"line_end":91,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106114,"byte_end":106121,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106439,"byte_end":106453,"line_start":107,"line_end":107,"column_start":8,"column_end":22},"name":"trailing_zeros","qualname":"::int::PrimInt::trailing_zeros","value":"pub fn trailing_zeros(Self) -> u32","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Returns the number of trailing zeros in the binary representation\n of `self`.","sig":null,"attributes":[{"value":"/ Returns the number of trailing zeros in the binary representation","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106162,"byte_end":106231,"line_start":95,"line_end":95,"column_start":5,"column_end":74}},{"value":"/ of `self`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106236,"byte_end":106250,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106255,"byte_end":106258,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106263,"byte_end":106277,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106282,"byte_end":106285,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106290,"byte_end":106297,"line_start":100,"line_end":100,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106302,"byte_end":106330,"line_start":101,"line_end":101,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106335,"byte_end":106338,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let n = 0b0101000u16;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106343,"byte_end":106368,"line_start":103,"line_end":103,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106373,"byte_end":106376,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.trailing_zeros(), 3);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106381,"byte_end":106419,"line_start":105,"line_end":105,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106424,"byte_end":106431,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106848,"byte_end":106859,"line_start":122,"line_end":122,"column_start":8,"column_end":19},"name":"rotate_left","qualname":"::int::PrimInt::rotate_left","value":"pub fn rotate_left(Self, u32) -> Self","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Shifts the bits to the left by a specified amount amount, `n`, wrapping\n the truncated bits to the end of the resulting integer.","sig":null,"attributes":[{"value":"/ Shifts the bits to the left by a specified amount amount, `n`, wrapping","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106473,"byte_end":106548,"line_start":109,"line_end":109,"column_start":5,"column_end":80}},{"value":"/ the truncated bits to the end of the resulting integer.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106553,"byte_end":106612,"line_start":110,"line_end":110,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106617,"byte_end":106620,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106625,"byte_end":106639,"line_start":112,"line_end":112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106644,"byte_end":106647,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106652,"byte_end":106659,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106664,"byte_end":106692,"line_start":115,"line_end":115,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106697,"byte_end":106700,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106705,"byte_end":106739,"line_start":117,"line_end":117,"column_start":5,"column_end":39}},{"value":"/ let m = 0x3456789ABCDEF012u64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106744,"byte_end":106778,"line_start":118,"line_end":118,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106783,"byte_end":106786,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.rotate_left(12), m);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106791,"byte_end":106828,"line_start":120,"line_end":120,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106833,"byte_end":106840,"line_start":121,"line_end":121,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107271,"byte_end":107283,"line_start":137,"line_end":137,"column_start":8,"column_end":20},"name":"rotate_right","qualname":"::int::PrimInt::rotate_right","value":"pub fn rotate_right(Self, u32) -> Self","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Shifts the bits to the right by a specified amount amount, `n`, wrapping\n the truncated bits to the beginning of the resulting integer.","sig":null,"attributes":[{"value":"/ Shifts the bits to the right by a specified amount amount, `n`, wrapping","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106888,"byte_end":106964,"line_start":124,"line_end":124,"column_start":5,"column_end":81}},{"value":"/ the truncated bits to the beginning of the resulting integer.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":106969,"byte_end":107034,"line_start":125,"line_end":125,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107039,"byte_end":107042,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107047,"byte_end":107061,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107066,"byte_end":107069,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107074,"byte_end":107081,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107086,"byte_end":107114,"line_start":130,"line_end":130,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107119,"byte_end":107122,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107127,"byte_end":107161,"line_start":132,"line_end":132,"column_start":5,"column_end":39}},{"value":"/ let m = 0xDEF0123456789ABCu64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107166,"byte_end":107200,"line_start":133,"line_end":133,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107205,"byte_end":107208,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.rotate_right(12), m);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107213,"byte_end":107251,"line_start":135,"line_end":135,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107256,"byte_end":107263,"line_start":136,"line_end":136,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107726,"byte_end":107736,"line_start":154,"line_end":154,"column_start":8,"column_end":18},"name":"signed_shl","qualname":"::int::PrimInt::signed_shl","value":"pub fn signed_shl(Self, u32) -> Self","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Shifts the bits to the left by a specified amount amount, `n`, filling\n zeros in the least significant bits.","sig":null,"attributes":[{"value":"/ Shifts the bits to the left by a specified amount amount, `n`, filling","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107312,"byte_end":107386,"line_start":139,"line_end":139,"column_start":5,"column_end":79}},{"value":"/ zeros in the least significant bits.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107391,"byte_end":107431,"line_start":140,"line_end":140,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107436,"byte_end":107439,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ This is bitwise equivalent to signed `Shl`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107444,"byte_end":107491,"line_start":142,"line_end":142,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107496,"byte_end":107499,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107504,"byte_end":107518,"line_start":144,"line_end":144,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107523,"byte_end":107526,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107531,"byte_end":107538,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107543,"byte_end":107571,"line_start":147,"line_end":147,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107576,"byte_end":107579,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107584,"byte_end":107618,"line_start":149,"line_end":149,"column_start":5,"column_end":39}},{"value":"/ let m = 0x3456789ABCDEF000u64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107623,"byte_end":107657,"line_start":150,"line_end":150,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107662,"byte_end":107665,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.signed_shl(12), m);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107670,"byte_end":107706,"line_start":152,"line_end":152,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107711,"byte_end":107718,"line_start":153,"line_end":153,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108212,"byte_end":108222,"line_start":171,"line_end":171,"column_start":8,"column_end":18},"name":"signed_shr","qualname":"::int::PrimInt::signed_shr","value":"pub fn signed_shr(Self, u32) -> Self","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Shifts the bits to the right by a specified amount amount, `n`, copying\n the \"sign bit\" in the most significant bits even for unsigned types.","sig":null,"attributes":[{"value":"/ Shifts the bits to the right by a specified amount amount, `n`, copying","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107765,"byte_end":107840,"line_start":156,"line_end":156,"column_start":5,"column_end":80}},{"value":"/ the \"sign bit\" in the most significant bits even for unsigned types.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107845,"byte_end":107917,"line_start":157,"line_end":157,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107922,"byte_end":107925,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ This is bitwise equivalent to signed `Shr`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107930,"byte_end":107977,"line_start":159,"line_end":159,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107982,"byte_end":107985,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":107990,"byte_end":108004,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108009,"byte_end":108012,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108017,"byte_end":108024,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108029,"byte_end":108057,"line_start":164,"line_end":164,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108062,"byte_end":108065,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let n = 0xFEDCBA9876543210u64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108070,"byte_end":108104,"line_start":166,"line_end":166,"column_start":5,"column_end":39}},{"value":"/ let m = 0xFFFFEDCBA9876543u64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108109,"byte_end":108143,"line_start":167,"line_end":167,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108148,"byte_end":108151,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.signed_shr(12), m);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108156,"byte_end":108192,"line_start":169,"line_end":169,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108197,"byte_end":108204,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108669,"byte_end":108681,"line_start":188,"line_end":188,"column_start":8,"column_end":20},"name":"unsigned_shl","qualname":"::int::PrimInt::unsigned_shl","value":"pub fn unsigned_shl(Self, u32) -> Self","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Shifts the bits to the left by a specified amount amount, `n`, filling\n zeros in the least significant bits.","sig":null,"attributes":[{"value":"/ Shifts the bits to the left by a specified amount amount, `n`, filling","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108251,"byte_end":108325,"line_start":173,"line_end":173,"column_start":5,"column_end":79}},{"value":"/ zeros in the least significant bits.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108330,"byte_end":108370,"line_start":174,"line_end":174,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108375,"byte_end":108378,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ This is bitwise equivalent to unsigned `Shl`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108383,"byte_end":108432,"line_start":176,"line_end":176,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108437,"byte_end":108440,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108445,"byte_end":108459,"line_start":178,"line_end":178,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108464,"byte_end":108467,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108472,"byte_end":108479,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108484,"byte_end":108512,"line_start":181,"line_end":181,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108517,"byte_end":108520,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFi64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108525,"byte_end":108559,"line_start":183,"line_end":183,"column_start":5,"column_end":39}},{"value":"/ let m = 0x3456789ABCDEF000i64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108564,"byte_end":108598,"line_start":184,"line_end":184,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108603,"byte_end":108606,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.unsigned_shl(12), m);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108611,"byte_end":108649,"line_start":186,"line_end":186,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108654,"byte_end":108661,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109121,"byte_end":109133,"line_start":205,"line_end":205,"column_start":8,"column_end":20},"name":"unsigned_shr","qualname":"::int::PrimInt::unsigned_shr","value":"pub fn unsigned_shr(Self, u32) -> Self","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Shifts the bits to the right by a specified amount amount, `n`, filling\n zeros in the most significant bits.","sig":null,"attributes":[{"value":"/ Shifts the bits to the right by a specified amount amount, `n`, filling","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108710,"byte_end":108785,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ zeros in the most significant bits.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108790,"byte_end":108829,"line_start":191,"line_end":191,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108834,"byte_end":108837,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This is bitwise equivalent to unsigned `Shr`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108842,"byte_end":108891,"line_start":193,"line_end":193,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108896,"byte_end":108899,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108904,"byte_end":108918,"line_start":195,"line_end":195,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108923,"byte_end":108926,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108931,"byte_end":108938,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108943,"byte_end":108971,"line_start":198,"line_end":198,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108976,"byte_end":108979,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ let n = -8i8; // 0b11111000","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":108984,"byte_end":109015,"line_start":200,"line_end":200,"column_start":5,"column_end":36}},{"value":"/ let m = 62i8; // 0b00111110","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109020,"byte_end":109051,"line_start":201,"line_end":201,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109056,"byte_end":109059,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.unsigned_shr(2), m);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109064,"byte_end":109101,"line_start":203,"line_end":203,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109106,"byte_end":109113,"line_start":204,"line_end":204,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109438,"byte_end":109448,"line_start":219,"line_end":219,"column_start":8,"column_end":18},"name":"swap_bytes","qualname":"::int::PrimInt::swap_bytes","value":"pub fn swap_bytes(Self) -> Self","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Reverses the byte order of the integer.","sig":null,"attributes":[{"value":"/ Reverses the byte order of the integer.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109162,"byte_end":109205,"line_start":207,"line_end":207,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109210,"byte_end":109213,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109218,"byte_end":109232,"line_start":209,"line_end":209,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109237,"byte_end":109240,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109245,"byte_end":109252,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109257,"byte_end":109285,"line_start":212,"line_end":212,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109290,"byte_end":109293,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109298,"byte_end":109332,"line_start":214,"line_end":214,"column_start":5,"column_end":39}},{"value":"/ let m = 0xEFCDAB8967452301u64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109337,"byte_end":109371,"line_start":215,"line_end":215,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109376,"byte_end":109379,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n.swap_bytes(), m);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109384,"byte_end":109418,"line_start":217,"line_end":217,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109423,"byte_end":109430,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109944,"byte_end":109951,"line_start":238,"line_end":238,"column_start":8,"column_end":15},"name":"from_be","qualname":"::int::PrimInt::from_be","value":"pub fn from_be(Self) -> Self","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Convert an integer from big endian to the target's endianness.","sig":null,"attributes":[{"value":"/ Convert an integer from big endian to the target's endianness.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109469,"byte_end":109535,"line_start":221,"line_end":221,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109540,"byte_end":109543,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ On big endian this is a no-op. On little endian the bytes are swapped.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109548,"byte_end":109622,"line_start":223,"line_end":223,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109627,"byte_end":109630,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109635,"byte_end":109649,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109654,"byte_end":109657,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109662,"byte_end":109669,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109674,"byte_end":109702,"line_start":228,"line_end":228,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109707,"byte_end":109710,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109715,"byte_end":109749,"line_start":230,"line_end":230,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109754,"byte_end":109757,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109762,"byte_end":109798,"line_start":232,"line_end":232,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(u64::from_be(n), n)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109803,"byte_end":109841,"line_start":233,"line_end":233,"column_start":5,"column_end":43}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109846,"byte_end":109858,"line_start":234,"line_end":234,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(u64::from_be(n), n.swap_bytes())","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109863,"byte_end":109914,"line_start":235,"line_end":235,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109919,"byte_end":109924,"line_start":236,"line_end":236,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109929,"byte_end":109936,"line_start":237,"line_end":237,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110456,"byte_end":110463,"line_start":257,"line_end":257,"column_start":8,"column_end":15},"name":"from_le","qualname":"::int::PrimInt::from_le","value":"pub fn from_le(Self) -> Self","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Convert an integer from little endian to the target's endianness.","sig":null,"attributes":[{"value":"/ Convert an integer from little endian to the target's endianness.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":109975,"byte_end":110044,"line_start":240,"line_end":240,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110049,"byte_end":110052,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ On little endian this is a no-op. On big endian the bytes are swapped.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110057,"byte_end":110131,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110136,"byte_end":110139,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110144,"byte_end":110158,"line_start":244,"line_end":244,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110163,"byte_end":110166,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110171,"byte_end":110178,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110183,"byte_end":110211,"line_start":247,"line_end":247,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110216,"byte_end":110219,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110224,"byte_end":110258,"line_start":249,"line_end":249,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110263,"byte_end":110266,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ if cfg!(target_endian = \"little\") {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110271,"byte_end":110310,"line_start":251,"line_end":251,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(u64::from_le(n), n)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110315,"byte_end":110353,"line_start":252,"line_end":252,"column_start":5,"column_end":43}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110358,"byte_end":110370,"line_start":253,"line_end":253,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(u64::from_le(n), n.swap_bytes())","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110375,"byte_end":110426,"line_start":254,"line_end":254,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110431,"byte_end":110436,"line_start":255,"line_end":255,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110441,"byte_end":110448,"line_start":256,"line_end":256,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110946,"byte_end":110951,"line_start":276,"line_end":276,"column_start":8,"column_end":13},"name":"to_be","qualname":"::int::PrimInt::to_be","value":"pub fn to_be(Self) -> Self","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Convert `self` to big endian from the target's endianness.","sig":null,"attributes":[{"value":"/ Convert `self` to big endian from the target's endianness.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110487,"byte_end":110549,"line_start":259,"line_end":259,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110554,"byte_end":110557,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ On big endian this is a no-op. On little endian the bytes are swapped.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110562,"byte_end":110636,"line_start":261,"line_end":261,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110641,"byte_end":110644,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110649,"byte_end":110663,"line_start":263,"line_end":263,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110668,"byte_end":110671,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110676,"byte_end":110683,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110688,"byte_end":110716,"line_start":266,"line_end":266,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110721,"byte_end":110724,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110729,"byte_end":110763,"line_start":268,"line_end":268,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110768,"byte_end":110771,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110776,"byte_end":110812,"line_start":270,"line_end":270,"column_start":5,"column_end":41}},{"value":"/     assert_eq!(n.to_be(), n)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110817,"byte_end":110849,"line_start":271,"line_end":271,"column_start":5,"column_end":37}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110854,"byte_end":110866,"line_start":272,"line_end":272,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(n.to_be(), n.swap_bytes())","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110871,"byte_end":110916,"line_start":273,"line_end":273,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110921,"byte_end":110926,"line_start":274,"line_end":274,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110931,"byte_end":110938,"line_start":275,"line_end":275,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111437,"byte_end":111442,"line_start":295,"line_end":295,"column_start":8,"column_end":13},"name":"to_le","qualname":"::int::PrimInt::to_le","value":"pub fn to_le(Self) -> Self","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Convert `self` to little endian from the target's endianness.","sig":null,"attributes":[{"value":"/ Convert `self` to little endian from the target's endianness.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":110972,"byte_end":111037,"line_start":278,"line_end":278,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111042,"byte_end":111045,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ On little endian this is a no-op. On big endian the bytes are swapped.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111050,"byte_end":111124,"line_start":280,"line_end":280,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111129,"byte_end":111132,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111137,"byte_end":111151,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111156,"byte_end":111159,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111164,"byte_end":111171,"line_start":284,"line_end":284,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111176,"byte_end":111204,"line_start":285,"line_end":285,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111209,"byte_end":111212,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ let n = 0x0123456789ABCDEFu64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111217,"byte_end":111251,"line_start":287,"line_end":287,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111256,"byte_end":111259,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ if cfg!(target_endian = \"little\") {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111264,"byte_end":111303,"line_start":289,"line_end":289,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(n.to_le(), n)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111308,"byte_end":111340,"line_start":290,"line_end":290,"column_start":5,"column_end":37}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111345,"byte_end":111357,"line_start":291,"line_end":291,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(n.to_le(), n.swap_bytes())","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111362,"byte_end":111407,"line_start":292,"line_end":292,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111412,"byte_end":111417,"line_start":293,"line_end":293,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111422,"byte_end":111429,"line_start":294,"line_end":294,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111680,"byte_end":111683,"line_start":306,"line_end":306,"column_start":8,"column_end":11},"name":"pow","qualname":"::int::PrimInt::pow","value":"pub fn pow(Self, u32) -> Self","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Raises self to the power of `exp`, using exponentiation by squaring.","sig":null,"attributes":[{"value":"/ Raises self to the power of `exp`, using exponentiation by squaring.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111463,"byte_end":111535,"line_start":297,"line_end":297,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111540,"byte_end":111543,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111548,"byte_end":111562,"line_start":299,"line_end":299,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111567,"byte_end":111570,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111575,"byte_end":111582,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ use num_traits::PrimInt;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111587,"byte_end":111615,"line_start":302,"line_end":302,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111620,"byte_end":111623,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(2i32.pow(4), 16);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111628,"byte_end":111660,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":111665,"byte_end":111672,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":348},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ops","qualname":"::ops","value":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mod.rs","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":377},{"krate":0,"index":395},{"krate":0,"index":417},{"krate":0,"index":422}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":349},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"checked","qualname":"::ops::checked","value":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","parent":null,"children":[{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":2438},{"krate":0,"index":2440},{"krate":0,"index":2442},{"krate":0,"index":2444},{"krate":0,"index":2446},{"krate":0,"index":2448},{"krate":0,"index":2450},{"krate":0,"index":2452},{"krate":0,"index":2454},{"krate":0,"index":2456},{"krate":0,"index":2458},{"krate":0,"index":2460},{"krate":0,"index":361},{"krate":0,"index":2462},{"krate":0,"index":2464},{"krate":0,"index":2466},{"krate":0,"index":2468},{"krate":0,"index":2470},{"krate":0,"index":2472},{"krate":0,"index":2474},{"krate":0,"index":2476},{"krate":0,"index":2478},{"krate":0,"index":2480},{"krate":0,"index":2482},{"krate":0,"index":2484},{"krate":0,"index":363},{"krate":0,"index":2486},{"krate":0,"index":2488},{"krate":0,"index":2490},{"krate":0,"index":2492},{"krate":0,"index":2494},{"krate":0,"index":2496},{"krate":0,"index":2498},{"krate":0,"index":2500},{"krate":0,"index":2502},{"krate":0,"index":2504},{"krate":0,"index":2506},{"krate":0,"index":2508},{"krate":0,"index":365},{"krate":0,"index":2510},{"krate":0,"index":2512},{"krate":0,"index":2514},{"krate":0,"index":2516},{"krate":0,"index":2518},{"krate":0,"index":2520},{"krate":0,"index":2522},{"krate":0,"index":2524},{"krate":0,"index":2526},{"krate":0,"index":2528},{"krate":0,"index":2530},{"krate":0,"index":2532},{"krate":0,"index":367},{"krate":0,"index":2534},{"krate":0,"index":2536},{"krate":0,"index":2538},{"krate":0,"index":2540},{"krate":0,"index":2542},{"krate":0,"index":2544},{"krate":0,"index":2546},{"krate":0,"index":2548},{"krate":0,"index":2550},{"krate":0,"index":2552},{"krate":0,"index":2554},{"krate":0,"index":2556},{"krate":0,"index":370},{"krate":0,"index":2558},{"krate":0,"index":2560},{"krate":0,"index":2562},{"krate":0,"index":2564},{"krate":0,"index":2566},{"krate":0,"index":2568},{"krate":0,"index":2570},{"krate":0,"index":2572},{"krate":0,"index":2574},{"krate":0,"index":2576},{"krate":0,"index":2578},{"krate":0,"index":2580},{"krate":0,"index":372},{"krate":0,"index":2582},{"krate":0,"index":2584},{"krate":0,"index":2586},{"krate":0,"index":2588},{"krate":0,"index":2590},{"krate":0,"index":2592},{"krate":0,"index":2594},{"krate":0,"index":2596},{"krate":0,"index":2598},{"krate":0,"index":2600},{"krate":0,"index":2602},{"krate":0,"index":2604},{"krate":0,"index":375},{"krate":0,"index":2606},{"krate":0,"index":2608},{"krate":0,"index":2610},{"krate":0,"index":2612},{"krate":0,"index":2614},{"krate":0,"index":2616},{"krate":0,"index":2618},{"krate":0,"index":2620},{"krate":0,"index":2622},{"krate":0,"index":2624},{"krate":0,"index":2626},{"krate":0,"index":2628}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":358},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114463,"byte_end":114473,"line_start":5,"line_end":5,"column_start":11,"column_end":21},"name":"CheckedAdd","qualname":"::ops::checked::CheckedAdd","value":"CheckedAdd: Sized + Add<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":359}],"decl_id":null,"docs":" Performs addition that returns `None` instead of wrapping around on\n overflow.\n","sig":null,"attributes":[{"value":"/ Performs addition that returns `None` instead of wrapping around on","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114367,"byte_end":114438,"line_start":3,"line_end":3,"column_start":1,"column_end":72}},{"value":"/ overflow.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114439,"byte_end":114452,"line_start":4,"line_end":4,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114615,"byte_end":114626,"line_start":8,"line_end":8,"column_start":8,"column_end":19},"name":"checked_add","qualname":"::ops::checked::CheckedAdd::checked_add","value":"pub fn checked_add(&Self, &Self) -> Option<Self>","parent":{"krate":0,"index":358},"children":[],"decl_id":null,"docs":" Adds two numbers, checking for overflow. If overflow happens, `None` is\n returned.\n","sig":null,"attributes":[{"value":"/ Adds two numbers, checking for overflow. If overflow happens, `None` is","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114514,"byte_end":114589,"line_start":6,"line_end":6,"column_start":5,"column_end":80}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114594,"byte_end":114607,"line_start":7,"line_end":7,"column_start":5,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":361},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":115604,"byte_end":115614,"line_start":39,"line_end":39,"column_start":11,"column_end":21},"name":"CheckedSub","qualname":"::ops::checked::CheckedSub","value":"CheckedSub: Sized + Sub<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":362}],"decl_id":null,"docs":" Performs subtraction that returns `None` instead of wrapping around on underflow.\n","sig":null,"attributes":[{"value":"/ Performs subtraction that returns `None` instead of wrapping around on underflow.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":115508,"byte_end":115593,"line_start":38,"line_end":38,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":115763,"byte_end":115774,"line_start":42,"line_end":42,"column_start":8,"column_end":19},"name":"checked_sub","qualname":"::ops::checked::CheckedSub::checked_sub","value":"pub fn checked_sub(&Self, &Self) -> Option<Self>","parent":{"krate":0,"index":361},"children":[],"decl_id":null,"docs":" Subtracts two numbers, checking for underflow. If underflow happens,\n `None` is returned.\n","sig":null,"attributes":[{"value":"/ Subtracts two numbers, checking for underflow. If underflow happens,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":115655,"byte_end":115727,"line_start":40,"line_end":40,"column_start":5,"column_end":77}},{"value":"/ `None` is returned.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":115732,"byte_end":115755,"line_start":41,"line_end":41,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":363},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":116507,"byte_end":116517,"line_start":63,"line_end":63,"column_start":11,"column_end":21},"name":"CheckedMul","qualname":"::ops::checked::CheckedMul","value":"CheckedMul: Sized + Mul<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":364}],"decl_id":null,"docs":" Performs multiplication that returns `None` instead of wrapping around on underflow or\n overflow.\n","sig":null,"attributes":[{"value":"/ Performs multiplication that returns `None` instead of wrapping around on underflow or","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":116392,"byte_end":116482,"line_start":61,"line_end":61,"column_start":1,"column_end":91}},{"value":"/ overflow.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":116483,"byte_end":116496,"line_start":62,"line_end":62,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":116691,"byte_end":116702,"line_start":66,"line_end":66,"column_start":8,"column_end":19},"name":"checked_mul","qualname":"::ops::checked::CheckedMul::checked_mul","value":"pub fn checked_mul(&Self, &Self) -> Option<Self>","parent":{"krate":0,"index":363},"children":[],"decl_id":null,"docs":" Multiplies two numbers, checking for underflow or overflow. If underflow\n or overflow happens, `None` is returned.\n","sig":null,"attributes":[{"value":"/ Multiplies two numbers, checking for underflow or overflow. If underflow","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":116558,"byte_end":116634,"line_start":64,"line_end":64,"column_start":5,"column_end":81}},{"value":"/ or overflow happens, `None` is returned.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":116639,"byte_end":116683,"line_start":65,"line_end":65,"column_start":5,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":365},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":117475,"byte_end":117485,"line_start":87,"line_end":87,"column_start":11,"column_end":21},"name":"CheckedDiv","qualname":"::ops::checked::CheckedDiv","value":"CheckedDiv: Sized + Div<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":366}],"decl_id":null,"docs":" Performs division that returns `None` instead of panicking on division by zero and instead of\n wrapping around on underflow and overflow.\n","sig":null,"attributes":[{"value":"/ Performs division that returns `None` instead of panicking on division by zero and instead of","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":117320,"byte_end":117417,"line_start":85,"line_end":85,"column_start":1,"column_end":98}},{"value":"/ wrapping around on underflow and overflow.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":117418,"byte_end":117464,"line_start":86,"line_end":86,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":117665,"byte_end":117676,"line_start":90,"line_end":90,"column_start":8,"column_end":19},"name":"checked_div","qualname":"::ops::checked::CheckedDiv::checked_div","value":"pub fn checked_div(&Self, &Self) -> Option<Self>","parent":{"krate":0,"index":365},"children":[],"decl_id":null,"docs":" Divides two numbers, checking for underflow, overflow and division by\n zero. If any of that happens, `None` is returned.\n","sig":null,"attributes":[{"value":"/ Divides two numbers, checking for underflow, overflow and division by","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":117526,"byte_end":117599,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ zero. If any of that happens, `None` is returned.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":117604,"byte_end":117657,"line_start":89,"line_end":89,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":367},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118462,"byte_end":118472,"line_start":111,"line_end":111,"column_start":11,"column_end":21},"name":"CheckedRem","qualname":"::ops::checked::CheckedRem","value":"CheckedRem: Sized + Rem<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":368}],"decl_id":null,"docs":" Performs an integral remainder that returns `None` instead of panicking on division by zero and\n instead of wrapping around on underflow and overflow.\n","sig":null,"attributes":[{"value":"/ Performs an integral remainder that returns `None` instead of panicking on division by zero and","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118294,"byte_end":118393,"line_start":109,"line_end":109,"column_start":1,"column_end":100}},{"value":"/ instead of wrapping around on underflow and overflow.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118394,"byte_end":118451,"line_start":110,"line_end":110,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":119266,"byte_end":119277,"line_start":131,"line_end":131,"column_start":8,"column_end":19},"name":"checked_rem","qualname":"::ops::checked::CheckedRem::checked_rem","value":"pub fn checked_rem(&Self, &Self) -> Option<Self>","parent":{"krate":0,"index":367},"children":[],"decl_id":null,"docs":" Finds the remainder of dividing two numbers, checking for underflow, overflow and division\n by zero. If any of that happens, `None` is returned.","sig":null,"attributes":[{"value":"/ Finds the remainder of dividing two numbers, checking for underflow, overflow and division","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118513,"byte_end":118607,"line_start":112,"line_end":112,"column_start":5,"column_end":99}},{"value":"/ by zero. If any of that happens, `None` is returned.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118612,"byte_end":118668,"line_start":113,"line_end":113,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118673,"byte_end":118676,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118681,"byte_end":118695,"line_start":115,"line_end":115,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118700,"byte_end":118703,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118708,"byte_end":118715,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ use num_traits::CheckedRem;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118720,"byte_end":118751,"line_start":118,"line_end":118,"column_start":5,"column_end":36}},{"value":"/ use std::i32::MIN;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118756,"byte_end":118778,"line_start":119,"line_end":119,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118783,"byte_end":118786,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&10, &7), Some(3));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118791,"byte_end":118849,"line_start":121,"line_end":121,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&10, &-7), Some(3));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118854,"byte_end":118913,"line_start":122,"line_end":122,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&-10, &7), Some(-3));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118918,"byte_end":118978,"line_start":123,"line_end":123,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&-10, &-7), Some(-3));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118983,"byte_end":119044,"line_start":124,"line_end":124,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":119049,"byte_end":119052,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&10, &0), None);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":119057,"byte_end":119112,"line_start":126,"line_end":126,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":119117,"byte_end":119120,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&MIN, &1), Some(0));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":119125,"byte_end":119184,"line_start":128,"line_end":128,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(CheckedRem::checked_rem(&MIN, &-1), None);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":119189,"byte_end":119246,"line_start":129,"line_end":129,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":119251,"byte_end":119258,"line_start":130,"line_end":130,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120241,"byte_end":120251,"line_start":162,"line_end":162,"column_start":11,"column_end":21},"name":"CheckedNeg","qualname":"::ops::checked::CheckedNeg","value":"CheckedNeg: Sized","parent":null,"children":[{"krate":0,"index":371}],"decl_id":null,"docs":" Performs negation that returns `None` if the result can't be represented.\n","sig":null,"attributes":[{"value":"/ Performs negation that returns `None` if the result can't be represented.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120153,"byte_end":120230,"line_start":161,"line_end":161,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120901,"byte_end":120912,"line_start":179,"line_end":179,"column_start":8,"column_end":19},"name":"checked_neg","qualname":"::ops::checked::CheckedNeg::checked_neg","value":"pub fn checked_neg(&Self) -> Option<Self>","parent":{"krate":0,"index":370},"children":[],"decl_id":null,"docs":" Negates a number, returning `None` for results that can't be represented, like signed `MIN`\n values that can't be positive, or non-zero unsigned values that can't be negative.","sig":null,"attributes":[{"value":"/ Negates a number, returning `None` for results that can't be represented, like signed `MIN`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120265,"byte_end":120360,"line_start":163,"line_end":163,"column_start":5,"column_end":100}},{"value":"/ values that can't be positive, or non-zero unsigned values that can't be negative.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120365,"byte_end":120451,"line_start":164,"line_end":164,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120456,"byte_end":120459,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120464,"byte_end":120478,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120483,"byte_end":120486,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120491,"byte_end":120498,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ use num_traits::CheckedNeg;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120503,"byte_end":120534,"line_start":169,"line_end":169,"column_start":5,"column_end":36}},{"value":"/ use std::i32::MIN;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120539,"byte_end":120561,"line_start":170,"line_end":170,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120566,"byte_end":120569,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedNeg::checked_neg(&1_i32), Some(-1));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120574,"byte_end":120632,"line_start":172,"line_end":172,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(CheckedNeg::checked_neg(&-1_i32), Some(1));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120637,"byte_end":120695,"line_start":173,"line_end":173,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(CheckedNeg::checked_neg(&MIN), None);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120700,"byte_end":120752,"line_start":174,"line_end":174,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120757,"byte_end":120760,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedNeg::checked_neg(&0_u32), Some(0));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120765,"byte_end":120822,"line_start":176,"line_end":176,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(CheckedNeg::checked_neg(&1_u32), None);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120827,"byte_end":120881,"line_start":177,"line_end":177,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120886,"byte_end":120893,"line_start":178,"line_end":178,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":372},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":121690,"byte_end":121700,"line_start":200,"line_end":200,"column_start":11,"column_end":21},"name":"CheckedShl","qualname":"::ops::checked::CheckedShl","value":"CheckedShl: Sized + Shl<u32, Output = Self>","parent":null,"children":[{"krate":0,"index":373}],"decl_id":null,"docs":" Performs a left shift that returns `None` on shifts larger than\n the type width.\n","sig":null,"attributes":[{"value":"/ Performs a left shift that returns `None` on shifts larger than","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":121592,"byte_end":121659,"line_start":198,"line_end":198,"column_start":1,"column_end":68}},{"value":"/ the type width.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":121660,"byte_end":121679,"line_start":199,"line_end":199,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122259,"byte_end":122270,"line_start":214,"line_end":214,"column_start":8,"column_end":19},"name":"checked_shl","qualname":"::ops::checked::CheckedShl::checked_shl","value":"pub fn checked_shl(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":372},"children":[],"decl_id":null,"docs":" Checked shift left. Computes `self << rhs`, returning `None`\n if `rhs` is larger than or equal to the number of bits in `self`.","sig":null,"attributes":[{"value":"/ Checked shift left. Computes `self << rhs`, returning `None`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":121740,"byte_end":121804,"line_start":201,"line_end":201,"column_start":5,"column_end":69}},{"value":"/ if `rhs` is larger than or equal to the number of bits in `self`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":121809,"byte_end":121878,"line_start":202,"line_end":202,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":121883,"byte_end":121886,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":121891,"byte_end":121898,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"/ use num_traits::CheckedShl;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":121903,"byte_end":121934,"line_start":205,"line_end":205,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":121939,"byte_end":121942,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ let x: u16 = 0x0001;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":121947,"byte_end":121971,"line_start":207,"line_end":207,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":121976,"byte_end":121979,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedShl::checked_shl(&x, 0),  Some(0x0001));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":121984,"byte_end":122046,"line_start":209,"line_end":209,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShl::checked_shl(&x, 1),  Some(0x0002));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122051,"byte_end":122113,"line_start":210,"line_end":210,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShl::checked_shl(&x, 15), Some(0x8000));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122118,"byte_end":122180,"line_start":211,"line_end":211,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShl::checked_shl(&x, 16), None);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122185,"byte_end":122239,"line_start":212,"line_end":212,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":122244,"byte_end":122251,"line_start":213,"line_end":213,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":375},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123332,"byte_end":123342,"line_start":246,"line_end":246,"column_start":11,"column_end":21},"name":"CheckedShr","qualname":"::ops::checked::CheckedShr","value":"CheckedShr: Sized + Shr<u32, Output = Self>","parent":null,"children":[{"krate":0,"index":376}],"decl_id":null,"docs":" Performs a right shift that returns `None` on shifts larger than\n the type width.\n","sig":null,"attributes":[{"value":"/ Performs a right shift that returns `None` on shifts larger than","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123233,"byte_end":123301,"line_start":244,"line_end":244,"column_start":1,"column_end":69}},{"value":"/ the type width.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123302,"byte_end":123321,"line_start":245,"line_end":245,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123902,"byte_end":123913,"line_start":260,"line_end":260,"column_start":8,"column_end":19},"name":"checked_shr","qualname":"::ops::checked::CheckedShr::checked_shr","value":"pub fn checked_shr(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":375},"children":[],"decl_id":null,"docs":" Checked shift right. Computes `self >> rhs`, returning `None`\n if `rhs` is larger than or equal to the number of bits in `self`.","sig":null,"attributes":[{"value":"/ Checked shift right. Computes `self >> rhs`, returning `None`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123382,"byte_end":123447,"line_start":247,"line_end":247,"column_start":5,"column_end":70}},{"value":"/ if `rhs` is larger than or equal to the number of bits in `self`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123452,"byte_end":123521,"line_start":248,"line_end":248,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123526,"byte_end":123529,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123534,"byte_end":123541,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"/ use num_traits::CheckedShr;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123546,"byte_end":123577,"line_start":251,"line_end":251,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123582,"byte_end":123585,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ let x: u16 = 0x8000;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123590,"byte_end":123614,"line_start":253,"line_end":253,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123619,"byte_end":123622,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(CheckedShr::checked_shr(&x, 0),  Some(0x8000));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123627,"byte_end":123689,"line_start":255,"line_end":255,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShr::checked_shr(&x, 1),  Some(0x4000));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123694,"byte_end":123756,"line_start":256,"line_end":256,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShr::checked_shr(&x, 15), Some(0x0001));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123761,"byte_end":123823,"line_start":257,"line_end":257,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(CheckedShr::checked_shr(&x, 16), None);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123828,"byte_end":123882,"line_start":258,"line_end":258,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123887,"byte_end":123894,"line_start":259,"line_end":259,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":377},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"inv","qualname":"::ops::inv","value":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":381},{"krate":0,"index":384},{"krate":0,"index":387},{"krate":0,"index":391}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":378},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":124702,"byte_end":124705,"line_start":2,"line_end":2,"column_start":11,"column_end":14},"name":"Inv","qualname":"::ops::inv::Inv","value":"Inv","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":380}],"decl_id":null,"docs":" Unary operator for retrieving the multiplicative inverse, or reciprocal, of a value.\n","sig":null,"attributes":[{"value":"/ Unary operator for retrieving the multiplicative inverse, or reciprocal, of a value.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":124603,"byte_end":124691,"line_start":1,"line_end":1,"column_start":1,"column_end":89}}]},{"kind":"Type","id":{"krate":0,"index":379},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":124765,"byte_end":124771,"line_start":4,"line_end":4,"column_start":10,"column_end":16},"name":"Output","qualname":"::ops::inv::Inv::Output","value":"type Output;","parent":{"krate":0,"index":378},"children":[],"decl_id":null,"docs":" The result after applying the operator.\n","sig":null,"attributes":[{"value":"/ The result after applying the operator.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":124712,"byte_end":124755,"line_start":3,"line_end":3,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":125050,"byte_end":125053,"line_start":17,"line_end":17,"column_start":8,"column_end":11},"name":"inv","qualname":"::ops::inv::Inv::inv","value":"pub fn inv(Self) -> Self::Output","parent":{"krate":0,"index":378},"children":[],"decl_id":null,"docs":" Returns the multiplicative inverse of `self`.","sig":null,"attributes":[{"value":"/ Returns the multiplicative inverse of `self`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":124778,"byte_end":124827,"line_start":6,"line_end":6,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":124832,"byte_end":124835,"line_start":7,"line_end":7,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":124840,"byte_end":124854,"line_start":8,"line_end":8,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":124859,"byte_end":124862,"line_start":9,"line_end":9,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":124867,"byte_end":124874,"line_start":10,"line_end":10,"column_start":5,"column_end":12}},{"value":"/ use std::f64::INFINITY;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":124879,"byte_end":124906,"line_start":11,"line_end":11,"column_start":5,"column_end":32}},{"value":"/ use num_traits::Inv;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":124911,"byte_end":124935,"line_start":12,"line_end":12,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":124940,"byte_end":124943,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(7.0.inv() * 7.0, 1.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":124948,"byte_end":124985,"line_start":14,"line_end":14,"column_start":5,"column_end":42}},{"value":"/ assert_eq!((-0.0).inv(), -INFINITY);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":124990,"byte_end":125030,"line_start":15,"line_end":15,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\inv.rs","byte_start":125035,"byte_end":125042,"line_start":16,"line_end":16,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":395},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mul_add","qualname":"::ops::mul_add","value":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":401},{"krate":0,"index":405},{"krate":0,"index":408},{"krate":0,"index":2630},{"krate":0,"index":2633},{"krate":0,"index":2636},{"krate":0,"index":2639},{"krate":0,"index":2642},{"krate":0,"index":2645},{"krate":0,"index":2648},{"krate":0,"index":2651},{"krate":0,"index":2654},{"krate":0,"index":2657},{"krate":0,"index":2660},{"krate":0,"index":2663},{"krate":0,"index":412},{"krate":0,"index":414},{"krate":0,"index":2666},{"krate":0,"index":2668},{"krate":0,"index":2670},{"krate":0,"index":2672},{"krate":0,"index":2674},{"krate":0,"index":2676},{"krate":0,"index":2678},{"krate":0,"index":2680},{"krate":0,"index":2682},{"krate":0,"index":2684},{"krate":0,"index":2686},{"krate":0,"index":2688}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":126170,"byte_end":126176,"line_start":23,"line_end":23,"column_start":11,"column_end":17},"name":"MulAdd","qualname":"::ops::mul_add::MulAdd","value":"MulAdd<A = Self, B = Self>","parent":null,"children":[{"krate":0,"index":399},{"krate":0,"index":400}],"decl_id":null,"docs":" Fused multiply-add. Computes `(self * a) + b` with only one rounding\n error, yielding a more accurate result than an unfused multiply-add.","sig":null,"attributes":[{"value":"/ Fused multiply-add. Computes `(self * a) + b` with only one rounding","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":125535,"byte_end":125607,"line_start":1,"line_end":1,"column_start":1,"column_end":73}},{"value":"/ error, yielding a more accurate result than an unfused multiply-add.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":125608,"byte_end":125680,"line_start":2,"line_end":2,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":125681,"byte_end":125684,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Using `mul_add` can be more performant than an unfused multiply-add if","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":125685,"byte_end":125759,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"/ the target architecture has a dedicated `fma` CPU instruction.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":125760,"byte_end":125826,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":125827,"byte_end":125830,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Note that `A` and `B` are `Self` by default, but this is not mandatory.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":125831,"byte_end":125906,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":125907,"byte_end":125910,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":125911,"byte_end":125924,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":125925,"byte_end":125928,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":125929,"byte_end":125936,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ use std::f32;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":125937,"byte_end":125954,"line_start":12,"line_end":12,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":125955,"byte_end":125958,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ let m = 10.0_f32;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":125959,"byte_end":125980,"line_start":14,"line_end":14,"column_start":1,"column_end":22}},{"value":"/ let x = 4.0_f32;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":125981,"byte_end":126001,"line_start":15,"line_end":15,"column_start":1,"column_end":21}},{"value":"/ let b = 60.0_f32;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":126002,"byte_end":126023,"line_start":16,"line_end":16,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":126024,"byte_end":126027,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ // 100.0","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":126028,"byte_end":126040,"line_start":18,"line_end":18,"column_start":1,"column_end":13}},{"value":"/ let abs_difference = (m.mul_add(x, b) - (m*x + b)).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":126041,"byte_end":126102,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":126103,"byte_end":126106,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ assert!(abs_difference <= f32::EPSILON);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":126107,"byte_end":126151,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":126152,"byte_end":126159,"line_start":22,"line_end":22,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":126274,"byte_end":126280,"line_start":25,"line_end":25,"column_start":10,"column_end":16},"name":"Output","qualname":"::ops::mul_add::MulAdd::Output","value":"type Output;","parent":{"krate":0,"index":396},"children":[],"decl_id":null,"docs":" The resulting type after applying the fused multiply-add.\n","sig":null,"attributes":[{"value":"/ The resulting type after applying the fused multiply-add.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":126203,"byte_end":126264,"line_start":24,"line_end":24,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":126341,"byte_end":126348,"line_start":28,"line_end":28,"column_start":8,"column_end":15},"name":"mul_add","qualname":"::ops::mul_add::MulAdd::mul_add","value":"pub fn mul_add(Self, A, B) -> Self::Output","parent":{"krate":0,"index":396},"children":[],"decl_id":null,"docs":" Performs the fused multiply-add operation.\n","sig":null,"attributes":[{"value":"/ Performs the fused multiply-add operation.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":126287,"byte_end":126333,"line_start":27,"line_end":27,"column_start":5,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":401},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":126446,"byte_end":126458,"line_start":32,"line_end":32,"column_start":11,"column_end":23},"name":"MulAddAssign","qualname":"::ops::mul_add::MulAddAssign","value":"MulAddAssign<A = Self, B = Self>","parent":null,"children":[{"krate":0,"index":404}],"decl_id":null,"docs":" The fused multiply-add assignment operation.\n","sig":null,"attributes":[{"value":"/ The fused multiply-add assignment operation.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":126387,"byte_end":126435,"line_start":31,"line_end":31,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":126539,"byte_end":126553,"line_start":34,"line_end":34,"column_start":8,"column_end":22},"name":"mul_add_assign","qualname":"::ops::mul_add::MulAddAssign::mul_add_assign","value":"pub fn mul_add_assign(&mut Self, A, B)","parent":{"krate":0,"index":401},"children":[],"decl_id":null,"docs":" Performs the fused multiply-add operation.\n","sig":null,"attributes":[{"value":"/ Performs the fused multiply-add operation.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mul_add.rs","byte_start":126485,"byte_end":126531,"line_start":33,"line_end":33,"column_start":5,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":417},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\saturating.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"saturating","qualname":"::ops::saturating","value":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\saturating.rs","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":2690},{"krate":0,"index":2693},{"krate":0,"index":2696},{"krate":0,"index":2699},{"krate":0,"index":2702},{"krate":0,"index":2705},{"krate":0,"index":2708},{"krate":0,"index":2711},{"krate":0,"index":2714},{"krate":0,"index":2717},{"krate":0,"index":2720},{"krate":0,"index":2723}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":418},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\saturating.rs","byte_start":129334,"byte_end":129344,"line_start":2,"line_end":2,"column_start":11,"column_end":21},"name":"Saturating","qualname":"::ops::saturating::Saturating","value":"Saturating","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":420}],"decl_id":null,"docs":" Saturating math operations\n","sig":null,"attributes":[{"value":"/ Saturating math operations","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\saturating.rs","byte_start":129293,"byte_end":129323,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\saturating.rs","byte_start":129470,"byte_end":129484,"line_start":5,"line_end":5,"column_start":8,"column_end":22},"name":"saturating_add","qualname":"::ops::saturating::Saturating::saturating_add","value":"pub fn saturating_add(Self, Self) -> Self","parent":{"krate":0,"index":418},"children":[],"decl_id":null,"docs":" Saturating addition operator.\n Returns a+b, saturating at the numeric bounds instead of overflowing.\n","sig":null,"attributes":[{"value":"/ Saturating addition operator.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\saturating.rs","byte_start":129351,"byte_end":129384,"line_start":3,"line_end":3,"column_start":5,"column_end":38}},{"value":"/ Returns a+b, saturating at the numeric bounds instead of overflowing.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\saturating.rs","byte_start":129389,"byte_end":129462,"line_start":4,"line_end":4,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\saturating.rs","byte_start":129636,"byte_end":129650,"line_start":9,"line_end":9,"column_start":8,"column_end":22},"name":"saturating_sub","qualname":"::ops::saturating::Saturating::saturating_sub","value":"pub fn saturating_sub(Self, Self) -> Self","parent":{"krate":0,"index":418},"children":[],"decl_id":null,"docs":" Saturating subtraction operator.\n Returns a-b, saturating at the numeric bounds instead of overflowing.\n","sig":null,"attributes":[{"value":"/ Saturating subtraction operator.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\saturating.rs","byte_start":129514,"byte_end":129550,"line_start":7,"line_end":7,"column_start":5,"column_end":41}},{"value":"/ Returns a-b, saturating at the numeric bounds instead of overflowing.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\saturating.rs","byte_start":129555,"byte_end":129628,"line_start":8,"line_end":8,"column_start":5,"column_end":78}}]},{"kind":"Mod","id":{"krate":0,"index":422},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"wrapping","qualname":"::ops::wrapping","value":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":4590},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":431},{"krate":0,"index":2726},{"krate":0,"index":2728},{"krate":0,"index":2730},{"krate":0,"index":2732},{"krate":0,"index":2734},{"krate":0,"index":2736},{"krate":0,"index":2738},{"krate":0,"index":2740},{"krate":0,"index":2742},{"krate":0,"index":2744},{"krate":0,"index":2746},{"krate":0,"index":2748},{"krate":0,"index":433},{"krate":0,"index":2750},{"krate":0,"index":2752},{"krate":0,"index":2754},{"krate":0,"index":2756},{"krate":0,"index":2758},{"krate":0,"index":2760},{"krate":0,"index":2762},{"krate":0,"index":2764},{"krate":0,"index":2766},{"krate":0,"index":2768},{"krate":0,"index":2770},{"krate":0,"index":2772},{"krate":0,"index":435},{"krate":0,"index":2774},{"krate":0,"index":2776},{"krate":0,"index":2778},{"krate":0,"index":2780},{"krate":0,"index":2782},{"krate":0,"index":2784},{"krate":0,"index":2786},{"krate":0,"index":2788},{"krate":0,"index":2790},{"krate":0,"index":2792},{"krate":0,"index":2794},{"krate":0,"index":2796},{"krate":0,"index":438},{"krate":0,"index":2798},{"krate":0,"index":2800},{"krate":0,"index":2802},{"krate":0,"index":2804},{"krate":0,"index":2806},{"krate":0,"index":2808},{"krate":0,"index":2810},{"krate":0,"index":2812},{"krate":0,"index":2814},{"krate":0,"index":2816},{"krate":0,"index":2818},{"krate":0,"index":2820},{"krate":0,"index":440},{"krate":0,"index":2822},{"krate":0,"index":2824},{"krate":0,"index":2826},{"krate":0,"index":2828},{"krate":0,"index":2830},{"krate":0,"index":2832},{"krate":0,"index":2834},{"krate":0,"index":2836},{"krate":0,"index":2838},{"krate":0,"index":2840},{"krate":0,"index":2842},{"krate":0,"index":2844},{"krate":0,"index":442},{"krate":0,"index":445},{"krate":0,"index":448},{"krate":0,"index":451},{"krate":0,"index":454}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":431},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130858,"byte_end":130869,"line_start":24,"line_end":24,"column_start":11,"column_end":22},"name":"WrappingAdd","qualname":"::ops::wrapping::WrappingAdd","value":"WrappingAdd: Sized + Add<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":432}],"decl_id":null,"docs":" Performs addition that wraps around on overflow.\n","sig":null,"attributes":[{"value":"/ Performs addition that wraps around on overflow.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130795,"byte_end":130847,"line_start":23,"line_end":23,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":131028,"byte_end":131040,"line_start":27,"line_end":27,"column_start":8,"column_end":20},"name":"wrapping_add","qualname":"::ops::wrapping::WrappingAdd::wrapping_add","value":"pub fn wrapping_add(&Self, &Self) -> Self","parent":{"krate":0,"index":431},"children":[],"decl_id":null,"docs":" Wrapping (modular) addition. Computes `self + other`, wrapping around at the boundary of\n the type.\n","sig":null,"attributes":[{"value":"/ Wrapping (modular) addition. Computes `self + other`, wrapping around at the boundary of","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130910,"byte_end":131002,"line_start":25,"line_end":25,"column_start":5,"column_end":97}},{"value":"/ the type.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":131007,"byte_end":131020,"line_start":26,"line_end":26,"column_start":5,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":433},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":131752,"byte_end":131763,"line_start":47,"line_end":47,"column_start":11,"column_end":22},"name":"WrappingSub","qualname":"::ops::wrapping::WrappingSub","value":"WrappingSub: Sized + Sub<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":434}],"decl_id":null,"docs":" Performs subtraction that wraps around on overflow.\n","sig":null,"attributes":[{"value":"/ Performs subtraction that wraps around on overflow.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":131686,"byte_end":131741,"line_start":46,"line_end":46,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":131925,"byte_end":131937,"line_start":50,"line_end":50,"column_start":8,"column_end":20},"name":"wrapping_sub","qualname":"::ops::wrapping::WrappingSub::wrapping_sub","value":"pub fn wrapping_sub(&Self, &Self) -> Self","parent":{"krate":0,"index":433},"children":[],"decl_id":null,"docs":" Wrapping (modular) subtraction. Computes `self - other`, wrapping around at the boundary\n of the type.\n","sig":null,"attributes":[{"value":"/ Wrapping (modular) subtraction. Computes `self - other`, wrapping around at the boundary","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":131804,"byte_end":131896,"line_start":48,"line_end":48,"column_start":5,"column_end":97}},{"value":"/ of the type.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":131901,"byte_end":131917,"line_start":49,"line_end":49,"column_start":5,"column_end":21}}]},{"kind":"Trait","id":{"krate":0,"index":435},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":132652,"byte_end":132663,"line_start":70,"line_end":70,"column_start":11,"column_end":22},"name":"WrappingMul","qualname":"::ops::wrapping::WrappingMul","value":"WrappingMul: Sized + Mul<Self, Output = Self>","parent":null,"children":[{"krate":0,"index":436}],"decl_id":null,"docs":" Performs multiplication that wraps around on overflow.\n","sig":null,"attributes":[{"value":"/ Performs multiplication that wraps around on overflow.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":132583,"byte_end":132641,"line_start":69,"line_end":69,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":132828,"byte_end":132840,"line_start":73,"line_end":73,"column_start":8,"column_end":20},"name":"wrapping_mul","qualname":"::ops::wrapping::WrappingMul::wrapping_mul","value":"pub fn wrapping_mul(&Self, &Self) -> Self","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" Wrapping (modular) multiplication. Computes `self * other`, wrapping around at the boundary\n of the type.\n","sig":null,"attributes":[{"value":"/ Wrapping (modular) multiplication. Computes `self * other`, wrapping around at the boundary","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":132704,"byte_end":132799,"line_start":71,"line_end":71,"column_start":5,"column_end":100}},{"value":"/ of the type.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":132804,"byte_end":132820,"line_start":72,"line_end":72,"column_start":5,"column_end":21}}]},{"kind":"Trait","id":{"krate":0,"index":438},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133809,"byte_end":133820,"line_start":104,"line_end":104,"column_start":11,"column_end":22},"name":"WrappingShl","qualname":"::ops::wrapping::WrappingShl","value":"WrappingShl: Sized + Shl<usize, Output = Self>","parent":null,"children":[{"krate":0,"index":439}],"decl_id":null,"docs":" Performs a left shift that does not panic.\n","sig":null,"attributes":[{"value":"/ Performs a left shift that does not panic.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133752,"byte_end":133798,"line_start":103,"line_end":103,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":134427,"byte_end":134439,"line_start":119,"line_end":119,"column_start":8,"column_end":20},"name":"wrapping_shl","qualname":"::ops::wrapping::WrappingShl::wrapping_shl","value":"pub fn wrapping_shl(&Self, u32) -> Self","parent":{"krate":0,"index":438},"children":[],"decl_id":null,"docs":" Panic-free bitwise shift-left; yields `self << mask(rhs)`,\n where `mask` removes any high order bits of `rhs` that would\n cause the shift to exceed the bitwidth of the type.","sig":null,"attributes":[{"value":"/ Panic-free bitwise shift-left; yields `self << mask(rhs)`,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133862,"byte_end":133924,"line_start":105,"line_end":105,"column_start":5,"column_end":67}},{"value":"/ where `mask` removes any high order bits of `rhs` that would","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133929,"byte_end":133993,"line_start":106,"line_end":106,"column_start":5,"column_end":69}},{"value":"/ cause the shift to exceed the bitwidth of the type.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133998,"byte_end":134053,"line_start":107,"line_end":107,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":134058,"byte_end":134061,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":134066,"byte_end":134073,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ use num_traits::WrappingShl;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":134078,"byte_end":134110,"line_start":110,"line_end":110,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":134115,"byte_end":134118,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ let x: u16 = 0x0001;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":134123,"byte_end":134147,"line_start":112,"line_end":112,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":134152,"byte_end":134155,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(WrappingShl::wrapping_shl(&x, 0),  0x0001);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":134160,"byte_end":134218,"line_start":114,"line_end":114,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(WrappingShl::wrapping_shl(&x, 1),  0x0002);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":134223,"byte_end":134281,"line_start":115,"line_end":115,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(WrappingShl::wrapping_shl(&x, 15), 0x8000);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":134286,"byte_end":134344,"line_start":116,"line_end":116,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(WrappingShl::wrapping_shl(&x, 16), 0x0001);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":134349,"byte_end":134407,"line_start":117,"line_end":117,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":134412,"byte_end":134419,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":440},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135215,"byte_end":135226,"line_start":139,"line_end":139,"column_start":11,"column_end":22},"name":"WrappingShr","qualname":"::ops::wrapping::WrappingShr","value":"WrappingShr: Sized + Shr<usize, Output = Self>","parent":null,"children":[{"krate":0,"index":441}],"decl_id":null,"docs":" Performs a right shift that does not panic.\n","sig":null,"attributes":[{"value":"/ Performs a right shift that does not panic.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135157,"byte_end":135204,"line_start":138,"line_end":138,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135834,"byte_end":135846,"line_start":154,"line_end":154,"column_start":8,"column_end":20},"name":"wrapping_shr","qualname":"::ops::wrapping::WrappingShr::wrapping_shr","value":"pub fn wrapping_shr(&Self, u32) -> Self","parent":{"krate":0,"index":440},"children":[],"decl_id":null,"docs":" Panic-free bitwise shift-right; yields `self >> mask(rhs)`,\n where `mask` removes any high order bits of `rhs` that would\n cause the shift to exceed the bitwidth of the type.","sig":null,"attributes":[{"value":"/ Panic-free bitwise shift-right; yields `self >> mask(rhs)`,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135268,"byte_end":135331,"line_start":140,"line_end":140,"column_start":5,"column_end":68}},{"value":"/ where `mask` removes any high order bits of `rhs` that would","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135336,"byte_end":135400,"line_start":141,"line_end":141,"column_start":5,"column_end":69}},{"value":"/ cause the shift to exceed the bitwidth of the type.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135405,"byte_end":135460,"line_start":142,"line_end":142,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135465,"byte_end":135468,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135473,"byte_end":135480,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ use num_traits::WrappingShr;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135485,"byte_end":135517,"line_start":145,"line_end":145,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135522,"byte_end":135525,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ let x: u16 = 0x8000;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135530,"byte_end":135554,"line_start":147,"line_end":147,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135559,"byte_end":135562,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(WrappingShr::wrapping_shr(&x, 0),  0x8000);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135567,"byte_end":135625,"line_start":149,"line_end":149,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(WrappingShr::wrapping_shr(&x, 1),  0x4000);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135630,"byte_end":135688,"line_start":150,"line_end":150,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(WrappingShr::wrapping_shr(&x, 15), 0x0001);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135693,"byte_end":135751,"line_start":151,"line_end":151,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(WrappingShr::wrapping_shr(&x, 16), 0x8000);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135756,"byte_end":135814,"line_start":152,"line_end":152,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135819,"byte_end":135826,"line_start":153,"line_end":153,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":457},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pow","qualname":"::pow","value":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","parent":null,"children":[{"krate":0,"index":458},{"krate":0,"index":4602},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":2846},{"krate":0,"index":2849},{"krate":0,"index":2853},{"krate":0,"index":2857},{"krate":0,"index":2862},{"krate":0,"index":2865},{"krate":0,"index":2869},{"krate":0,"index":2873},{"krate":0,"index":2878},{"krate":0,"index":2881},{"krate":0,"index":2885},{"krate":0,"index":2889},{"krate":0,"index":2894},{"krate":0,"index":2897},{"krate":0,"index":2901},{"krate":0,"index":2905},{"krate":0,"index":2910},{"krate":0,"index":2913},{"krate":0,"index":2917},{"krate":0,"index":2921},{"krate":0,"index":2926},{"krate":0,"index":2929},{"krate":0,"index":2933},{"krate":0,"index":2937},{"krate":0,"index":2942},{"krate":0,"index":2945},{"krate":0,"index":2949},{"krate":0,"index":2953},{"krate":0,"index":2958},{"krate":0,"index":2961},{"krate":0,"index":2965},{"krate":0,"index":2969},{"krate":0,"index":2974},{"krate":0,"index":2977},{"krate":0,"index":2981},{"krate":0,"index":2985},{"krate":0,"index":2990},{"krate":0,"index":2993},{"krate":0,"index":2997},{"krate":0,"index":3001},{"krate":0,"index":3006},{"krate":0,"index":3009},{"krate":0,"index":3013},{"krate":0,"index":3017},{"krate":0,"index":3022},{"krate":0,"index":3025},{"krate":0,"index":3029},{"krate":0,"index":3033},{"krate":0,"index":3038},{"krate":0,"index":3041},{"krate":0,"index":3045},{"krate":0,"index":3049},{"krate":0,"index":3054},{"krate":0,"index":3057},{"krate":0,"index":3061},{"krate":0,"index":3065},{"krate":0,"index":3070},{"krate":0,"index":3073},{"krate":0,"index":3077},{"krate":0,"index":3081},{"krate":0,"index":3086},{"krate":0,"index":3089},{"krate":0,"index":3093},{"krate":0,"index":3097},{"krate":0,"index":3102},{"krate":0,"index":3105},{"krate":0,"index":3109},{"krate":0,"index":3113},{"krate":0,"index":3118},{"krate":0,"index":3121},{"krate":0,"index":3125},{"krate":0,"index":3129},{"krate":0,"index":3134},{"krate":0,"index":3137},{"krate":0,"index":3141},{"krate":0,"index":3145},{"krate":0,"index":3150},{"krate":0,"index":3153},{"krate":0,"index":3157},{"krate":0,"index":3161},{"krate":0,"index":3166},{"krate":0,"index":3169},{"krate":0,"index":3173},{"krate":0,"index":3177},{"krate":0,"index":3182},{"krate":0,"index":3185},{"krate":0,"index":3189},{"krate":0,"index":3193},{"krate":0,"index":3198},{"krate":0,"index":3201},{"krate":0,"index":3205},{"krate":0,"index":3209},{"krate":0,"index":3214},{"krate":0,"index":3217},{"krate":0,"index":3221},{"krate":0,"index":3225},{"krate":0,"index":3230},{"krate":0,"index":3233},{"krate":0,"index":3237},{"krate":0,"index":3241},{"krate":0,"index":3246},{"krate":0,"index":3249},{"krate":0,"index":3253},{"krate":0,"index":3257},{"krate":0,"index":3262},{"krate":0,"index":3265},{"krate":0,"index":3269},{"krate":0,"index":3273},{"krate":0,"index":3278},{"krate":0,"index":3281},{"krate":0,"index":3285},{"krate":0,"index":3289},{"krate":0,"index":3294},{"krate":0,"index":3297},{"krate":0,"index":3301},{"krate":0,"index":3305},{"krate":0,"index":3310},{"krate":0,"index":3313},{"krate":0,"index":3317},{"krate":0,"index":3321},{"krate":0,"index":3326},{"krate":0,"index":3329},{"krate":0,"index":3333},{"krate":0,"index":3337},{"krate":0,"index":3342},{"krate":0,"index":3345},{"krate":0,"index":3349},{"krate":0,"index":3353},{"krate":0,"index":3358},{"krate":0,"index":3361},{"krate":0,"index":3365},{"krate":0,"index":3369},{"krate":0,"index":3374},{"krate":0,"index":3377},{"krate":0,"index":3381},{"krate":0,"index":3385},{"krate":0,"index":3390},{"krate":0,"index":3393},{"krate":0,"index":3397},{"krate":0,"index":3401},{"krate":0,"index":3406},{"krate":0,"index":3409},{"krate":0,"index":3413},{"krate":0,"index":3417},{"krate":0,"index":3422},{"krate":0,"index":3425},{"krate":0,"index":3429},{"krate":0,"index":3433},{"krate":0,"index":3438},{"krate":0,"index":3441},{"krate":0,"index":3445},{"krate":0,"index":3449},{"krate":0,"index":3454},{"krate":0,"index":3457},{"krate":0,"index":3461},{"krate":0,"index":3465},{"krate":0,"index":3470},{"krate":0,"index":3473},{"krate":0,"index":3477},{"krate":0,"index":3481},{"krate":0,"index":3486},{"krate":0,"index":3489},{"krate":0,"index":3493},{"krate":0,"index":3497},{"krate":0,"index":3502},{"krate":0,"index":3505},{"krate":0,"index":3509},{"krate":0,"index":3513},{"krate":0,"index":3518},{"krate":0,"index":3521},{"krate":0,"index":3525},{"krate":0,"index":3529},{"krate":0,"index":3534},{"krate":0,"index":3537},{"krate":0,"index":3541},{"krate":0,"index":3545},{"krate":0,"index":3550},{"krate":0,"index":3553},{"krate":0,"index":3557},{"krate":0,"index":3561},{"krate":0,"index":3566},{"krate":0,"index":3569},{"krate":0,"index":3573},{"krate":0,"index":3577},{"krate":0,"index":3582},{"krate":0,"index":3585},{"krate":0,"index":3589},{"krate":0,"index":3593},{"krate":0,"index":3598},{"krate":0,"index":3601},{"krate":0,"index":3605},{"krate":0,"index":3609},{"krate":0,"index":3614},{"krate":0,"index":3617},{"krate":0,"index":3621},{"krate":0,"index":3625},{"krate":0,"index":3630},{"krate":0,"index":3633},{"krate":0,"index":3637},{"krate":0,"index":3641},{"krate":0,"index":3646},{"krate":0,"index":3649},{"krate":0,"index":3653},{"krate":0,"index":3657},{"krate":0,"index":3662},{"krate":0,"index":3665},{"krate":0,"index":3669},{"krate":0,"index":3673},{"krate":0,"index":3678},{"krate":0,"index":3681},{"krate":0,"index":3685},{"krate":0,"index":3689},{"krate":0,"index":3694},{"krate":0,"index":3697},{"krate":0,"index":3701},{"krate":0,"index":3705},{"krate":0,"index":3710},{"krate":0,"index":3713},{"krate":0,"index":3717},{"krate":0,"index":3721},{"krate":0,"index":3726},{"krate":0,"index":3729},{"krate":0,"index":3733},{"krate":0,"index":3737},{"krate":0,"index":3742},{"krate":0,"index":3745},{"krate":0,"index":3749},{"krate":0,"index":3753},{"krate":0,"index":3758},{"krate":0,"index":3761},{"krate":0,"index":3765},{"krate":0,"index":3769},{"krate":0,"index":3774},{"krate":0,"index":3777},{"krate":0,"index":3781},{"krate":0,"index":3785},{"krate":0,"index":3790},{"krate":0,"index":3793},{"krate":0,"index":3797},{"krate":0,"index":3801},{"krate":0,"index":3806},{"krate":0,"index":3809},{"krate":0,"index":3813},{"krate":0,"index":3817},{"krate":0,"index":3822},{"krate":0,"index":3825},{"krate":0,"index":3829},{"krate":0,"index":3833},{"krate":0,"index":3838},{"krate":0,"index":3841},{"krate":0,"index":3845},{"krate":0,"index":3849},{"krate":0,"index":3854},{"krate":0,"index":3857},{"krate":0,"index":3861},{"krate":0,"index":3865},{"krate":0,"index":3870},{"krate":0,"index":3873},{"krate":0,"index":3877},{"krate":0,"index":3881},{"krate":0,"index":3886},{"krate":0,"index":3889},{"krate":0,"index":3893},{"krate":0,"index":3897},{"krate":0,"index":3902},{"krate":0,"index":3905},{"krate":0,"index":3909},{"krate":0,"index":3913},{"krate":0,"index":3918},{"krate":0,"index":3921},{"krate":0,"index":3925},{"krate":0,"index":3929},{"krate":0,"index":3934},{"krate":0,"index":3937},{"krate":0,"index":3941},{"krate":0,"index":3945},{"krate":0,"index":3950},{"krate":0,"index":3953},{"krate":0,"index":3957},{"krate":0,"index":3961},{"krate":0,"index":3966},{"krate":0,"index":3969},{"krate":0,"index":3973},{"krate":0,"index":3977},{"krate":0,"index":3982},{"krate":0,"index":3985},{"krate":0,"index":3989},{"krate":0,"index":3993},{"krate":0,"index":468},{"krate":0,"index":470},{"krate":0,"index":472}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":463},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":139493,"byte_end":139496,"line_start":6,"line_end":6,"column_start":11,"column_end":14},"name":"Pow","qualname":"::pow::Pow","value":"Pow<RHS>","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466}],"decl_id":null,"docs":" Binary operator for raising a value to a power.\n","sig":null,"attributes":[{"value":"/ Binary operator for raising a value to a power.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":139431,"byte_end":139482,"line_start":5,"line_end":5,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":465},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":139561,"byte_end":139567,"line_start":8,"line_end":8,"column_start":10,"column_end":16},"name":"Output","qualname":"::pow::Pow::Output","value":"type Output;","parent":{"krate":0,"index":463},"children":[],"decl_id":null,"docs":" The result after applying the operator.\n","sig":null,"attributes":[{"value":"/ The result after applying the operator.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":139508,"byte_end":139551,"line_start":7,"line_end":7,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":139756,"byte_end":139759,"line_start":18,"line_end":18,"column_start":8,"column_end":11},"name":"pow","qualname":"::pow::Pow::pow","value":"pub fn pow(Self, RHS) -> Self::Output","parent":{"krate":0,"index":463},"children":[],"decl_id":null,"docs":" Returns `self` to the power `rhs`.","sig":null,"attributes":[{"value":"/ Returns `self` to the power `rhs`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":139574,"byte_end":139612,"line_start":10,"line_end":10,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":139617,"byte_end":139620,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":139625,"byte_end":139639,"line_start":12,"line_end":12,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":139644,"byte_end":139647,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":139652,"byte_end":139659,"line_start":14,"line_end":14,"column_start":5,"column_end":12}},{"value":"/ use num_traits::Pow;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":139664,"byte_end":139688,"line_start":15,"line_end":15,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Pow::pow(10u32, 2u32), 100);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":139693,"byte_end":139736,"line_start":16,"line_end":16,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":139741,"byte_end":139748,"line_start":17,"line_end":17,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":470},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":144406,"byte_end":144409,"line_start":188,"line_end":188,"column_start":8,"column_end":11},"name":"pow","qualname":"::pow::pow","value":"pub fn pow<T: Clone + One + Mul<T, Output = T>>(T, usize) -> T","parent":null,"children":[],"decl_id":null,"docs":" Raises a value to the power of exp, using exponentiation by squaring.","sig":null,"attributes":[{"value":"/ Raises a value to the power of exp, using exponentiation by squaring.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":144021,"byte_end":144094,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":144095,"byte_end":144098,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ Note that `0⁰` (`pow(0, 0)`) returnes `1`. Mathematically this is undefined.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":144099,"byte_end":144181,"line_start":176,"line_end":176,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":144182,"byte_end":144185,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":144186,"byte_end":144199,"line_start":178,"line_end":178,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":144200,"byte_end":144203,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":144204,"byte_end":144215,"line_start":180,"line_end":180,"column_start":1,"column_end":12}},{"value":"/ use num_traits::pow;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":144216,"byte_end":144240,"line_start":181,"line_end":181,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":144241,"byte_end":144244,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pow(2i8, 4), 16);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":144245,"byte_end":144277,"line_start":183,"line_end":183,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(pow(6u8, 3), 216);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":144278,"byte_end":144311,"line_start":184,"line_end":184,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(pow(0u8, 0), 1); // Be aware if this case affects you","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":144312,"byte_end":144380,"line_start":185,"line_end":185,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":144381,"byte_end":144388,"line_start":186,"line_end":186,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":144389,"byte_end":144398,"line_start":187,"line_end":187,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":472},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":145416,"byte_end":145427,"line_start":229,"line_end":229,"column_start":8,"column_end":19},"name":"checked_pow","qualname":"::pow::checked_pow","value":"pub fn checked_pow<T: Clone + One + CheckedMul>(T, usize) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Raises a value to the power of exp, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Raises a value to the power of exp, returning `None` if an overflow occurred.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":144863,"byte_end":144944,"line_start":212,"line_end":212,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":144945,"byte_end":144948,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ Note that `0⁰` (`checked_pow(0, 0)`) returnes `Some(1)`. Mathematically this is undefined.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":144949,"byte_end":145045,"line_start":214,"line_end":214,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":145046,"byte_end":145049,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ Otherwise same as the `pow` function.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":145050,"byte_end":145091,"line_start":216,"line_end":216,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":145092,"byte_end":145095,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":145096,"byte_end":145109,"line_start":218,"line_end":218,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":145110,"byte_end":145113,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":145114,"byte_end":145125,"line_start":220,"line_end":220,"column_start":1,"column_end":12}},{"value":"/ use num_traits::checked_pow;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":145126,"byte_end":145158,"line_start":221,"line_end":221,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":145159,"byte_end":145162,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(checked_pow(2i8, 4), Some(16));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":145163,"byte_end":145209,"line_start":223,"line_end":223,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(checked_pow(7i8, 8), None);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":145210,"byte_end":145252,"line_start":224,"line_end":224,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(checked_pow(7u32, 8), Some(5_764_801));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":145253,"byte_end":145307,"line_start":225,"line_end":225,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(checked_pow(0u32, 0), Some(1)); // Be aware if this case affect you","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":145308,"byte_end":145390,"line_start":226,"line_end":226,"column_start":1,"column_end":83}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":145391,"byte_end":145398,"line_start":227,"line_end":227,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\pow.rs","byte_start":145399,"byte_end":145408,"line_start":228,"line_end":228,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":475},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"real","qualname":"::real","value":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":529}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1786,"byte_end":1809,"line_start":56,"line_end":56,"column_start":1,"column_end":24}}]},{"kind":"Trait","id":{"krate":0,"index":481},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":146683,"byte_end":146687,"line_start":15,"line_end":15,"column_start":11,"column_end":15},"name":"Real","qualname":"::real::Real","value":"Real: Num + Copy + NumCast + PartialOrd + Neg<Output = Self>","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528}],"decl_id":null,"docs":" A trait for real number types that do not necessarily have\n floating-point-specific characteristics such as NaN and infinity.","sig":null,"attributes":[{"value":"/ A trait for real number types that do not necessarily have","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":146321,"byte_end":146383,"line_start":8,"line_end":8,"column_start":1,"column_end":63}},{"value":"/ floating-point-specific characteristics such as NaN and infinity.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":146384,"byte_end":146453,"line_start":9,"line_end":9,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":146454,"byte_end":146457,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ See [this Wikipedia article](https://en.wikipedia.org/wiki/Real_data_type)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":146458,"byte_end":146536,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ for a list of data types that could meaningfully implement this trait.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":146537,"byte_end":146611,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":146612,"byte_end":146615,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This trait is only available with the `std` feature.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":146616,"byte_end":146672,"line_start":14,"line_end":14,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":147004,"byte_end":147013,"line_start":26,"line_end":26,"column_start":8,"column_end":17},"name":"min_value","qualname":"::real::Real::min_value","value":"pub fn min_value() -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns the smallest finite value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the smallest finite value that this type can represent.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":146750,"byte_end":146817,"line_start":16,"line_end":16,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":146822,"byte_end":146825,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":146830,"byte_end":146837,"line_start":18,"line_end":18,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":146842,"byte_end":146873,"line_start":19,"line_end":19,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":146878,"byte_end":146895,"line_start":20,"line_end":20,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":146900,"byte_end":146903,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Real::min_value();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":146908,"byte_end":146943,"line_start":22,"line_end":22,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":146948,"byte_end":146951,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, f64::MIN);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":146956,"byte_end":146984,"line_start":24,"line_end":24,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":146989,"byte_end":146996,"line_start":25,"line_end":25,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":147316,"byte_end":147334,"line_start":38,"line_end":38,"column_start":8,"column_end":26},"name":"min_positive_value","qualname":"::real::Real::min_positive_value","value":"pub fn min_positive_value() -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns the smallest positive, normalized value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the smallest positive, normalized value that this type can represent.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":147030,"byte_end":147111,"line_start":28,"line_end":28,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":147116,"byte_end":147119,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":147124,"byte_end":147131,"line_start":30,"line_end":30,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":147136,"byte_end":147167,"line_start":31,"line_end":31,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":147172,"byte_end":147189,"line_start":32,"line_end":32,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":147194,"byte_end":147197,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Real::min_positive_value();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":147202,"byte_end":147246,"line_start":34,"line_end":34,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":147251,"byte_end":147254,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, f64::MIN_POSITIVE);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":147259,"byte_end":147296,"line_start":36,"line_end":36,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":147301,"byte_end":147308,"line_start":37,"line_end":37,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":147715,"byte_end":147722,"line_start":55,"line_end":55,"column_start":8,"column_end":15},"name":"epsilon","qualname":"::real::Real::epsilon","value":"pub fn epsilon() -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns epsilon, a small positive value.","sig":null,"attributes":[{"value":"/ Returns epsilon, a small positive value.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":147351,"byte_end":147395,"line_start":40,"line_end":40,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":147400,"byte_end":147403,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":147408,"byte_end":147415,"line_start":42,"line_end":42,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":147420,"byte_end":147451,"line_start":43,"line_end":43,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":147456,"byte_end":147473,"line_start":44,"line_end":44,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":147478,"byte_end":147481,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Real::epsilon();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":147486,"byte_end":147519,"line_start":46,"line_end":46,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":147524,"byte_end":147527,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, f64::EPSILON);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":147532,"byte_end":147564,"line_start":48,"line_end":48,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":147569,"byte_end":147576,"line_start":49,"line_end":49,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":147581,"byte_end":147584,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":147589,"byte_end":147601,"line_start":51,"line_end":51,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":147606,"byte_end":147609,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The default implementation will panic if `f32::EPSILON` cannot","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":147614,"byte_end":147680,"line_start":53,"line_end":53,"column_start":5,"column_end":71}},{"value":"/ be cast to `Self`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":147685,"byte_end":147707,"line_start":54,"line_end":54,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":147984,"byte_end":147993,"line_start":66,"line_end":66,"column_start":8,"column_end":17},"name":"max_value","qualname":"::real::Real::max_value","value":"pub fn max_value() -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns the largest finite value that this type can represent.","sig":null,"attributes":[{"value":"/ Returns the largest finite value that this type can represent.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":147739,"byte_end":147805,"line_start":57,"line_end":57,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":147810,"byte_end":147813,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":147818,"byte_end":147825,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":147830,"byte_end":147861,"line_start":60,"line_end":60,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":147866,"byte_end":147883,"line_start":61,"line_end":61,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":147888,"byte_end":147891,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ let x: f64 = Real::max_value();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":147896,"byte_end":147931,"line_start":63,"line_end":63,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(x, f64::MAX);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":147936,"byte_end":147964,"line_start":64,"line_end":64,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":147969,"byte_end":147976,"line_start":65,"line_end":65,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148280,"byte_end":148285,"line_start":79,"line_end":79,"column_start":8,"column_end":13},"name":"floor","qualname":"::real::Real::floor","value":"pub fn floor(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns the largest integer less than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the largest integer less than or equal to a number.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148010,"byte_end":148073,"line_start":68,"line_end":68,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148078,"byte_end":148081,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148086,"byte_end":148093,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148098,"byte_end":148129,"line_start":71,"line_end":71,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148134,"byte_end":148137,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ let f = 3.99;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148142,"byte_end":148159,"line_start":73,"line_end":73,"column_start":5,"column_end":22}},{"value":"/ let g = 3.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148164,"byte_end":148180,"line_start":74,"line_end":74,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148185,"byte_end":148188,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.floor(), 3.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148193,"byte_end":148224,"line_start":76,"line_end":76,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(g.floor(), 3.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148229,"byte_end":148260,"line_start":77,"line_end":77,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148265,"byte_end":148272,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148578,"byte_end":148582,"line_start":92,"line_end":92,"column_start":8,"column_end":12},"name":"ceil","qualname":"::real::Real::ceil","value":"pub fn ceil(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns the smallest integer greater than or equal to a number.","sig":null,"attributes":[{"value":"/ Returns the smallest integer greater than or equal to a number.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148306,"byte_end":148373,"line_start":81,"line_end":81,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148378,"byte_end":148381,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148386,"byte_end":148393,"line_start":83,"line_end":83,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148398,"byte_end":148429,"line_start":84,"line_end":84,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148434,"byte_end":148437,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ let f = 3.01;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148442,"byte_end":148459,"line_start":86,"line_end":86,"column_start":5,"column_end":22}},{"value":"/ let g = 4.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148464,"byte_end":148480,"line_start":87,"line_end":87,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148485,"byte_end":148488,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.ceil(), 4.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148493,"byte_end":148523,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(g.ceil(), 4.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148528,"byte_end":148558,"line_start":90,"line_end":90,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148563,"byte_end":148570,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148901,"byte_end":148906,"line_start":106,"line_end":106,"column_start":8,"column_end":13},"name":"round","qualname":"::real::Real::round","value":"pub fn round(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns the nearest integer to a number. Round half-way cases away from\n `0.0`.","sig":null,"attributes":[{"value":"/ Returns the nearest integer to a number. Round half-way cases away from","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148603,"byte_end":148678,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ `0.0`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148683,"byte_end":148693,"line_start":95,"line_end":95,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148698,"byte_end":148701,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148706,"byte_end":148713,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148718,"byte_end":148749,"line_start":98,"line_end":98,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148754,"byte_end":148757,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ let f = 3.3;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148762,"byte_end":148778,"line_start":100,"line_end":100,"column_start":5,"column_end":21}},{"value":"/ let g = -3.3;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148783,"byte_end":148800,"line_start":101,"line_end":101,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148805,"byte_end":148808,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.round(), 3.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148813,"byte_end":148844,"line_start":103,"line_end":103,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(g.round(), -3.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148849,"byte_end":148881,"line_start":104,"line_end":104,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148886,"byte_end":148893,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":149175,"byte_end":149180,"line_start":119,"line_end":119,"column_start":8,"column_end":13},"name":"trunc","qualname":"::real::Real::trunc","value":"pub fn trunc(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Return the integer part of a number.","sig":null,"attributes":[{"value":"/ Return the integer part of a number.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148927,"byte_end":148967,"line_start":108,"line_end":108,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148972,"byte_end":148975,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148980,"byte_end":148987,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":148992,"byte_end":149023,"line_start":111,"line_end":111,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":149028,"byte_end":149031,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ let f = 3.3;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":149036,"byte_end":149052,"line_start":113,"line_end":113,"column_start":5,"column_end":21}},{"value":"/ let g = -3.7;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":149057,"byte_end":149074,"line_start":114,"line_end":114,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":149079,"byte_end":149082,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.trunc(), 3.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":149087,"byte_end":149118,"line_start":116,"line_end":116,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(g.trunc(), -3.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":149123,"byte_end":149155,"line_start":117,"line_end":117,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":149160,"byte_end":149167,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":149581,"byte_end":149586,"line_start":134,"line_end":134,"column_start":8,"column_end":13},"name":"fract","qualname":"::real::Real::fract","value":"pub fn fract(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns the fractional part of a number.","sig":null,"attributes":[{"value":"/ Returns the fractional part of a number.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":149201,"byte_end":149245,"line_start":121,"line_end":121,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":149250,"byte_end":149253,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":149258,"byte_end":149265,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":149270,"byte_end":149301,"line_start":124,"line_end":124,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":149306,"byte_end":149309,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let x = 3.5;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":149314,"byte_end":149330,"line_start":126,"line_end":126,"column_start":5,"column_end":21}},{"value":"/ let y = -3.5;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":149335,"byte_end":149352,"line_start":127,"line_end":127,"column_start":5,"column_end":22}},{"value":"/ let abs_difference_x = (x.fract() - 0.5).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":149357,"byte_end":149408,"line_start":128,"line_end":128,"column_start":5,"column_end":56}},{"value":"/ let abs_difference_y = (y.fract() - (-0.5)).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":149413,"byte_end":149467,"line_start":129,"line_end":129,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":149472,"byte_end":149475,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_x < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":149480,"byte_end":149518,"line_start":131,"line_end":131,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_y < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":149523,"byte_end":149561,"line_start":132,"line_end":132,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":149566,"byte_end":149573,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":150141,"byte_end":150144,"line_start":154,"line_end":154,"column_start":8,"column_end":11},"name":"abs","qualname":"::real::Real::abs","value":"pub fn abs(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Computes the absolute value of `self`. Returns `Float::nan()` if the\n number is `Float::nan()`.","sig":null,"attributes":[{"value":"/ Computes the absolute value of `self`. Returns `Float::nan()` if the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":149607,"byte_end":149679,"line_start":136,"line_end":136,"column_start":5,"column_end":77}},{"value":"/ number is `Float::nan()`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":149684,"byte_end":149713,"line_start":137,"line_end":137,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":149718,"byte_end":149721,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":149726,"byte_end":149733,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":149738,"byte_end":149769,"line_start":140,"line_end":140,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":149774,"byte_end":149791,"line_start":141,"line_end":141,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":149796,"byte_end":149799,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ let x = 3.5;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":149804,"byte_end":149820,"line_start":143,"line_end":143,"column_start":5,"column_end":21}},{"value":"/ let y = -3.5;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":149825,"byte_end":149842,"line_start":144,"line_end":144,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":149847,"byte_end":149850,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_x = (x.abs() - x).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":149855,"byte_end":149902,"line_start":146,"line_end":146,"column_start":5,"column_end":52}},{"value":"/ let abs_difference_y = (y.abs() - (-y)).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":149907,"byte_end":149957,"line_start":147,"line_end":147,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":149962,"byte_end":149965,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_x < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":149970,"byte_end":150008,"line_start":149,"line_end":149,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_y < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":150013,"byte_end":150051,"line_start":150,"line_end":150,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":150056,"byte_end":150059,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ assert!(::num_traits::Float::is_nan(f64::NAN.abs()));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":150064,"byte_end":150121,"line_start":152,"line_end":152,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":150126,"byte_end":150133,"line_start":153,"line_end":153,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":150716,"byte_end":150722,"line_start":173,"line_end":173,"column_start":8,"column_end":14},"name":"signum","qualname":"::real::Real::signum","value":"pub fn signum(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns a number that represents the sign of `self`.","sig":null,"attributes":[{"value":"/ Returns a number that represents the sign of `self`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":150165,"byte_end":150221,"line_start":156,"line_end":156,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":150226,"byte_end":150229,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ - `1.0` if the number is positive, `+0.0` or `Float::infinity()`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":150234,"byte_end":150302,"line_start":158,"line_end":158,"column_start":5,"column_end":73}},{"value":"/ - `-1.0` if the number is negative, `-0.0` or `Float::neg_infinity()`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":150307,"byte_end":150380,"line_start":159,"line_end":159,"column_start":5,"column_end":78}},{"value":"/ - `Float::nan()` if the number is `Float::nan()`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":150385,"byte_end":150437,"line_start":160,"line_end":160,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":150442,"byte_end":150445,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":150450,"byte_end":150457,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":150462,"byte_end":150493,"line_start":163,"line_end":163,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":150498,"byte_end":150515,"line_start":164,"line_end":164,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":150520,"byte_end":150523,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let f = 3.5;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":150528,"byte_end":150544,"line_start":166,"line_end":166,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":150549,"byte_end":150552,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(f.signum(), 1.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":150557,"byte_end":150589,"line_start":168,"line_end":168,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(f64::NEG_INFINITY.signum(), -1.0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":150594,"byte_end":150643,"line_start":169,"line_end":169,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":150648,"byte_end":150651,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ assert!(f64::NAN.signum().is_nan());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":150656,"byte_end":150696,"line_start":171,"line_end":171,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":150701,"byte_end":150708,"line_start":172,"line_end":172,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":151203,"byte_end":151219,"line_start":191,"line_end":191,"column_start":8,"column_end":24},"name":"is_sign_positive","qualname":"::real::Real::is_sign_positive","value":"pub fn is_sign_positive(Self) -> bool","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is positive, including `+0.0`,\n `Float::infinity()`, and with newer versions of Rust `f64::NAN`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is positive, including `+0.0`,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":150743,"byte_end":150802,"line_start":175,"line_end":175,"column_start":5,"column_end":64}},{"value":"/ `Float::infinity()`, and with newer versions of Rust `f64::NAN`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":150807,"byte_end":150875,"line_start":176,"line_end":176,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":150880,"byte_end":150883,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":150888,"byte_end":150895,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":150900,"byte_end":150931,"line_start":179,"line_end":179,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":150936,"byte_end":150953,"line_start":180,"line_end":180,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":150958,"byte_end":150961,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ let neg_nan: f64 = -f64::NAN;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":150966,"byte_end":150999,"line_start":182,"line_end":182,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":151004,"byte_end":151007,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ let f = 7.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":151012,"byte_end":151028,"line_start":184,"line_end":184,"column_start":5,"column_end":21}},{"value":"/ let g = -7.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":151033,"byte_end":151050,"line_start":185,"line_end":185,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":151055,"byte_end":151058,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ assert!(f.is_sign_positive());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":151063,"byte_end":151097,"line_start":187,"line_end":187,"column_start":5,"column_end":39}},{"value":"/ assert!(!g.is_sign_positive());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":151102,"byte_end":151137,"line_start":188,"line_end":188,"column_start":5,"column_end":40}},{"value":"/ assert!(!neg_nan.is_sign_positive());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":151142,"byte_end":151183,"line_start":189,"line_end":189,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":151188,"byte_end":151195,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":151696,"byte_end":151712,"line_start":209,"line_end":209,"column_start":8,"column_end":24},"name":"is_sign_negative","qualname":"::real::Real::is_sign_negative","value":"pub fn is_sign_negative(Self) -> bool","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns `true` if `self` is negative, including `-0.0`,\n `Float::neg_infinity()`, and with newer versions of Rust `-f64::NAN`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is negative, including `-0.0`,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":151240,"byte_end":151299,"line_start":193,"line_end":193,"column_start":5,"column_end":64}},{"value":"/ `Float::neg_infinity()`, and with newer versions of Rust `-f64::NAN`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":151304,"byte_end":151377,"line_start":194,"line_end":194,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":151382,"byte_end":151385,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":151390,"byte_end":151397,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":151402,"byte_end":151433,"line_start":197,"line_end":197,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":151438,"byte_end":151455,"line_start":198,"line_end":198,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":151460,"byte_end":151463,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ let nan: f64 = f64::NAN;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":151468,"byte_end":151496,"line_start":200,"line_end":200,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":151501,"byte_end":151504,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ let f = 7.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":151509,"byte_end":151525,"line_start":202,"line_end":202,"column_start":5,"column_end":21}},{"value":"/ let g = -7.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":151530,"byte_end":151547,"line_start":203,"line_end":203,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":151552,"byte_end":151555,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ assert!(!f.is_sign_negative());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":151560,"byte_end":151595,"line_start":205,"line_end":205,"column_start":5,"column_end":40}},{"value":"/ assert!(g.is_sign_negative());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":151600,"byte_end":151634,"line_start":206,"line_end":206,"column_start":5,"column_end":39}},{"value":"/ assert!(!nan.is_sign_negative());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":151639,"byte_end":151676,"line_start":207,"line_end":207,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":151681,"byte_end":151688,"line_start":208,"line_end":208,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":152329,"byte_end":152336,"line_start":229,"line_end":229,"column_start":8,"column_end":15},"name":"mul_add","qualname":"::real::Real::mul_add","value":"pub fn mul_add(Self, Self, Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Fused multiply-add. Computes `(self * a) + b` with only one rounding\n error, yielding a more accurate result than an unfused multiply-add.","sig":null,"attributes":[{"value":"/ Fused multiply-add. Computes `(self * a) + b` with only one rounding","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":151733,"byte_end":151805,"line_start":211,"line_end":211,"column_start":5,"column_end":77}},{"value":"/ error, yielding a more accurate result than an unfused multiply-add.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":151810,"byte_end":151882,"line_start":212,"line_end":212,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":151887,"byte_end":151890,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ Using `mul_add` can be more performant than an unfused multiply-add if","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":151895,"byte_end":151969,"line_start":214,"line_end":214,"column_start":5,"column_end":79}},{"value":"/ the target architecture has a dedicated `fma` CPU instruction.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":151974,"byte_end":152040,"line_start":215,"line_end":215,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":152045,"byte_end":152048,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":152053,"byte_end":152060,"line_start":217,"line_end":217,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":152065,"byte_end":152096,"line_start":218,"line_end":218,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":152101,"byte_end":152104,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ let m = 10.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":152109,"byte_end":152126,"line_start":220,"line_end":220,"column_start":5,"column_end":22}},{"value":"/ let x = 4.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":152131,"byte_end":152147,"line_start":221,"line_end":221,"column_start":5,"column_end":21}},{"value":"/ let b = 60.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":152152,"byte_end":152169,"line_start":222,"line_end":222,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":152174,"byte_end":152177,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ // 100.0","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":152182,"byte_end":152194,"line_start":224,"line_end":224,"column_start":5,"column_end":17}},{"value":"/ let abs_difference = (m.mul_add(x, b) - (m*x + b)).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":152199,"byte_end":152260,"line_start":225,"line_end":225,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":152265,"byte_end":152268,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":152273,"byte_end":152309,"line_start":227,"line_end":227,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":152314,"byte_end":152321,"line_start":228,"line_end":228,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":152640,"byte_end":152645,"line_start":241,"line_end":241,"column_start":8,"column_end":13},"name":"recip","qualname":"::real::Real::recip","value":"pub fn recip(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Take the reciprocal (inverse) of a number, `1/x`.","sig":null,"attributes":[{"value":"/ Take the reciprocal (inverse) of a number, `1/x`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":152375,"byte_end":152428,"line_start":231,"line_end":231,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":152433,"byte_end":152436,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":152441,"byte_end":152448,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":152453,"byte_end":152484,"line_start":234,"line_end":234,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":152489,"byte_end":152492,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":152497,"byte_end":152513,"line_start":236,"line_end":236,"column_start":5,"column_end":21}},{"value":"/ let abs_difference = (x.recip() - (1.0/x)).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":152518,"byte_end":152571,"line_start":237,"line_end":237,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":152576,"byte_end":152579,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":152584,"byte_end":152620,"line_start":239,"line_end":239,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":152625,"byte_end":152632,"line_start":240,"line_end":240,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":152987,"byte_end":152991,"line_start":255,"line_end":255,"column_start":8,"column_end":12},"name":"powi","qualname":"::real::Real::powi","value":"pub fn powi(Self, i32) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Raise a number to an integer power.","sig":null,"attributes":[{"value":"/ Raise a number to an integer power.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":152666,"byte_end":152705,"line_start":243,"line_end":243,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":152710,"byte_end":152713,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ Using this function is generally faster than using `powf`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":152718,"byte_end":152779,"line_start":245,"line_end":245,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":152784,"byte_end":152787,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":152792,"byte_end":152799,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":152804,"byte_end":152835,"line_start":248,"line_end":248,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":152840,"byte_end":152843,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":152848,"byte_end":152864,"line_start":250,"line_end":250,"column_start":5,"column_end":21}},{"value":"/ let abs_difference = (x.powi(2) - x*x).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":152869,"byte_end":152918,"line_start":251,"line_end":251,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":152923,"byte_end":152926,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":152931,"byte_end":152967,"line_start":253,"line_end":253,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":152972,"byte_end":152979,"line_start":254,"line_end":254,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":153272,"byte_end":153276,"line_start":267,"line_end":267,"column_start":8,"column_end":12},"name":"powf","qualname":"::real::Real::powf","value":"pub fn powf(Self, Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Raise a number to a real number power.","sig":null,"attributes":[{"value":"/ Raise a number to a real number power.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":153020,"byte_end":153062,"line_start":257,"line_end":257,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":153067,"byte_end":153070,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":153075,"byte_end":153082,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":153087,"byte_end":153118,"line_start":260,"line_end":260,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":153123,"byte_end":153126,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":153131,"byte_end":153147,"line_start":262,"line_end":262,"column_start":5,"column_end":21}},{"value":"/ let abs_difference = (x.powf(2.0) - x*x).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":153152,"byte_end":153203,"line_start":263,"line_end":263,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":153208,"byte_end":153211,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":153216,"byte_end":153252,"line_start":265,"line_end":265,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":153257,"byte_end":153264,"line_start":266,"line_end":266,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":153868,"byte_end":153872,"line_start":288,"line_end":288,"column_start":8,"column_end":12},"name":"sqrt","qualname":"::real::Real::sqrt","value":"pub fn sqrt(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Take the square root of a number.","sig":null,"attributes":[{"value":"/ Take the square root of a number.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":153306,"byte_end":153343,"line_start":269,"line_end":269,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":153348,"byte_end":153351,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ Returns NaN if `self` is a negative floating-point number.  ","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":153356,"byte_end":153420,"line_start":271,"line_end":271,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":153425,"byte_end":153428,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":153433,"byte_end":153445,"line_start":273,"line_end":273,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":153450,"byte_end":153453,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ If the implementing type doesn't support NaN, this method should panic if `self < 0`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":153458,"byte_end":153547,"line_start":275,"line_end":275,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":153552,"byte_end":153555,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":153560,"byte_end":153567,"line_start":277,"line_end":277,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":153572,"byte_end":153603,"line_start":278,"line_end":278,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":153608,"byte_end":153611,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ let positive = 4.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":153616,"byte_end":153639,"line_start":280,"line_end":280,"column_start":5,"column_end":28}},{"value":"/ let negative = -4.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":153644,"byte_end":153668,"line_start":281,"line_end":281,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":153673,"byte_end":153676,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (positive.sqrt() - 2.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":153681,"byte_end":153736,"line_start":283,"line_end":283,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":153741,"byte_end":153744,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":153749,"byte_end":153785,"line_start":285,"line_end":285,"column_start":5,"column_end":41}},{"value":"/ assert!(::num_traits::Float::is_nan(negative.sqrt()));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":153790,"byte_end":153848,"line_start":286,"line_end":286,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":153853,"byte_end":153860,"line_start":287,"line_end":287,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154227,"byte_end":154230,"line_start":304,"line_end":304,"column_start":8,"column_end":11},"name":"exp","qualname":"::real::Real::exp","value":"pub fn exp(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns `e^(self)`, (the exponential function).","sig":null,"attributes":[{"value":"/ Returns `e^(self)`, (the exponential function).","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":153893,"byte_end":153944,"line_start":290,"line_end":290,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":153949,"byte_end":153952,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":153957,"byte_end":153964,"line_start":292,"line_end":292,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":153969,"byte_end":154000,"line_start":293,"line_end":293,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154005,"byte_end":154008,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ let one = 1.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154013,"byte_end":154031,"line_start":295,"line_end":295,"column_start":5,"column_end":23}},{"value":"/ // e^1","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154036,"byte_end":154046,"line_start":296,"line_end":296,"column_start":5,"column_end":15}},{"value":"/ let e = one.exp();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154051,"byte_end":154073,"line_start":297,"line_end":297,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154078,"byte_end":154081,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ // ln(e) - 1 == 0","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154086,"byte_end":154107,"line_start":299,"line_end":299,"column_start":5,"column_end":26}},{"value":"/ let abs_difference = (e.ln() - 1.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154112,"byte_end":154158,"line_start":300,"line_end":300,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154163,"byte_end":154166,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154171,"byte_end":154207,"line_start":302,"line_end":302,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154212,"byte_end":154219,"line_start":303,"line_end":303,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154513,"byte_end":154517,"line_start":318,"line_end":318,"column_start":8,"column_end":12},"name":"exp2","qualname":"::real::Real::exp2","value":"pub fn exp2(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns `2^(self)`.","sig":null,"attributes":[{"value":"/ Returns `2^(self)`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154251,"byte_end":154274,"line_start":306,"line_end":306,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154279,"byte_end":154282,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154287,"byte_end":154294,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154299,"byte_end":154330,"line_start":309,"line_end":309,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154335,"byte_end":154338,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ let f = 2.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154343,"byte_end":154359,"line_start":311,"line_end":311,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154364,"byte_end":154367,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ // 2^2 - 4 == 0","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154372,"byte_end":154391,"line_start":313,"line_end":313,"column_start":5,"column_end":24}},{"value":"/ let abs_difference = (f.exp2() - 4.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154396,"byte_end":154444,"line_start":314,"line_end":314,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154449,"byte_end":154452,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154457,"byte_end":154493,"line_start":316,"line_end":316,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154498,"byte_end":154505,"line_start":317,"line_end":317,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":155006,"byte_end":155008,"line_start":338,"line_end":338,"column_start":8,"column_end":10},"name":"ln","qualname":"::real::Real::ln","value":"pub fn ln(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns the natural logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the natural logarithm of the number.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154538,"byte_end":154586,"line_start":320,"line_end":320,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154591,"byte_end":154594,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154599,"byte_end":154611,"line_start":322,"line_end":322,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154616,"byte_end":154619,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ If `self <= 0` and this type does not support a NaN representation, this function should panic.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154624,"byte_end":154723,"line_start":324,"line_end":324,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154728,"byte_end":154731,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154736,"byte_end":154743,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154748,"byte_end":154779,"line_start":327,"line_end":327,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154784,"byte_end":154787,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ let one = 1.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154792,"byte_end":154810,"line_start":329,"line_end":329,"column_start":5,"column_end":23}},{"value":"/ // e^1","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154815,"byte_end":154825,"line_start":330,"line_end":330,"column_start":5,"column_end":15}},{"value":"/ let e = one.exp();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154830,"byte_end":154852,"line_start":331,"line_end":331,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154857,"byte_end":154860,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ // ln(e) - 1 == 0","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154865,"byte_end":154886,"line_start":333,"line_end":333,"column_start":5,"column_end":26}},{"value":"/ let abs_difference = (e.ln() - 1.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154891,"byte_end":154937,"line_start":334,"line_end":334,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154942,"byte_end":154945,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154950,"byte_end":154986,"line_start":336,"line_end":336,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":154991,"byte_end":154998,"line_start":337,"line_end":337,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":155660,"byte_end":155663,"line_start":361,"line_end":361,"column_start":8,"column_end":11},"name":"log","qualname":"::real::Real::log","value":"pub fn log(Self, Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns the logarithm of the number with respect to an arbitrary base.","sig":null,"attributes":[{"value":"/ Returns the logarithm of the number with respect to an arbitrary base.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":155029,"byte_end":155103,"line_start":340,"line_end":340,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":155108,"byte_end":155111,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":155116,"byte_end":155128,"line_start":342,"line_end":342,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":155133,"byte_end":155136,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ If `self <= 0` and this type does not support a NaN representation, this function should panic.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":155141,"byte_end":155240,"line_start":344,"line_end":344,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":155245,"byte_end":155248,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":155253,"byte_end":155260,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":155265,"byte_end":155296,"line_start":347,"line_end":347,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":155301,"byte_end":155304,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ let ten = 10.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":155309,"byte_end":155328,"line_start":349,"line_end":349,"column_start":5,"column_end":24}},{"value":"/ let two = 2.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":155333,"byte_end":155351,"line_start":350,"line_end":350,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":155356,"byte_end":155359,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ // log10(10) - 1 == 0","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":155364,"byte_end":155389,"line_start":352,"line_end":352,"column_start":5,"column_end":30}},{"value":"/ let abs_difference_10 = (ten.log(10.0) - 1.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":155394,"byte_end":155450,"line_start":353,"line_end":353,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":155455,"byte_end":155458,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ // log2(2) - 1 == 0","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":155463,"byte_end":155486,"line_start":355,"line_end":355,"column_start":5,"column_end":28}},{"value":"/ let abs_difference_2 = (two.log(2.0) - 1.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":155491,"byte_end":155545,"line_start":356,"line_end":356,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":155550,"byte_end":155553,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_10 < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":155558,"byte_end":155597,"line_start":358,"line_end":358,"column_start":5,"column_end":44}},{"value":"/ assert!(abs_difference_2 < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":155602,"byte_end":155640,"line_start":359,"line_end":359,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":155645,"byte_end":155652,"line_start":360,"line_end":360,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":156127,"byte_end":156131,"line_start":379,"line_end":379,"column_start":8,"column_end":12},"name":"log2","qualname":"::real::Real::log2","value":"pub fn log2(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns the base 2 logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the base 2 logarithm of the number.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":155696,"byte_end":155743,"line_start":363,"line_end":363,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":155748,"byte_end":155751,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":155756,"byte_end":155768,"line_start":365,"line_end":365,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":155773,"byte_end":155776,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ If `self <= 0` and this type does not support a NaN representation, this function should panic.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":155781,"byte_end":155880,"line_start":367,"line_end":367,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":155885,"byte_end":155888,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":155893,"byte_end":155900,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":155905,"byte_end":155936,"line_start":370,"line_end":370,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":155941,"byte_end":155944,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ let two = 2.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":155949,"byte_end":155967,"line_start":372,"line_end":372,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":155972,"byte_end":155975,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ // log2(2) - 1 == 0","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":155980,"byte_end":156003,"line_start":374,"line_end":374,"column_start":5,"column_end":28}},{"value":"/ let abs_difference = (two.log2() - 1.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":156008,"byte_end":156058,"line_start":375,"line_end":375,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":156063,"byte_end":156066,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":156071,"byte_end":156107,"line_start":377,"line_end":377,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":156112,"byte_end":156119,"line_start":378,"line_end":378,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":156596,"byte_end":156601,"line_start":398,"line_end":398,"column_start":8,"column_end":13},"name":"log10","qualname":"::real::Real::log10","value":"pub fn log10(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns the base 10 logarithm of the number.","sig":null,"attributes":[{"value":"/ Returns the base 10 logarithm of the number.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":156152,"byte_end":156200,"line_start":381,"line_end":381,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":156205,"byte_end":156208,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":156213,"byte_end":156225,"line_start":383,"line_end":383,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":156230,"byte_end":156233,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ If `self <= 0` and this type does not support a NaN representation, this function should panic.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":156238,"byte_end":156337,"line_start":385,"line_end":385,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":156342,"byte_end":156345,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":156350,"byte_end":156353,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":156358,"byte_end":156365,"line_start":388,"line_end":388,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":156370,"byte_end":156401,"line_start":389,"line_end":389,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":156406,"byte_end":156409,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ let ten = 10.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":156414,"byte_end":156433,"line_start":391,"line_end":391,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":156438,"byte_end":156441,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ // log10(10) - 1 == 0","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":156446,"byte_end":156471,"line_start":393,"line_end":393,"column_start":5,"column_end":30}},{"value":"/ let abs_difference = (ten.log10() - 1.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":156476,"byte_end":156527,"line_start":394,"line_end":394,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":156532,"byte_end":156535,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":156540,"byte_end":156576,"line_start":396,"line_end":396,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":156581,"byte_end":156588,"line_start":397,"line_end":397,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":156886,"byte_end":156896,"line_start":411,"line_end":411,"column_start":8,"column_end":18},"name":"to_degrees","qualname":"::real::Real::to_degrees","value":"pub fn to_degrees(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Converts radians to degrees.","sig":null,"attributes":[{"value":"/ Converts radians to degrees.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":156622,"byte_end":156654,"line_start":400,"line_end":400,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":156659,"byte_end":156662,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":156667,"byte_end":156674,"line_start":402,"line_end":402,"column_start":5,"column_end":12}},{"value":"/ use std::f64::consts;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":156679,"byte_end":156704,"line_start":403,"line_end":403,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":156709,"byte_end":156712,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ let angle = consts::PI;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":156717,"byte_end":156744,"line_start":405,"line_end":405,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":156749,"byte_end":156752,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (angle.to_degrees() - 180.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":156757,"byte_end":156817,"line_start":407,"line_end":407,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":156822,"byte_end":156825,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":156830,"byte_end":156866,"line_start":409,"line_end":409,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":156871,"byte_end":156878,"line_start":410,"line_end":410,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157185,"byte_end":157195,"line_start":424,"line_end":424,"column_start":8,"column_end":18},"name":"to_radians","qualname":"::real::Real::to_radians","value":"pub fn to_radians(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Converts degrees to radians.","sig":null,"attributes":[{"value":"/ Converts degrees to radians.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":156917,"byte_end":156949,"line_start":413,"line_end":413,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":156954,"byte_end":156957,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":156962,"byte_end":156969,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/ use std::f64::consts;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":156974,"byte_end":156999,"line_start":416,"line_end":416,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157004,"byte_end":157007,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ let angle = 180.0_f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157012,"byte_end":157038,"line_start":418,"line_end":418,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157043,"byte_end":157046,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (angle.to_radians() - consts::PI).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157051,"byte_end":157116,"line_start":420,"line_end":420,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157121,"byte_end":157124,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157129,"byte_end":157165,"line_start":422,"line_end":422,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157170,"byte_end":157177,"line_start":423,"line_end":423,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157426,"byte_end":157429,"line_start":436,"line_end":436,"column_start":8,"column_end":11},"name":"max","qualname":"::real::Real::max","value":"pub fn max(Self, Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns the maximum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the maximum of the two numbers.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157216,"byte_end":157259,"line_start":426,"line_end":426,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157264,"byte_end":157267,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157272,"byte_end":157279,"line_start":428,"line_end":428,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157284,"byte_end":157315,"line_start":429,"line_end":429,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157320,"byte_end":157323,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157328,"byte_end":157344,"line_start":431,"line_end":431,"column_start":5,"column_end":21}},{"value":"/ let y = 2.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157349,"byte_end":157365,"line_start":432,"line_end":432,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157370,"byte_end":157373,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x.max(y), y);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157378,"byte_end":157406,"line_start":434,"line_end":434,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157411,"byte_end":157418,"line_start":435,"line_end":435,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157673,"byte_end":157676,"line_start":448,"line_end":448,"column_start":8,"column_end":11},"name":"min","qualname":"::real::Real::min","value":"pub fn min(Self, Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns the minimum of the two numbers.","sig":null,"attributes":[{"value":"/ Returns the minimum of the two numbers.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157463,"byte_end":157506,"line_start":438,"line_end":438,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157511,"byte_end":157514,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157519,"byte_end":157526,"line_start":440,"line_end":440,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157531,"byte_end":157562,"line_start":441,"line_end":441,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157567,"byte_end":157570,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157575,"byte_end":157591,"line_start":443,"line_end":443,"column_start":5,"column_end":21}},{"value":"/ let y = 2.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157596,"byte_end":157612,"line_start":444,"line_end":444,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157617,"byte_end":157620,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x.min(y), x);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157625,"byte_end":157653,"line_start":446,"line_end":446,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157658,"byte_end":157665,"line_start":447,"line_end":447,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":158179,"byte_end":158186,"line_start":467,"line_end":467,"column_start":8,"column_end":15},"name":"abs_sub","qualname":"::real::Real::abs_sub","value":"pub fn abs_sub(Self, Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" The positive difference of two numbers.","sig":null,"attributes":[{"value":"/ The positive difference of two numbers.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157710,"byte_end":157753,"line_start":450,"line_end":450,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157758,"byte_end":157761,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ * If `self <= other`: `0:0`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157766,"byte_end":157797,"line_start":452,"line_end":452,"column_start":5,"column_end":36}},{"value":"/ * Else: `self - other`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157802,"byte_end":157828,"line_start":453,"line_end":453,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157833,"byte_end":157836,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157841,"byte_end":157848,"line_start":455,"line_end":455,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157853,"byte_end":157884,"line_start":456,"line_end":456,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157889,"byte_end":157892,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ let x = 3.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157897,"byte_end":157913,"line_start":458,"line_end":458,"column_start":5,"column_end":21}},{"value":"/ let y = -3.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157918,"byte_end":157935,"line_start":459,"line_end":459,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157940,"byte_end":157943,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_x = (x.abs_sub(1.0) - 2.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":157948,"byte_end":158004,"line_start":461,"line_end":461,"column_start":5,"column_end":61}},{"value":"/ let abs_difference_y = (y.abs_sub(1.0) - 0.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":158009,"byte_end":158065,"line_start":462,"line_end":462,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":158070,"byte_end":158073,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_x < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":158078,"byte_end":158116,"line_start":464,"line_end":464,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_y < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":158121,"byte_end":158159,"line_start":465,"line_end":465,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":158164,"byte_end":158171,"line_start":466,"line_end":466,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":158499,"byte_end":158503,"line_start":481,"line_end":481,"column_start":8,"column_end":12},"name":"cbrt","qualname":"::real::Real::cbrt","value":"pub fn cbrt(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Take the cubic root of a number.","sig":null,"attributes":[{"value":"/ Take the cubic root of a number.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":158220,"byte_end":158256,"line_start":469,"line_end":469,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":158261,"byte_end":158264,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":158269,"byte_end":158276,"line_start":471,"line_end":471,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":158281,"byte_end":158312,"line_start":472,"line_end":472,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":158317,"byte_end":158320,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ let x = 8.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":158325,"byte_end":158341,"line_start":474,"line_end":474,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":158346,"byte_end":158349,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ // x^(1/3) - 2 == 0","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":158354,"byte_end":158377,"line_start":476,"line_end":476,"column_start":5,"column_end":28}},{"value":"/ let abs_difference = (x.cbrt() - 2.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":158382,"byte_end":158430,"line_start":477,"line_end":477,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":158435,"byte_end":158438,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":158443,"byte_end":158479,"line_start":479,"line_end":479,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":158484,"byte_end":158491,"line_start":480,"line_end":480,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":158926,"byte_end":158931,"line_start":497,"line_end":497,"column_start":8,"column_end":13},"name":"hypot","qualname":"::real::Real::hypot","value":"pub fn hypot(Self, Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Calculate the length of the hypotenuse of a right-angle triangle given\n legs of length `x` and `y`.","sig":null,"attributes":[{"value":"/ Calculate the length of the hypotenuse of a right-angle triangle given","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":158524,"byte_end":158598,"line_start":483,"line_end":483,"column_start":5,"column_end":79}},{"value":"/ legs of length `x` and `y`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":158603,"byte_end":158634,"line_start":484,"line_end":484,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":158639,"byte_end":158642,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":158647,"byte_end":158654,"line_start":486,"line_end":486,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":158659,"byte_end":158690,"line_start":487,"line_end":487,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":158695,"byte_end":158698,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":158703,"byte_end":158719,"line_start":489,"line_end":489,"column_start":5,"column_end":21}},{"value":"/ let y = 3.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":158724,"byte_end":158740,"line_start":490,"line_end":490,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":158745,"byte_end":158748,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ // sqrt(x^2 + y^2)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":158753,"byte_end":158775,"line_start":492,"line_end":492,"column_start":5,"column_end":27}},{"value":"/ let abs_difference = (x.hypot(y) - (x.powi(2) + y.powi(2)).sqrt()).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":158780,"byte_end":158857,"line_start":493,"line_end":493,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":158862,"byte_end":158865,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":158870,"byte_end":158906,"line_start":495,"line_end":495,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":158911,"byte_end":158918,"line_start":496,"line_end":496,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":159264,"byte_end":159267,"line_start":511,"line_end":511,"column_start":8,"column_end":11},"name":"sin","qualname":"::real::Real::sin","value":"pub fn sin(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Computes the sine of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the sine of a number (in radians).","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":158965,"byte_end":159012,"line_start":499,"line_end":499,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":159017,"byte_end":159020,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":159025,"byte_end":159032,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":159037,"byte_end":159068,"line_start":502,"line_end":502,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":159073,"byte_end":159090,"line_start":503,"line_end":503,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":159095,"byte_end":159098,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::PI/2.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":159103,"byte_end":159135,"line_start":505,"line_end":505,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":159140,"byte_end":159143,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (x.sin() - 1.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":159148,"byte_end":159195,"line_start":507,"line_end":507,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":159200,"byte_end":159203,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":159208,"byte_end":159244,"line_start":509,"line_end":509,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":159249,"byte_end":159256,"line_start":510,"line_end":510,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":159589,"byte_end":159592,"line_start":525,"line_end":525,"column_start":8,"column_end":11},"name":"cos","qualname":"::real::Real::cos","value":"pub fn cos(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Computes the cosine of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the cosine of a number (in radians).","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":159288,"byte_end":159337,"line_start":513,"line_end":513,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":159342,"byte_end":159345,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":159350,"byte_end":159357,"line_start":515,"line_end":515,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":159362,"byte_end":159393,"line_start":516,"line_end":516,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":159398,"byte_end":159415,"line_start":517,"line_end":517,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":159420,"byte_end":159423,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ let x = 2.0*f64::consts::PI;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":159428,"byte_end":159460,"line_start":519,"line_end":519,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":159465,"byte_end":159468,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (x.cos() - 1.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":159473,"byte_end":159520,"line_start":521,"line_end":521,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":159525,"byte_end":159528,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":159533,"byte_end":159569,"line_start":523,"line_end":523,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":159574,"byte_end":159581,"line_start":524,"line_end":524,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":159907,"byte_end":159910,"line_start":538,"line_end":538,"column_start":8,"column_end":11},"name":"tan","qualname":"::real::Real::tan","value":"pub fn tan(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Computes the tangent of a number (in radians).","sig":null,"attributes":[{"value":"/ Computes the tangent of a number (in radians).","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":159613,"byte_end":159663,"line_start":527,"line_end":527,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":159668,"byte_end":159671,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":159676,"byte_end":159683,"line_start":529,"line_end":529,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":159688,"byte_end":159719,"line_start":530,"line_end":530,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":159724,"byte_end":159741,"line_start":531,"line_end":531,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":159746,"byte_end":159749,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::PI/4.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":159754,"byte_end":159786,"line_start":533,"line_end":533,"column_start":5,"column_end":37}},{"value":"/ let abs_difference = (x.tan() - 1.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":159791,"byte_end":159838,"line_start":534,"line_end":534,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":159843,"byte_end":159846,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-14);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":159851,"byte_end":159887,"line_start":536,"line_end":536,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":159892,"byte_end":159899,"line_start":537,"line_end":537,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":160567,"byte_end":160571,"line_start":560,"line_end":560,"column_start":8,"column_end":12},"name":"asin","qualname":"::real::Real::asin","value":"pub fn asin(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Computes the arcsine of a number. Return value is in radians in\n the range [-pi/2, pi/2] or NaN if the number is outside the range\n [-1, 1].","sig":null,"attributes":[{"value":"/ Computes the arcsine of a number. Return value is in radians in","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":159931,"byte_end":159998,"line_start":540,"line_end":540,"column_start":5,"column_end":72}},{"value":"/ the range [-pi/2, pi/2] or NaN if the number is outside the range","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":160003,"byte_end":160072,"line_start":541,"line_end":541,"column_start":5,"column_end":74}},{"value":"/ [-1, 1].","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":160077,"byte_end":160089,"line_start":542,"line_end":542,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":160094,"byte_end":160097,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":160102,"byte_end":160114,"line_start":544,"line_end":544,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":160119,"byte_end":160122,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ If this type does not support a NaN representation, this function should panic","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":160127,"byte_end":160209,"line_start":546,"line_end":546,"column_start":5,"column_end":87}},{"value":"/ if the number is outside the range [-1, 1].","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":160214,"byte_end":160261,"line_start":547,"line_end":547,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":160266,"byte_end":160269,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":160274,"byte_end":160281,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":160286,"byte_end":160317,"line_start":550,"line_end":550,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":160322,"byte_end":160339,"line_start":551,"line_end":551,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":160344,"byte_end":160347,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ let f = f64::consts::PI / 2.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":160352,"byte_end":160386,"line_start":553,"line_end":553,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":160391,"byte_end":160394,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ // asin(sin(pi/2))","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":160399,"byte_end":160421,"line_start":555,"line_end":555,"column_start":5,"column_end":27}},{"value":"/ let abs_difference = (f.sin().asin() - f64::consts::PI / 2.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":160426,"byte_end":160498,"line_start":556,"line_end":556,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":160503,"byte_end":160506,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":160511,"byte_end":160547,"line_start":558,"line_end":558,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":160552,"byte_end":160559,"line_start":559,"line_end":559,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":161224,"byte_end":161228,"line_start":582,"line_end":582,"column_start":8,"column_end":12},"name":"acos","qualname":"::real::Real::acos","value":"pub fn acos(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Computes the arccosine of a number. Return value is in radians in\n the range [0, pi] or NaN if the number is outside the range\n [-1, 1].","sig":null,"attributes":[{"value":"/ Computes the arccosine of a number. Return value is in radians in","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":160592,"byte_end":160661,"line_start":562,"line_end":562,"column_start":5,"column_end":74}},{"value":"/ the range [0, pi] or NaN if the number is outside the range","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":160666,"byte_end":160729,"line_start":563,"line_end":563,"column_start":5,"column_end":68}},{"value":"/ [-1, 1].","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":160734,"byte_end":160746,"line_start":564,"line_end":564,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":160751,"byte_end":160754,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":160759,"byte_end":160771,"line_start":566,"line_end":566,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":160776,"byte_end":160779,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ If this type does not support a NaN representation, this function should panic","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":160784,"byte_end":160866,"line_start":568,"line_end":568,"column_start":5,"column_end":87}},{"value":"/ if the number is outside the range [-1, 1].","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":160871,"byte_end":160918,"line_start":569,"line_end":569,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":160923,"byte_end":160926,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":160931,"byte_end":160938,"line_start":571,"line_end":571,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":160943,"byte_end":160974,"line_start":572,"line_end":572,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":160979,"byte_end":160996,"line_start":573,"line_end":573,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":161001,"byte_end":161004,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ let f = f64::consts::PI / 4.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":161009,"byte_end":161043,"line_start":575,"line_end":575,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":161048,"byte_end":161051,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ // acos(cos(pi/4))","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":161056,"byte_end":161078,"line_start":577,"line_end":577,"column_start":5,"column_end":27}},{"value":"/ let abs_difference = (f.cos().acos() - f64::consts::PI / 4.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":161083,"byte_end":161155,"line_start":578,"line_end":578,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":161160,"byte_end":161163,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":161168,"byte_end":161204,"line_start":580,"line_end":580,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":161209,"byte_end":161216,"line_start":581,"line_end":581,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":161597,"byte_end":161601,"line_start":597,"line_end":597,"column_start":8,"column_end":12},"name":"atan","qualname":"::real::Real::atan","value":"pub fn atan(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Computes the arctangent of a number. Return value is in radians in the\n range [-pi/2, pi/2];","sig":null,"attributes":[{"value":"/ Computes the arctangent of a number. Return value is in radians in the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":161249,"byte_end":161323,"line_start":584,"line_end":584,"column_start":5,"column_end":79}},{"value":"/ range [-pi/2, pi/2];","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":161328,"byte_end":161352,"line_start":585,"line_end":585,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":161357,"byte_end":161360,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":161365,"byte_end":161372,"line_start":587,"line_end":587,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":161377,"byte_end":161408,"line_start":588,"line_end":588,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":161413,"byte_end":161416,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ let f = 1.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":161421,"byte_end":161437,"line_start":590,"line_end":590,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":161442,"byte_end":161445,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ // atan(tan(1))","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":161450,"byte_end":161469,"line_start":592,"line_end":592,"column_start":5,"column_end":24}},{"value":"/ let abs_difference = (f.tan().atan() - 1.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":161474,"byte_end":161528,"line_start":593,"line_end":593,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":161533,"byte_end":161536,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":161541,"byte_end":161577,"line_start":595,"line_end":595,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":161582,"byte_end":161589,"line_start":596,"line_end":596,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":162487,"byte_end":162492,"line_start":626,"line_end":626,"column_start":8,"column_end":13},"name":"atan2","qualname":"::real::Real::atan2","value":"pub fn atan2(Self, Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).","sig":null,"attributes":[{"value":"/ Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":161622,"byte_end":161698,"line_start":599,"line_end":599,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":161703,"byte_end":161706,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ * `x = 0`, `y = 0`: `0`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":161711,"byte_end":161738,"line_start":601,"line_end":601,"column_start":5,"column_end":32}},{"value":"/ * `x >= 0`: `arctan(y/x)` -> `[-pi/2, pi/2]`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":161743,"byte_end":161791,"line_start":602,"line_end":602,"column_start":5,"column_end":53}},{"value":"/ * `y >= 0`: `arctan(y/x) + pi` -> `(pi/2, pi]`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":161796,"byte_end":161846,"line_start":603,"line_end":603,"column_start":5,"column_end":55}},{"value":"/ * `y < 0`: `arctan(y/x) - pi` -> `(-pi, -pi/2)`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":161851,"byte_end":161902,"line_start":604,"line_end":604,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":161907,"byte_end":161910,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":161915,"byte_end":161922,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":161927,"byte_end":161958,"line_start":607,"line_end":607,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":161963,"byte_end":161980,"line_start":608,"line_end":608,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":161985,"byte_end":161988,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ let pi = f64::consts::PI;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":161993,"byte_end":162022,"line_start":610,"line_end":610,"column_start":5,"column_end":34}},{"value":"/ // All angles from horizontal right (+x)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":162027,"byte_end":162071,"line_start":611,"line_end":611,"column_start":5,"column_end":49}},{"value":"/ // 45 deg counter-clockwise","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":162076,"byte_end":162107,"line_start":612,"line_end":612,"column_start":5,"column_end":36}},{"value":"/ let x1 = 3.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":162112,"byte_end":162129,"line_start":613,"line_end":613,"column_start":5,"column_end":22}},{"value":"/ let y1 = -3.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":162134,"byte_end":162152,"line_start":614,"line_end":614,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":162157,"byte_end":162160,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ // 135 deg clockwise","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":162165,"byte_end":162189,"line_start":616,"line_end":616,"column_start":5,"column_end":29}},{"value":"/ let x2 = -3.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":162194,"byte_end":162212,"line_start":617,"line_end":617,"column_start":5,"column_end":23}},{"value":"/ let y2 = 3.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":162217,"byte_end":162234,"line_start":618,"line_end":618,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":162239,"byte_end":162242,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_1 = (y1.atan2(x1) - (-pi/4.0)).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":162247,"byte_end":162307,"line_start":620,"line_end":620,"column_start":5,"column_end":65}},{"value":"/ let abs_difference_2 = (y2.atan2(x2) - 3.0*pi/4.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":162312,"byte_end":162373,"line_start":621,"line_end":621,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":162378,"byte_end":162381,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_1 < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":162386,"byte_end":162424,"line_start":623,"line_end":623,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_2 < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":162429,"byte_end":162467,"line_start":624,"line_end":624,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":162472,"byte_end":162479,"line_start":625,"line_end":625,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":163011,"byte_end":163018,"line_start":644,"line_end":644,"column_start":8,"column_end":15},"name":"sin_cos","qualname":"::real::Real::sin_cos","value":"pub fn sin_cos(Self) -> (Self, Self)","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Simultaneously computes the sine and cosine of the number, `x`. Returns\n `(sin(x), cos(x))`.","sig":null,"attributes":[{"value":"/ Simultaneously computes the sine and cosine of the number, `x`. Returns","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":162526,"byte_end":162601,"line_start":628,"line_end":628,"column_start":5,"column_end":80}},{"value":"/ `(sin(x), cos(x))`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":162606,"byte_end":162629,"line_start":629,"line_end":629,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":162634,"byte_end":162637,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":162642,"byte_end":162649,"line_start":631,"line_end":631,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":162654,"byte_end":162685,"line_start":632,"line_end":632,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":162690,"byte_end":162707,"line_start":633,"line_end":633,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":162712,"byte_end":162715,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::PI/4.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":162720,"byte_end":162752,"line_start":635,"line_end":635,"column_start":5,"column_end":37}},{"value":"/ let f = x.sin_cos();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":162757,"byte_end":162781,"line_start":636,"line_end":636,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":162786,"byte_end":162789,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ let abs_difference_0 = (f.0 - x.sin()).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":162794,"byte_end":162843,"line_start":638,"line_end":638,"column_start":5,"column_end":54}},{"value":"/ let abs_difference_1 = (f.1 - x.cos()).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":162848,"byte_end":162897,"line_start":639,"line_end":639,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":162902,"byte_end":162905,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference_0 < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":162910,"byte_end":162948,"line_start":641,"line_end":641,"column_start":5,"column_end":43}},{"value":"/ assert!(abs_difference_0 < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":162953,"byte_end":162991,"line_start":642,"line_end":642,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":162996,"byte_end":163003,"line_start":643,"line_end":643,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":163391,"byte_end":163397,"line_start":659,"line_end":659,"column_start":8,"column_end":14},"name":"exp_m1","qualname":"::real::Real::exp_m1","value":"pub fn exp_m1(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns `e^(self) - 1` in a way that is accurate even if the\n number is close to zero.","sig":null,"attributes":[{"value":"/ Returns `e^(self) - 1` in a way that is accurate even if the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":163047,"byte_end":163111,"line_start":646,"line_end":646,"column_start":5,"column_end":69}},{"value":"/ number is close to zero.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":163116,"byte_end":163144,"line_start":647,"line_end":647,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":163149,"byte_end":163152,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":163157,"byte_end":163164,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":163169,"byte_end":163200,"line_start":650,"line_end":650,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":163205,"byte_end":163208,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ let x = 7.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":163213,"byte_end":163229,"line_start":652,"line_end":652,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":163234,"byte_end":163237,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ // e^(ln(7)) - 1","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":163242,"byte_end":163262,"line_start":654,"line_end":654,"column_start":5,"column_end":25}},{"value":"/ let abs_difference = (x.ln().exp_m1() - 6.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":163267,"byte_end":163322,"line_start":655,"line_end":655,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":163327,"byte_end":163330,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":163335,"byte_end":163371,"line_start":657,"line_end":657,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":163376,"byte_end":163383,"line_start":658,"line_end":658,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":163975,"byte_end":163980,"line_start":680,"line_end":680,"column_start":8,"column_end":13},"name":"ln_1p","qualname":"::real::Real::ln_1p","value":"pub fn ln_1p(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Returns `ln(1+n)` (natural logarithm) more accurately than if\n the operations were performed separately.","sig":null,"attributes":[{"value":"/ Returns `ln(1+n)` (natural logarithm) more accurately than if","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":163418,"byte_end":163483,"line_start":661,"line_end":661,"column_start":5,"column_end":70}},{"value":"/ the operations were performed separately.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":163488,"byte_end":163533,"line_start":662,"line_end":662,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":163538,"byte_end":163541,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":163546,"byte_end":163558,"line_start":664,"line_end":664,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":163563,"byte_end":163566,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ If this type does not support a NaN representation, this function should panic","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":163571,"byte_end":163653,"line_start":666,"line_end":666,"column_start":5,"column_end":87}},{"value":"/ if `self-1 <= 0`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":163658,"byte_end":163679,"line_start":667,"line_end":667,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":163684,"byte_end":163687,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":163692,"byte_end":163699,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":163704,"byte_end":163735,"line_start":670,"line_end":670,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":163740,"byte_end":163757,"line_start":671,"line_end":671,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":163762,"byte_end":163765,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ let x = f64::consts::E - 1.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":163770,"byte_end":163803,"line_start":673,"line_end":673,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":163808,"byte_end":163811,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ // ln(1 + (e - 1)) == ln(e) == 1","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":163816,"byte_end":163852,"line_start":675,"line_end":675,"column_start":5,"column_end":41}},{"value":"/ let abs_difference = (x.ln_1p() - 1.0).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":163857,"byte_end":163906,"line_start":676,"line_end":676,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":163911,"byte_end":163914,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":163919,"byte_end":163955,"line_start":678,"line_end":678,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":163960,"byte_end":163967,"line_start":679,"line_end":679,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164405,"byte_end":164409,"line_start":698,"line_end":698,"column_start":8,"column_end":12},"name":"sinh","qualname":"::real::Real::sinh","value":"pub fn sinh(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Hyperbolic sine function.","sig":null,"attributes":[{"value":"/ Hyperbolic sine function.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164001,"byte_end":164030,"line_start":682,"line_end":682,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164035,"byte_end":164038,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164043,"byte_end":164050,"line_start":684,"line_end":684,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164055,"byte_end":164086,"line_start":685,"line_end":685,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164091,"byte_end":164108,"line_start":686,"line_end":686,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164113,"byte_end":164116,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164121,"byte_end":164148,"line_start":688,"line_end":688,"column_start":5,"column_end":32}},{"value":"/ let x = 1.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164153,"byte_end":164169,"line_start":689,"line_end":689,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164174,"byte_end":164177,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ let f = x.sinh();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164182,"byte_end":164203,"line_start":691,"line_end":691,"column_start":5,"column_end":26}},{"value":"/ // Solving sinh() at 1 gives `(e^2-1)/(2e)`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164208,"byte_end":164255,"line_start":692,"line_end":692,"column_start":5,"column_end":52}},{"value":"/ let g = (e*e - 1.0)/(2.0*e);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164260,"byte_end":164292,"line_start":693,"line_end":693,"column_start":5,"column_end":37}},{"value":"/ let abs_difference = (f - g).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164297,"byte_end":164336,"line_start":694,"line_end":694,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164341,"byte_end":164344,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164349,"byte_end":164385,"line_start":696,"line_end":696,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164390,"byte_end":164397,"line_start":697,"line_end":697,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164850,"byte_end":164854,"line_start":716,"line_end":716,"column_start":8,"column_end":12},"name":"cosh","qualname":"::real::Real::cosh","value":"pub fn cosh(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Hyperbolic cosine function.","sig":null,"attributes":[{"value":"/ Hyperbolic cosine function.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164430,"byte_end":164461,"line_start":700,"line_end":700,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164466,"byte_end":164469,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164474,"byte_end":164481,"line_start":702,"line_end":702,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164486,"byte_end":164517,"line_start":703,"line_end":703,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164522,"byte_end":164539,"line_start":704,"line_end":704,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164544,"byte_end":164547,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164552,"byte_end":164579,"line_start":706,"line_end":706,"column_start":5,"column_end":32}},{"value":"/ let x = 1.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164584,"byte_end":164600,"line_start":707,"line_end":707,"column_start":5,"column_end":21}},{"value":"/ let f = x.cosh();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164605,"byte_end":164626,"line_start":708,"line_end":708,"column_start":5,"column_end":26}},{"value":"/ // Solving cosh() at 1 gives this result","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164631,"byte_end":164675,"line_start":709,"line_end":709,"column_start":5,"column_end":49}},{"value":"/ let g = (e*e + 1.0)/(2.0*e);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164680,"byte_end":164712,"line_start":710,"line_end":710,"column_start":5,"column_end":37}},{"value":"/ let abs_difference = (f - g).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164717,"byte_end":164756,"line_start":711,"line_end":711,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164761,"byte_end":164764,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ // Same result","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164769,"byte_end":164787,"line_start":713,"line_end":713,"column_start":5,"column_end":23}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164792,"byte_end":164830,"line_start":714,"line_end":714,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164835,"byte_end":164842,"line_start":715,"line_end":715,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":165315,"byte_end":165319,"line_start":734,"line_end":734,"column_start":8,"column_end":12},"name":"tanh","qualname":"::real::Real::tanh","value":"pub fn tanh(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Hyperbolic tangent function.","sig":null,"attributes":[{"value":"/ Hyperbolic tangent function.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164875,"byte_end":164907,"line_start":718,"line_end":718,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164912,"byte_end":164915,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164920,"byte_end":164927,"line_start":720,"line_end":720,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164932,"byte_end":164963,"line_start":721,"line_end":721,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164968,"byte_end":164985,"line_start":722,"line_end":722,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164990,"byte_end":164993,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":164998,"byte_end":165025,"line_start":724,"line_end":724,"column_start":5,"column_end":32}},{"value":"/ let x = 1.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":165030,"byte_end":165046,"line_start":725,"line_end":725,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":165051,"byte_end":165054,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ let f = x.tanh();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":165059,"byte_end":165080,"line_start":727,"line_end":727,"column_start":5,"column_end":26}},{"value":"/ // Solving tanh() at 1 gives `(1 - e^(-2))/(1 + e^(-2))`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":165085,"byte_end":165145,"line_start":728,"line_end":728,"column_start":5,"column_end":65}},{"value":"/ let g = (1.0 - e.powi(-2))/(1.0 + e.powi(-2));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":165150,"byte_end":165200,"line_start":729,"line_end":729,"column_start":5,"column_end":55}},{"value":"/ let abs_difference = (f - g).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":165205,"byte_end":165244,"line_start":730,"line_end":730,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":165249,"byte_end":165252,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":165257,"byte_end":165295,"line_start":732,"line_end":732,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":165300,"byte_end":165307,"line_start":733,"line_end":733,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":165619,"byte_end":165624,"line_start":748,"line_end":748,"column_start":8,"column_end":13},"name":"asinh","qualname":"::real::Real::asinh","value":"pub fn asinh(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Inverse hyperbolic sine function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic sine function.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":165340,"byte_end":165377,"line_start":736,"line_end":736,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":165382,"byte_end":165385,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":165390,"byte_end":165397,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":165402,"byte_end":165433,"line_start":739,"line_end":739,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":165438,"byte_end":165441,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":165446,"byte_end":165462,"line_start":741,"line_end":741,"column_start":5,"column_end":21}},{"value":"/ let f = x.sinh().asinh();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":165467,"byte_end":165496,"line_start":742,"line_end":742,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":165501,"byte_end":165504,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (f - x).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":165509,"byte_end":165548,"line_start":744,"line_end":744,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":165553,"byte_end":165556,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":165561,"byte_end":165599,"line_start":746,"line_end":746,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":165604,"byte_end":165611,"line_start":747,"line_end":747,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":165926,"byte_end":165931,"line_start":762,"line_end":762,"column_start":8,"column_end":13},"name":"acosh","qualname":"::real::Real::acosh","value":"pub fn acosh(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Inverse hyperbolic cosine function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic cosine function.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":165645,"byte_end":165684,"line_start":750,"line_end":750,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":165689,"byte_end":165692,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":165697,"byte_end":165704,"line_start":752,"line_end":752,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":165709,"byte_end":165740,"line_start":753,"line_end":753,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":165745,"byte_end":165748,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ let x = 1.0;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":165753,"byte_end":165769,"line_start":755,"line_end":755,"column_start":5,"column_end":21}},{"value":"/ let f = x.cosh().acosh();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":165774,"byte_end":165803,"line_start":756,"line_end":756,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":165808,"byte_end":165811,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (f - x).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":165816,"byte_end":165855,"line_start":758,"line_end":758,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":165860,"byte_end":165863,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":165868,"byte_end":165906,"line_start":760,"line_end":760,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":165911,"byte_end":165918,"line_start":761,"line_end":761,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":166267,"byte_end":166272,"line_start":777,"line_end":777,"column_start":8,"column_end":13},"name":"atanh","qualname":"::real::Real::atanh","value":"pub fn atanh(Self) -> Self","parent":{"krate":0,"index":481},"children":[],"decl_id":null,"docs":" Inverse hyperbolic tangent function.","sig":null,"attributes":[{"value":"/ Inverse hyperbolic tangent function.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":165952,"byte_end":165992,"line_start":764,"line_end":764,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":165997,"byte_end":166000,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":166005,"byte_end":166012,"line_start":766,"line_end":766,"column_start":5,"column_end":12}},{"value":"/ use num_traits::real::Real;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":166017,"byte_end":166048,"line_start":767,"line_end":767,"column_start":5,"column_end":36}},{"value":"/ use std::f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":166053,"byte_end":166070,"line_start":768,"line_end":768,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":166075,"byte_end":166078,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ let e = f64::consts::E;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":166083,"byte_end":166110,"line_start":770,"line_end":770,"column_start":5,"column_end":32}},{"value":"/ let f = e.tanh().atanh();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":166115,"byte_end":166144,"line_start":771,"line_end":771,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":166149,"byte_end":166152,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ let abs_difference = (f - e).abs();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":166157,"byte_end":166196,"line_start":773,"line_end":773,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":166201,"byte_end":166204,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ assert!(abs_difference < 1.0e-10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":166209,"byte_end":166247,"line_start":775,"line_end":775,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":166252,"byte_end":166259,"line_start":776,"line_end":776,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":531},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sign","qualname":"::sign","value":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":4620},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":4253},{"krate":0,"index":4259},{"krate":0,"index":4265},{"krate":0,"index":4271},{"krate":0,"index":4277},{"krate":0,"index":4283},{"krate":0,"index":543},{"krate":0,"index":4289},{"krate":0,"index":4295},{"krate":0,"index":551},{"krate":0,"index":553},{"krate":0,"index":555},{"krate":0,"index":557},{"krate":0,"index":4301},{"krate":0,"index":4302},{"krate":0,"index":4303},{"krate":0,"index":4304},{"krate":0,"index":4305},{"krate":0,"index":4306},{"krate":0,"index":559}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":536},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":168356,"byte_end":168362,"line_start":8,"line_end":8,"column_start":11,"column_end":17},"name":"Signed","qualname":"::sign::Signed","value":"Signed: Sized + Num + Neg<Output = Self>","parent":null,"children":[{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541}],"decl_id":null,"docs":" Useful functions for signed numbers (i.e. numbers that can be negative).\n","sig":null,"attributes":[{"value":"/ Useful functions for signed numbers (i.e. numbers that can be negative).","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":168269,"byte_end":168345,"line_start":7,"line_end":7,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":168615,"byte_end":168618,"line_start":14,"line_end":14,"column_start":8,"column_end":11},"name":"abs","qualname":"::sign::Signed::abs","value":"pub fn abs(&Self) -> Self","parent":{"krate":0,"index":536},"children":[],"decl_id":null,"docs":" Computes the absolute value.","sig":null,"attributes":[{"value":"/ Computes the absolute value.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":168403,"byte_end":168435,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":168440,"byte_end":168443,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ For `f32` and `f64`, `NaN` will be returned if the number is `NaN`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":168448,"byte_end":168519,"line_start":11,"line_end":11,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":168524,"byte_end":168527,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ For signed integers, `::MIN` will be returned if the number is `::MIN`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":168532,"byte_end":168607,"line_start":13,"line_end":13,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":168843,"byte_end":168850,"line_start":20,"line_end":20,"column_start":8,"column_end":15},"name":"abs_sub","qualname":"::sign::Signed::abs_sub","value":"pub fn abs_sub(&Self, &Self) -> Self","parent":{"krate":0,"index":536},"children":[],"decl_id":null,"docs":" The positive difference of two numbers.","sig":null,"attributes":[{"value":"/ The positive difference of two numbers.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":168640,"byte_end":168683,"line_start":16,"line_end":16,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":168688,"byte_end":168691,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ Returns `zero` if the number is less than or equal to `other`, otherwise the difference","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":168696,"byte_end":168787,"line_start":18,"line_end":18,"column_start":5,"column_end":96}},{"value":"/ between `self` and `other` is returned.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":168792,"byte_end":168835,"line_start":19,"line_end":19,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":169308,"byte_end":169314,"line_start":35,"line_end":35,"column_start":8,"column_end":14},"name":"signum","qualname":"::sign::Signed::signum","value":"pub fn signum(&Self) -> Self","parent":{"krate":0,"index":536},"children":[],"decl_id":null,"docs":" Returns the sign of the number.","sig":null,"attributes":[{"value":"/ Returns the sign of the number.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":168886,"byte_end":168921,"line_start":22,"line_end":22,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":168926,"byte_end":168929,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ For `f32` and `f64`:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":168934,"byte_end":168958,"line_start":24,"line_end":24,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":168963,"byte_end":168966,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ * `1.0` if the number is positive, `+0.0` or `INFINITY`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":168971,"byte_end":169030,"line_start":26,"line_end":26,"column_start":5,"column_end":64}},{"value":"/ * `-1.0` if the number is negative, `-0.0` or `NEG_INFINITY`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":169035,"byte_end":169099,"line_start":27,"line_end":27,"column_start":5,"column_end":69}},{"value":"/ * `NaN` if the number is `NaN`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":169104,"byte_end":169138,"line_start":28,"line_end":28,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":169143,"byte_end":169146,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ For signed integers:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":169151,"byte_end":169175,"line_start":30,"line_end":30,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":169180,"byte_end":169183,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ * `0` if the number is zero","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":169188,"byte_end":169219,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/ * `1` if the number is positive","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":169224,"byte_end":169259,"line_start":33,"line_end":33,"column_start":5,"column_end":40}},{"value":"/ * `-1` if the number is negative","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":169264,"byte_end":169300,"line_start":34,"line_end":34,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":169431,"byte_end":169442,"line_start":38,"line_end":38,"column_start":8,"column_end":19},"name":"is_positive","qualname":"::sign::Signed::is_positive","value":"pub fn is_positive(&Self) -> bool","parent":{"krate":0,"index":536},"children":[],"decl_id":null,"docs":" Returns true if the number is positive and false if the number is zero or negative.\n","sig":null,"attributes":[{"value":"/ Returns true if the number is positive and false if the number is zero or negative.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":169336,"byte_end":169423,"line_start":37,"line_end":37,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":169559,"byte_end":169570,"line_start":41,"line_end":41,"column_start":8,"column_end":19},"name":"is_negative","qualname":"::sign::Signed::is_negative","value":"pub fn is_negative(&Self) -> bool","parent":{"krate":0,"index":536},"children":[],"decl_id":null,"docs":" Returns true if the number is negative and false if the number is zero or positive.\n","sig":null,"attributes":[{"value":"/ Returns true if the number is negative and false if the number is zero or positive.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":169464,"byte_end":169551,"line_start":40,"line_end":40,"column_start":5,"column_end":92}}]},{"kind":"Function","id":{"krate":0,"index":551},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":172764,"byte_end":172767,"line_start":165,"line_end":165,"column_start":8,"column_end":11},"name":"abs","qualname":"::sign::abs","value":"pub fn abs<T: Signed>(T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Computes the absolute value.","sig":null,"attributes":[{"value":"/ Computes the absolute value.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":172551,"byte_end":172583,"line_start":159,"line_end":159,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":172584,"byte_end":172587,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ For `f32` and `f64`, `NaN` will be returned if the number is `NaN`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":172588,"byte_end":172658,"line_start":161,"line_end":161,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":172659,"byte_end":172662,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ For signed integers, `::MIN` will be returned if the number is `::MIN`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":172663,"byte_end":172738,"line_start":163,"line_end":163,"column_start":1,"column_end":76}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":172739,"byte_end":172756,"line_start":164,"line_end":164,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":553},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":173004,"byte_end":173011,"line_start":174,"line_end":174,"column_start":8,"column_end":15},"name":"abs_sub","qualname":"::sign::abs_sub","value":"pub fn abs_sub<T: Signed>(T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" The positive difference of two numbers.","sig":null,"attributes":[{"value":"/ The positive difference of two numbers.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":172815,"byte_end":172858,"line_start":169,"line_end":169,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":172859,"byte_end":172862,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ Returns zero if `x` is less than or equal to `y`, otherwise the difference","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":172863,"byte_end":172941,"line_start":171,"line_end":171,"column_start":1,"column_end":79}},{"value":"/ between `x` and `y` is returned.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":172942,"byte_end":172978,"line_start":172,"line_end":172,"column_start":1,"column_end":37}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":172979,"byte_end":172996,"line_start":173,"line_end":173,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":555},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":173455,"byte_end":173461,"line_start":192,"line_end":192,"column_start":8,"column_end":14},"name":"signum","qualname":"::sign::signum","value":"pub fn signum<T: Signed>(T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the sign of the number.","sig":null,"attributes":[{"value":"/ Returns the sign of the number.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":173063,"byte_end":173098,"line_start":178,"line_end":178,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":173099,"byte_end":173102,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ For `f32` and `f64`:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":173103,"byte_end":173127,"line_start":180,"line_end":180,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":173128,"byte_end":173131,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ * `1.0` if the number is positive, `+0.0` or `INFINITY`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":173132,"byte_end":173191,"line_start":182,"line_end":182,"column_start":1,"column_end":60}},{"value":"/ * `-1.0` if the number is negative, `-0.0` or `NEG_INFINITY`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":173192,"byte_end":173256,"line_start":183,"line_end":183,"column_start":1,"column_end":65}},{"value":"/ * `NaN` if the number is `NaN`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":173257,"byte_end":173291,"line_start":184,"line_end":184,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":173292,"byte_end":173295,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ For signed integers:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":173296,"byte_end":173320,"line_start":186,"line_end":186,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":173321,"byte_end":173324,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ * `0` if the number is zero","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":173325,"byte_end":173356,"line_start":188,"line_end":188,"column_start":1,"column_end":32}},{"value":"/ * `1` if the number is positive","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":173357,"byte_end":173392,"line_start":189,"line_end":189,"column_start":1,"column_end":36}},{"value":"/ * `-1` if the number is negative","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":173393,"byte_end":173429,"line_start":190,"line_end":190,"column_start":1,"column_end":37}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":173430,"byte_end":173447,"line_start":191,"line_end":191,"column_start":1,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":557},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":173570,"byte_end":173578,"line_start":197,"line_end":197,"column_start":11,"column_end":19},"name":"Unsigned","qualname":"::sign::Unsigned","value":"Unsigned: Num","parent":null,"children":[],"decl_id":null,"docs":" A trait for values which cannot be negative\n","sig":null,"attributes":[{"value":"/ A trait for values which cannot be negative","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":173512,"byte_end":173559,"line_start":196,"line_end":196,"column_start":1,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":561},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1982,"byte_end":1985,"line_start":62,"line_end":62,"column_start":11,"column_end":14},"name":"Num","qualname":"::Num","value":"Num: PartialEq + Zero + One + NumOps","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563}],"decl_id":null,"docs":" The base trait for numeric types, covering `0` and `1` values,\n comparisons, basic numeric operations, and string conversion.\n","sig":null,"attributes":[{"value":"/ The base trait for numeric types, covering `0` and `1` values,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1839,"byte_end":1905,"line_start":60,"line_end":60,"column_start":1,"column_end":67}},{"value":"/ comparisons, basic numeric operations, and string conversion.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1906,"byte_end":1971,"line_start":61,"line_end":61,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":562},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2030,"byte_end":2045,"line_start":63,"line_end":63,"column_start":10,"column_end":25},"name":"FromStrRadixErr","qualname":"::Num::FromStrRadixErr","value":"type FromStrRadixErr;","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2403,"byte_end":2417,"line_start":78,"line_end":78,"column_start":8,"column_end":22},"name":"from_str_radix","qualname":"::Num::from_str_radix","value":"pub fn from_str_radix(&str, u32) -> Result<Self, Self::FromStrRadixErr>","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" Convert from a string and radix <= 36.","sig":null,"attributes":[{"value":"/ Convert from a string and radix <= 36.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2052,"byte_end":2094,"line_start":65,"line_end":65,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2099,"byte_end":2102,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2107,"byte_end":2121,"line_start":67,"line_end":67,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2126,"byte_end":2129,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2134,"byte_end":2145,"line_start":69,"line_end":69,"column_start":5,"column_end":16}},{"value":"/ use num_traits::Num;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2150,"byte_end":2174,"line_start":70,"line_end":70,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2179,"byte_end":2182,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ let result = <i32 as Num>::from_str_radix(\"27\", 10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2187,"byte_end":2243,"line_start":72,"line_end":72,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(result, Ok(27));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2248,"byte_end":2279,"line_start":73,"line_end":73,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2284,"byte_end":2287,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let result = <i32 as Num>::from_str_radix(\"foo\", 10);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2292,"byte_end":2349,"line_start":75,"line_end":75,"column_start":5,"column_end":62}},{"value":"/ assert!(result.is_err());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2354,"byte_end":2383,"line_start":76,"line_end":76,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2388,"byte_end":2395,"line_start":77,"line_end":77,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":564},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2639,"byte_end":2645,"line_start":84,"line_end":84,"column_start":11,"column_end":17},"name":"NumOps","qualname":"::NumOps","value":"NumOps<Rhs = Self, Output = Self>: Add<Rhs, Output = Output> + Sub<Rhs, Output = Output> + Mul<Rhs, Output =\nOutput> + Div<Rhs, Output = Output> + Rem<Rhs, Output = Output>","parent":null,"children":[],"decl_id":null,"docs":" The trait for types implementing basic numeric operations","sig":null,"attributes":[{"value":"/ The trait for types implementing basic numeric operations","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2484,"byte_end":2545,"line_start":81,"line_end":81,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2546,"byte_end":2549,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2550,"byte_end":2628,"line_start":83,"line_end":83,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":571},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3279,"byte_end":3285,"line_start":106,"line_end":106,"column_start":11,"column_end":17},"name":"NumRef","qualname":"::NumRef","value":"NumRef: Num + for<'r> NumOps<&'r Self>","parent":null,"children":[],"decl_id":null,"docs":" The trait for `Num` types which also implement numeric operations taking\n the second operand by reference.","sig":null,"attributes":[{"value":"/ The trait for `Num` types which also implement numeric operations taking","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3072,"byte_end":3148,"line_start":102,"line_end":102,"column_start":1,"column_end":77}},{"value":"/ the second operand by reference.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3149,"byte_end":3185,"line_start":103,"line_end":103,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3186,"byte_end":3189,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3190,"byte_end":3268,"line_start":105,"line_end":105,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":576},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3604,"byte_end":3610,"line_start":113,"line_end":113,"column_start":11,"column_end":17},"name":"RefNum","qualname":"::RefNum","value":"RefNum<Base>: NumOps<Base, Base> + for<'r> NumOps<&'r Base, Base>","parent":null,"children":[],"decl_id":null,"docs":" The trait for references which implement numeric operations, taking the\n second operand either by value or by reference.","sig":null,"attributes":[{"value":"/ The trait for references which implement numeric operations, taking the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3383,"byte_end":3458,"line_start":109,"line_end":109,"column_start":1,"column_end":76}},{"value":"/ second operand either by value or by reference.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3459,"byte_end":3510,"line_start":110,"line_end":110,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3511,"byte_end":3514,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3515,"byte_end":3593,"line_start":112,"line_end":112,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":583},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3943,"byte_end":3955,"line_start":119,"line_end":119,"column_start":11,"column_end":23},"name":"NumAssignOps","qualname":"::NumAssignOps","value":"NumAssignOps<Rhs = Self>: AddAssign<Rhs> + SubAssign<Rhs> + MulAssign<Rhs> + DivAssign<Rhs> +\nRemAssign<Rhs>","parent":null,"children":[],"decl_id":null,"docs":" The trait for types implementing numeric assignment operators (like `+=`).","sig":null,"attributes":[{"value":"/ The trait for types implementing numeric assignment operators (like `+=`).","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3771,"byte_end":3849,"line_start":116,"line_end":116,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3850,"byte_end":3853,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3854,"byte_end":3932,"line_start":118,"line_end":118,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":588},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4365,"byte_end":4374,"line_start":132,"line_end":132,"column_start":11,"column_end":20},"name":"NumAssign","qualname":"::NumAssign","value":"NumAssign: Num + NumAssignOps","parent":null,"children":[],"decl_id":null,"docs":" The trait for `Num` types which also implement assignment operators.","sig":null,"attributes":[{"value":"/ The trait for `Num` types which also implement assignment operators.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4199,"byte_end":4271,"line_start":129,"line_end":129,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4272,"byte_end":4275,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4276,"byte_end":4354,"line_start":131,"line_end":131,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":591},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4670,"byte_end":4682,"line_start":139,"line_end":139,"column_start":11,"column_end":23},"name":"NumAssignRef","qualname":"::NumAssignRef","value":"NumAssignRef: NumAssign + for<'r> NumAssignOps<&'r Self>","parent":null,"children":[],"decl_id":null,"docs":" The trait for `NumAssign` types which also implement assignment operations\n taking the second operand by reference.","sig":null,"attributes":[{"value":"/ The trait for `NumAssign` types which also implement assignment operations","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4454,"byte_end":4532,"line_start":135,"line_end":135,"column_start":1,"column_end":79}},{"value":"/ taking the second operand by reference.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4533,"byte_end":4576,"line_start":136,"line_end":136,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4577,"byte_end":4580,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is automatically implemented for types which implement the operators.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4581,"byte_end":4659,"line_start":138,"line_end":138,"column_start":1,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4344},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":5804,"byte_end":5809,"line_start":175,"line_end":175,"column_start":5,"column_end":10},"name":"Empty","qualname":"::FloatErrorKind::Empty","value":"FloatErrorKind::Empty","parent":{"krate":0,"index":4343},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4346},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":5815,"byte_end":5822,"line_start":176,"line_end":176,"column_start":5,"column_end":12},"name":"Invalid","qualname":"::FloatErrorKind::Invalid","value":"FloatErrorKind::Invalid","parent":{"krate":0,"index":4343},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4343},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":5783,"byte_end":5797,"line_start":174,"line_end":174,"column_start":10,"column_end":24},"name":"FloatErrorKind","qualname":"::FloatErrorKind","value":"pub enum FloatErrorKind { Empty, Invalid, }","parent":null,"children":[{"krate":0,"index":4344},{"krate":0,"index":4346}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4350},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":5980,"byte_end":5995,"line_start":181,"line_end":181,"column_start":12,"column_end":27},"name":"ParseFloatError","qualname":"::ParseFloatError","value":"ParseFloatError { kind }","parent":null,"children":[{"krate":0,"index":4351}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4351},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":6006,"byte_end":6010,"line_start":182,"line_end":182,"column_start":9,"column_end":13},"name":"kind","qualname":"::ParseFloatError::kind","value":"FloatErrorKind","parent":{"krate":0,"index":4350},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":604},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":14061,"byte_end":14066,"line_start":363,"line_end":363,"column_start":8,"column_end":13},"name":"clamp","qualname":"::clamp","value":"pub fn clamp<T: PartialOrd>(T, T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" A value bounded by a minimum and a maximum","sig":null,"attributes":[{"value":"/ A value bounded by a minimum and a maximum","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":13847,"byte_end":13893,"line_start":357,"line_end":357,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":13894,"byte_end":13897,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/  If input is less than min then this returns min.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":13898,"byte_end":13951,"line_start":359,"line_end":359,"column_start":1,"column_end":54}},{"value":"/  If input is greater than max then this returns max.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":13952,"byte_end":14008,"line_start":360,"line_end":360,"column_start":1,"column_end":57}},{"value":"/  Otherwise this returns input.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":14009,"byte_end":14043,"line_start":361,"line_end":361,"column_start":1,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":14044,"byte_end":14053,"line_start":362,"line_end":362,"column_start":1,"column_end":10}}]}],"impls":[{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\bounds.rs","byte_start":19038,"byte_end":19046,"line_start":49,"line_end":49,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":39135,"byte_end":39143,"line_start":568,"line_end":568,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1413},{"krate":0,"index":1414},{"krate":0,"index":1415},{"krate":0,"index":1416},{"krate":0,"index":1417},{"krate":0,"index":1418},{"krate":0,"index":1419},{"krate":0,"index":1420},{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":39911,"byte_end":39919,"line_start":601,"line_end":601,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1440}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":41827,"byte_end":41835,"line_start":677,"line_end":677,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":99866,"byte_end":99874,"line_start":66,"line_end":66,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":101851,"byte_end":101859,"line_start":155,"line_end":155,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":136660,"byte_end":136668,"line_start":174,"line_end":174,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":136860,"byte_end":136868,"line_start":182,"line_end":182,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":137060,"byte_end":137068,"line_start":190,"line_end":190,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":137260,"byte_end":137268,"line_start":198,"line_end":198,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":137466,"byte_end":137474,"line_start":206,"line_end":206,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":685,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":166315,"byte_end":166316,"line_start":780,"line_end":780,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4206},{"krate":0,"index":4207},{"krate":0,"index":4208},{"krate":0,"index":4209},{"krate":0,"index":4210},{"krate":0,"index":4211},{"krate":0,"index":4212},{"krate":0,"index":4213},{"krate":0,"index":4214},{"krate":0,"index":4215},{"krate":0,"index":4216},{"krate":0,"index":4217},{"krate":0,"index":4218},{"krate":0,"index":4219},{"krate":0,"index":4220},{"krate":0,"index":4221},{"krate":0,"index":4222},{"krate":0,"index":4223},{"krate":0,"index":4224},{"krate":0,"index":4225},{"krate":0,"index":4226},{"krate":0,"index":4227},{"krate":0,"index":4228},{"krate":0,"index":4229},{"krate":0,"index":4230},{"krate":0,"index":4231},{"krate":0,"index":4232},{"krate":0,"index":4233},{"krate":0,"index":4234},{"krate":0,"index":4235},{"krate":0,"index":4236},{"krate":0,"index":4237},{"krate":0,"index":4238},{"krate":0,"index":4239},{"krate":0,"index":4240},{"krate":0,"index":4241},{"krate":0,"index":4242},{"krate":0,"index":4243},{"krate":0,"index":4244},{"krate":0,"index":4245},{"krate":0,"index":4246},{"krate":0,"index":4247},{"krate":0,"index":4248},{"krate":0,"index":4249},{"krate":0,"index":4250},{"krate":0,"index":4251},{"krate":0,"index":4252}],"docs":"","sig":null,"attributes":[]},{"id":692,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":170452,"byte_end":170460,"line_start":80,"line_end":80,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":701,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":173840,"byte_end":173848,"line_start":209,"line_end":209,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":702,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2882,"byte_end":2883,"line_start":93,"line_end":93,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":703,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3340,"byte_end":3341,"line_start":107,"line_end":107,"column_start":20,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":704,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3704,"byte_end":3705,"line_start":114,"line_end":114,"column_start":32,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":705,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4096,"byte_end":4097,"line_start":124,"line_end":124,"column_start":36,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":706,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4420,"byte_end":4421,"line_start":133,"line_end":133,"column_start":23,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":707,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4755,"byte_end":4756,"line_start":140,"line_end":140,"column_start":26,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":720,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":5355,"byte_end":5363,"line_start":159,"line_end":159,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":599},{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":721,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":6053,"byte_end":6068,"line_start":185,"line_end":185,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1690,"byte_end":1696,"line_start":49,"line_end":49,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":67}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1706,"byte_end":1710,"line_start":50,"line_end":50,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":98}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1720,"byte_end":1725,"line_start":51,"line_end":51,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":182}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1735,"byte_end":1745,"line_start":52,"line_end":52,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":288}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1755,"byte_end":1758,"line_start":53,"line_end":53,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":316}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1768,"byte_end":1771,"line_start":54,"line_end":54,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":348}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mod.rs","byte_start":114236,"byte_end":114243,"line_start":1,"line_end":1,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":349}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mod.rs","byte_start":114253,"byte_end":114256,"line_start":2,"line_end":2,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":377}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mod.rs","byte_start":114266,"byte_end":114273,"line_start":3,"line_end":3,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":395}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mod.rs","byte_start":114283,"byte_end":114293,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":417}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\mod.rs","byte_start":114303,"byte_end":114311,"line_start":5,"line_end":5,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":422}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1781,"byte_end":1784,"line_start":55,"line_end":55,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":457}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1818,"byte_end":1822,"line_start":57,"line_end":57,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":475}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1832,"byte_end":1836,"line_start":58,"line_end":58,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":531}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\bounds.rs","byte_start":19038,"byte_end":19046,"line_start":49,"line_end":49,"column_start":30,"column_end":38},"kind":{"Impl":{"id":12}},"from":{"krate":1,"index":14231},"to":{"krate":0,"index":87}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":32326,"byte_end":32331,"line_start":364,"line_end":364,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":145}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":39135,"byte_end":39143,"line_start":568,"line_end":568,"column_start":38,"column_end":46},"kind":{"Impl":{"id":29}},"from":{"krate":1,"index":14231},"to":{"krate":0,"index":120}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":39911,"byte_end":39919,"line_start":601,"line_end":601,"column_start":42,"column_end":50},"kind":{"Impl":{"id":30}},"from":{"krate":1,"index":14231},"to":{"krate":0,"index":145}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40754,"byte_end":40759,"line_start":640,"line_end":640,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":170}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":40762,"byte_end":40773,"line_start":640,"line_end":640,"column_start":28,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":120},"to":{"krate":0,"index":170}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":41827,"byte_end":41835,"line_start":677,"line_end":677,"column_start":30,"column_end":38},"kind":{"Impl":{"id":45}},"from":{"krate":1,"index":14231},"to":{"krate":0,"index":170}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\cast.rs","byte_start":43067,"byte_end":43071,"line_start":718,"line_end":718,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":1,"index":2055},"to":{"krate":0,"index":178}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":44836,"byte_end":44839,"line_start":13,"line_end":13,"column_start":22,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":561},"to":{"krate":0,"index":192}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":44842,"byte_end":44849,"line_start":13,"line_end":13,"column_start":28,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":170},"to":{"krate":0,"index":192}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":44852,"byte_end":44855,"line_start":13,"line_end":13,"column_start":38,"column_end":41},"kind":"SuperTrait","from":{"krate":1,"index":2137},"to":{"krate":0,"index":192}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":44873,"byte_end":44883,"line_start":13,"line_end":13,"column_start":59,"column_end":69},"kind":"SuperTrait","from":{"krate":1,"index":1807},"to":{"krate":0,"index":192}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":44886,"byte_end":44890,"line_start":13,"line_end":13,"column_start":72,"column_end":76},"kind":"SuperTrait","from":{"krate":1,"index":2055},"to":{"krate":0,"index":192}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68195,"byte_end":68198,"line_start":898,"line_end":898,"column_start":18,"column_end":21},"kind":"SuperTrait","from":{"krate":0,"index":561},"to":{"krate":0,"index":226}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68201,"byte_end":68205,"line_start":898,"line_end":898,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2055},"to":{"krate":0,"index":226}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68208,"byte_end":68215,"line_start":898,"line_end":898,"column_start":31,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":170},"to":{"krate":0,"index":226}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68218,"byte_end":68228,"line_start":898,"line_end":898,"column_start":41,"column_end":51},"kind":"SuperTrait","from":{"krate":1,"index":1807},"to":{"krate":0,"index":226}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\float.rs","byte_start":68231,"byte_end":68234,"line_start":898,"line_end":898,"column_start":54,"column_end":57},"kind":"SuperTrait","from":{"krate":1,"index":2137},"to":{"krate":0,"index":226}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":98595,"byte_end":98600,"line_start":12,"line_end":12,"column_start":17,"column_end":22},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":293}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":98603,"byte_end":98606,"line_start":12,"line_end":12,"column_start":25,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2110},"to":{"krate":0,"index":293}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":99866,"byte_end":99874,"line_start":66,"line_end":66,"column_start":24,"column_end":32},"kind":{"Impl":{"id":284}},"from":{"krate":1,"index":14231},"to":{"krate":0,"index":293}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100303,"byte_end":100308,"line_start":91,"line_end":91,"column_start":16,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":303}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":100311,"byte_end":100314,"line_start":91,"line_end":91,"column_start":24,"column_end":27},"kind":"SuperTrait","from":{"krate":1,"index":2120},"to":{"krate":0,"index":303}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\identities.rs","byte_start":101851,"byte_end":101859,"line_start":155,"line_end":155,"column_start":22,"column_end":30},"kind":{"Impl":{"id":299}},"from":{"krate":1,"index":14231},"to":{"krate":0,"index":303}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104866,"byte_end":104871,"line_start":35,"line_end":35,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":330}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104878,"byte_end":104882,"line_start":36,"line_end":36,"column_start":7,"column_end":11},"kind":"SuperTrait","from":{"krate":1,"index":2055},"to":{"krate":0,"index":330}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104889,"byte_end":104892,"line_start":37,"line_end":37,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":0,"index":561},"to":{"krate":0,"index":330}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104899,"byte_end":104906,"line_start":38,"line_end":38,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":170},"to":{"krate":0,"index":330}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104913,"byte_end":104920,"line_start":39,"line_end":39,"column_start":7,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":87},"to":{"krate":0,"index":330}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104927,"byte_end":104937,"line_start":40,"line_end":40,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":1,"index":1807},"to":{"krate":0,"index":330}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104944,"byte_end":104947,"line_start":41,"line_end":41,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":1796},"to":{"krate":0,"index":330}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104954,"byte_end":104956,"line_start":42,"line_end":42,"column_start":7,"column_end":9},"kind":"SuperTrait","from":{"krate":1,"index":1775},"to":{"krate":0,"index":330}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104963,"byte_end":104966,"line_start":43,"line_end":43,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2162},"to":{"krate":0,"index":330}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":104988,"byte_end":104994,"line_start":44,"line_end":44,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":2166},"to":{"krate":0,"index":330}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105016,"byte_end":105021,"line_start":45,"line_end":45,"column_start":7,"column_end":12},"kind":"SuperTrait","from":{"krate":1,"index":2171},"to":{"krate":0,"index":330}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105043,"byte_end":105049,"line_start":46,"line_end":46,"column_start":7,"column_end":13},"kind":"SuperTrait","from":{"krate":1,"index":2176},"to":{"krate":0,"index":330}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105071,"byte_end":105074,"line_start":47,"line_end":47,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2181},"to":{"krate":0,"index":330}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105103,"byte_end":105106,"line_start":48,"line_end":48,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2187},"to":{"krate":0,"index":330}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105135,"byte_end":105145,"line_start":49,"line_end":49,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":358},"to":{"krate":0,"index":330}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105167,"byte_end":105177,"line_start":50,"line_end":50,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":361},"to":{"krate":0,"index":330}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105199,"byte_end":105209,"line_start":51,"line_end":51,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":363},"to":{"krate":0,"index":330}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105231,"byte_end":105241,"line_start":52,"line_end":52,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":365},"to":{"krate":0,"index":330}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\int.rs","byte_start":105263,"byte_end":105273,"line_start":53,"line_end":53,"column_start":7,"column_end":17},"kind":"SuperTrait","from":{"krate":0,"index":418},"to":{"krate":0,"index":330}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114475,"byte_end":114480,"line_start":5,"line_end":5,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":358}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":114483,"byte_end":114486,"line_start":5,"line_end":5,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":2110},"to":{"krate":0,"index":358}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":115616,"byte_end":115621,"line_start":39,"line_end":39,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":361}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":115624,"byte_end":115627,"line_start":39,"line_end":39,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":2115},"to":{"krate":0,"index":361}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":116519,"byte_end":116524,"line_start":63,"line_end":63,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":363}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":116527,"byte_end":116530,"line_start":63,"line_end":63,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":2120},"to":{"krate":0,"index":363}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":117487,"byte_end":117492,"line_start":87,"line_end":87,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":365}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":117495,"byte_end":117498,"line_start":87,"line_end":87,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":2125},"to":{"krate":0,"index":365}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118474,"byte_end":118479,"line_start":111,"line_end":111,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":367}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":118482,"byte_end":118485,"line_start":111,"line_end":111,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":2131},"to":{"krate":0,"index":367}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":120253,"byte_end":120258,"line_start":162,"line_end":162,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":370}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":121702,"byte_end":121707,"line_start":200,"line_end":200,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":372}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":121710,"byte_end":121713,"line_start":200,"line_end":200,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":2181},"to":{"krate":0,"index":372}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123344,"byte_end":123349,"line_start":246,"line_end":246,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":375}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\checked.rs","byte_start":123352,"byte_end":123355,"line_start":246,"line_end":246,"column_start":31,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":2187},"to":{"krate":0,"index":375}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130871,"byte_end":130876,"line_start":24,"line_end":24,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":431}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":130879,"byte_end":130882,"line_start":24,"line_end":24,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":2110},"to":{"krate":0,"index":431}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":131765,"byte_end":131770,"line_start":47,"line_end":47,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":433}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":131773,"byte_end":131776,"line_start":47,"line_end":47,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":2115},"to":{"krate":0,"index":433}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":132665,"byte_end":132670,"line_start":70,"line_end":70,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":435}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":132673,"byte_end":132676,"line_start":70,"line_end":70,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":2120},"to":{"krate":0,"index":435}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133822,"byte_end":133827,"line_start":104,"line_end":104,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":438}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":133830,"byte_end":133833,"line_start":104,"line_end":104,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":2181},"to":{"krate":0,"index":438}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135228,"byte_end":135233,"line_start":139,"line_end":139,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":440}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":135236,"byte_end":135239,"line_start":139,"line_end":139,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":2187},"to":{"krate":0,"index":440}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":136660,"byte_end":136668,"line_start":174,"line_end":174,"column_start":38,"column_end":46},"kind":{"Impl":{"id":510}},"from":{"krate":1,"index":14231},"to":{"krate":0,"index":431}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":136860,"byte_end":136868,"line_start":182,"line_end":182,"column_start":38,"column_end":46},"kind":{"Impl":{"id":511}},"from":{"krate":1,"index":14231},"to":{"krate":0,"index":433}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":137060,"byte_end":137068,"line_start":190,"line_end":190,"column_start":38,"column_end":46},"kind":{"Impl":{"id":512}},"from":{"krate":1,"index":14231},"to":{"krate":0,"index":435}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":137260,"byte_end":137268,"line_start":198,"line_end":198,"column_start":38,"column_end":46},"kind":{"Impl":{"id":513}},"from":{"krate":1,"index":14231},"to":{"krate":0,"index":438}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\ops\\wrapping.rs","byte_start":137466,"byte_end":137474,"line_start":206,"line_end":206,"column_start":38,"column_end":46},"kind":{"Impl":{"id":514}},"from":{"krate":1,"index":14231},"to":{"krate":0,"index":440}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":146689,"byte_end":146692,"line_start":15,"line_end":15,"column_start":17,"column_end":20},"kind":"SuperTrait","from":{"krate":0,"index":561},"to":{"krate":0,"index":481}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":146695,"byte_end":146699,"line_start":15,"line_end":15,"column_start":23,"column_end":27},"kind":"SuperTrait","from":{"krate":1,"index":2055},"to":{"krate":0,"index":481}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":146702,"byte_end":146709,"line_start":15,"line_end":15,"column_start":30,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":170},"to":{"krate":0,"index":481}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":146712,"byte_end":146722,"line_start":15,"line_end":15,"column_start":40,"column_end":50},"kind":"SuperTrait","from":{"krate":1,"index":1807},"to":{"krate":0,"index":481}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":146725,"byte_end":146728,"line_start":15,"line_end":15,"column_start":53,"column_end":56},"kind":"SuperTrait","from":{"krate":1,"index":2137},"to":{"krate":0,"index":481}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\real.rs","byte_start":166315,"byte_end":166316,"line_start":780,"line_end":780,"column_start":25,"column_end":26},"kind":{"Impl":{"id":685}},"from":{"krate":0,"index":530},"to":{"krate":0,"index":481}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":168364,"byte_end":168369,"line_start":8,"line_end":8,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":1,"index":2050},"to":{"krate":0,"index":536}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":168372,"byte_end":168375,"line_start":8,"line_end":8,"column_start":27,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":561},"to":{"krate":0,"index":536}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":168378,"byte_end":168381,"line_start":8,"line_end":8,"column_start":33,"column_end":36},"kind":"SuperTrait","from":{"krate":1,"index":2137},"to":{"krate":0,"index":536}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":170452,"byte_end":170460,"line_start":80,"line_end":80,"column_start":28,"column_end":36},"kind":{"Impl":{"id":692}},"from":{"krate":1,"index":14231},"to":{"krate":0,"index":536}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":173580,"byte_end":173583,"line_start":197,"line_end":197,"column_start":21,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":561},"to":{"krate":0,"index":557}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\sign.rs","byte_start":173840,"byte_end":173848,"line_start":209,"line_end":209,"column_start":32,"column_end":40},"kind":{"Impl":{"id":701}},"from":{"krate":1,"index":14231},"to":{"krate":0,"index":557}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1987,"byte_end":1996,"line_start":62,"line_end":62,"column_start":16,"column_end":25},"kind":"SuperTrait","from":{"krate":1,"index":1770},"to":{"krate":0,"index":561}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":1999,"byte_end":2003,"line_start":62,"line_end":62,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":293},"to":{"krate":0,"index":561}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2006,"byte_end":2009,"line_start":62,"line_end":62,"column_start":35,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":303},"to":{"krate":0,"index":561}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2012,"byte_end":2018,"line_start":62,"line_end":62,"column_start":41,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":564},"to":{"krate":0,"index":561}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2678,"byte_end":2681,"line_start":85,"line_end":85,"column_start":5,"column_end":8},"kind":"SuperTrait","from":{"krate":1,"index":2110},"to":{"krate":0,"index":564}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2710,"byte_end":2713,"line_start":86,"line_end":86,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2115},"to":{"krate":0,"index":564}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2742,"byte_end":2745,"line_start":87,"line_end":87,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2120},"to":{"krate":0,"index":564}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2774,"byte_end":2777,"line_start":88,"line_end":88,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2125},"to":{"krate":0,"index":564}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2806,"byte_end":2809,"line_start":89,"line_end":89,"column_start":7,"column_end":10},"kind":"SuperTrait","from":{"krate":1,"index":2131},"to":{"krate":0,"index":564}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":2882,"byte_end":2883,"line_start":93,"line_end":93,"column_start":46,"column_end":47},"kind":{"Impl":{"id":702}},"from":{"krate":0,"index":568},"to":{"krate":0,"index":564}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3287,"byte_end":3290,"line_start":106,"line_end":106,"column_start":19,"column_end":22},"kind":"SuperTrait","from":{"krate":0,"index":561},"to":{"krate":0,"index":571}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3301,"byte_end":3307,"line_start":106,"line_end":106,"column_start":33,"column_end":39},"kind":"SuperTrait","from":{"krate":0,"index":564},"to":{"krate":0,"index":571}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3340,"byte_end":3341,"line_start":107,"line_end":107,"column_start":20,"column_end":21},"kind":{"Impl":{"id":703}},"from":{"krate":0,"index":574},"to":{"krate":0,"index":571}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3618,"byte_end":3624,"line_start":113,"line_end":113,"column_start":25,"column_end":31},"kind":"SuperTrait","from":{"krate":0,"index":564},"to":{"krate":0,"index":576}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3647,"byte_end":3653,"line_start":113,"line_end":113,"column_start":54,"column_end":60},"kind":"SuperTrait","from":{"krate":0,"index":564},"to":{"krate":0,"index":576}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3704,"byte_end":3705,"line_start":114,"line_end":114,"column_start":32,"column_end":33},"kind":{"Impl":{"id":704}},"from":{"krate":0,"index":580},"to":{"krate":0,"index":576}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3973,"byte_end":3982,"line_start":120,"line_end":120,"column_start":5,"column_end":14},"kind":"SuperTrait","from":{"krate":1,"index":2141},"to":{"krate":0,"index":583}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":3990,"byte_end":3999,"line_start":120,"line_end":120,"column_start":22,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":2145},"to":{"krate":0,"index":583}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4007,"byte_end":4016,"line_start":120,"line_end":120,"column_start":39,"column_end":48},"kind":"SuperTrait","from":{"krate":1,"index":2149},"to":{"krate":0,"index":583}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4024,"byte_end":4033,"line_start":120,"line_end":120,"column_start":56,"column_end":65},"kind":"SuperTrait","from":{"krate":1,"index":2153},"to":{"krate":0,"index":583}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4041,"byte_end":4050,"line_start":120,"line_end":120,"column_start":73,"column_end":82},"kind":"SuperTrait","from":{"krate":1,"index":2157},"to":{"krate":0,"index":583}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4096,"byte_end":4097,"line_start":124,"line_end":124,"column_start":36,"column_end":37},"kind":{"Impl":{"id":705}},"from":{"krate":0,"index":586},"to":{"krate":0,"index":583}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4376,"byte_end":4379,"line_start":132,"line_end":132,"column_start":22,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":561},"to":{"krate":0,"index":588}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4382,"byte_end":4394,"line_start":132,"line_end":132,"column_start":28,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":583},"to":{"krate":0,"index":588}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4420,"byte_end":4421,"line_start":133,"line_end":133,"column_start":23,"column_end":24},"kind":{"Impl":{"id":706}},"from":{"krate":0,"index":590},"to":{"krate":0,"index":588}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4684,"byte_end":4693,"line_start":139,"line_end":139,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":588},"to":{"krate":0,"index":591}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4704,"byte_end":4716,"line_start":139,"line_end":139,"column_start":45,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":583},"to":{"krate":0,"index":591}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":4755,"byte_end":4756,"line_start":140,"line_end":140,"column_start":26,"column_end":27},"kind":{"Impl":{"id":707}},"from":{"krate":0,"index":594},"to":{"krate":0,"index":591}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":5355,"byte_end":5363,"line_start":159,"line_end":159,"column_start":22,"column_end":30},"kind":{"Impl":{"id":720}},"from":{"krate":1,"index":14231},"to":{"krate":0,"index":561}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\num-traits-0.2.8\\src\\lib.rs","byte_start":6053,"byte_end":6068,"line_start":185,"line_end":185,"column_start":23,"column_end":38},"kind":{"Impl":{"id":721}},"from":{"krate":0,"index":4350},"to":{"krate":1,"index":6611}}]}