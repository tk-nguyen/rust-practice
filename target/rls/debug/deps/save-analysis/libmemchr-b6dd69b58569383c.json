{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0","program":"/home/thainguyen/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","memchr","/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"use_std\"","-C","metadata=b6dd69b58569383c","-C","extra-filename=-b6dd69b58569383c","--out-dir","/home/thainguyen/work/rust/rust-practice/target/rls/debug/deps","-L","dependency=/home/thainguyen/work/rust/rust-practice/target/rls/debug/deps","--cap-lints","allow","--cfg","memchr_runtime_simd","--cfg","memchr_runtime_sse2","--cfg","memchr_runtime_sse42","--cfg","memchr_runtime_avx","--error-format=json","--sysroot","/home/thainguyen/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/thainguyen/work/rust/rust-practice/target/rls/debug/deps/libmemchr-b6dd69b58569383c.rmeta"},"prelude":{"crate_id":{"name":"memchr","disambiguator":[12182826232726098069,7003226356776691304]},"crate_root":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src","external_crates":[{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3329901521826220148,8779651902869174066]}},{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11533795067257537051,6600409280955634707]}},{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12614123221401343543,9564301585503608515]}},{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1785005413158388284,2453622026203223019]}},{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12957079427417428001,17718260667887668647]}},{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10214993728156300765,14618204673916620187]}},{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12453517098623888364,4709794086161820998]}},{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12634510118091288440,7983944581587655387]}},{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14017342134866723280,9256858969587329629]}},{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7061025862014072460,14171357653989770935]}},{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[2285728033677722481,16182084057206383065]}},{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[7305883247437987566,266452839079745451]}},{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[13956229687295891598,15294992126055156716]}},{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[931598532372339641,10024719927090962737]}},{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[11150552510595322945,15608256962932530162]}},{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[4217706585212656622,592289864015908737]}},{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[2229008352226773351,3496425060661471051]}}],"span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":0,"byte_end":8927,"line_start":1,"line_end":312,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":51},"span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":1630,"byte_end":1636,"line_start":42,"line_end":42,"column_start":16,"column_end":22},"alias_span":null,"name":"Memchr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":67},"span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":1638,"byte_end":1645,"line_start":42,"line_end":42,"column_start":24,"column_end":31},"alias_span":null,"name":"Memchr2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":84},"span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":1647,"byte_end":1654,"line_start":42,"line_end":42,"column_start":33,"column_end":40},"alias_span":null,"name":"Memchr3","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":0,"byte_end":8927,"line_start":1,"line_end":312,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":41},{"krate":0,"index":102},{"krate":0,"index":115},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":187},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":195}],"decl_id":null,"docs":"The `memchr` crate provides heavily optimized routines for searching bytes.","sig":null,"attributes":[{"value":"*\nThe `memchr` crate provides heavily optimized routines for searching bytes.\n\nThe `memchr` function is traditionally provided by libc, however, the\nperformance of `memchr` can vary significantly depending on the specific\nimplementation of libc that is used. They can range from manually tuned\nAssembly implementations (like that found in GNU's libc) all the way to\nnon-vectorized C implementations (like that found in MUSL).\n\nTo smooth out the differences between implementations of libc, at least\non `x86_64` for Rust 1.27+, this crate provides its own implementation of\n`memchr` that should perform competitively with the one found in GNU's libc.\nThe implementation is in pure Rust and has no dependency on a C compiler or an\nAssembler.\n\nAdditionally, GNU libc also provides an extension, `memrchr`. This crate\nprovides its own implementation of `memrchr` as well, on top of `memchr2`,\n`memchr3`, `memrchr2` and `memrchr3`. The difference between `memchr` and\n`memchr2` is that that `memchr2` permits finding all occurrences of two bytes\ninstead of one. Similarly for `memchr3`.\n*/","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":0,"byte_end":1086,"line_start":1,"line_end":21,"column_start":1,"column_end":3}},{"value":"deny(missing_docs)","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":1136,"byte_end":1158,"line_start":25,"line_end":25,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":51},"span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/iter.rs","byte_start":21824,"byte_end":21830,"line_start":34,"line_end":34,"column_start":12,"column_end":18},"name":"Memchr","qualname":"::iter::Memchr","value":"Memchr {  }","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55}],"decl_id":null,"docs":" An iterator for `memchr`.\n","sig":null,"attributes":[{"value":"/ An iterator for `memchr`.","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/iter.rs","byte_start":21783,"byte_end":21812,"line_start":33,"line_end":33,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/iter.rs","byte_start":22081,"byte_end":22084,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Memchr>::new","value":"pub fn new(u8, &[u8]) -> Memchr","parent":null,"children":[],"decl_id":null,"docs":" Creates a new iterator that yields all positions of needle in haystack.\n","sig":null,"attributes":[{"value":"/ Creates a new iterator that yields all positions of needle in haystack.","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/iter.rs","byte_start":21980,"byte_end":22055,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/iter.rs","byte_start":22060,"byte_end":22069,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":67},"span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/iter.rs","byte_start":22774,"byte_end":22781,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"Memchr2","qualname":"::iter::Memchr2","value":"Memchr2 {  }","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72}],"decl_id":null,"docs":" An iterator for `memchr2`.\n","sig":null,"attributes":[{"value":"/ An iterator for `memchr2`.","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/iter.rs","byte_start":22732,"byte_end":22762,"line_start":75,"line_end":75,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/iter.rs","byte_start":23051,"byte_end":23054,"line_start":88,"line_end":88,"column_start":12,"column_end":15},"name":"new","qualname":"<Memchr2>::new","value":"pub fn new(u8, u8, &[u8]) -> Memchr2","parent":null,"children":[],"decl_id":null,"docs":" Creates a new iterator that yields all positions of needle in haystack.\n","sig":null,"attributes":[{"value":"/ Creates a new iterator that yields all positions of needle in haystack.","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/iter.rs","byte_start":22950,"byte_end":23025,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/iter.rs","byte_start":23030,"byte_end":23039,"line_start":87,"line_end":87,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":84},"span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/iter.rs","byte_start":23860,"byte_end":23867,"line_start":123,"line_end":123,"column_start":12,"column_end":19},"name":"Memchr3","qualname":"::iter::Memchr3","value":"Memchr3 {  }","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90}],"decl_id":null,"docs":" An iterator for `memchr3`.\n","sig":null,"attributes":[{"value":"/ An iterator for `memchr3`.","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/iter.rs","byte_start":23818,"byte_end":23848,"line_start":122,"line_end":122,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/iter.rs","byte_start":24148,"byte_end":24151,"line_start":136,"line_end":136,"column_start":12,"column_end":15},"name":"new","qualname":"<Memchr3>::new","value":"pub fn new(u8, u8, u8, &[u8]) -> Memchr3","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Memchr3` that's initialized to zero with a haystack\n","sig":null,"attributes":[{"value":"/ Create a new `Memchr3` that's initialized to zero with a haystack","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/iter.rs","byte_start":24053,"byte_end":24122,"line_start":134,"line_end":134,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/iter.rs","byte_start":24127,"byte_end":24136,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":179},"span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":1982,"byte_end":1993,"line_start":58,"line_end":58,"column_start":8,"column_end":19},"name":"memchr_iter","qualname":"::memchr_iter","value":"pub fn memchr_iter(u8, &[u8]) -> Memchr","parent":null,"children":[],"decl_id":null,"docs":" An iterator over all occurrences of the needle in a haystack.\n","sig":null,"attributes":[{"value":"/ An iterator over all occurrences of the needle in a haystack.","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":1899,"byte_end":1964,"line_start":56,"line_end":56,"column_start":1,"column_end":66}},{"value":"inline","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":1965,"byte_end":1974,"line_start":57,"line_end":57,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":180},"span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":2156,"byte_end":2168,"line_start":64,"line_end":64,"column_start":8,"column_end":20},"name":"memchr2_iter","qualname":"::memchr2_iter","value":"pub fn memchr2_iter(u8, u8, &[u8]) -> Memchr2","parent":null,"children":[],"decl_id":null,"docs":" An iterator over all occurrences of the needles in a haystack.\n","sig":null,"attributes":[{"value":"/ An iterator over all occurrences of the needles in a haystack.","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":2072,"byte_end":2138,"line_start":62,"line_end":62,"column_start":1,"column_end":67}},{"value":"inline","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":2139,"byte_end":2148,"line_start":63,"line_end":63,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":181},"span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":2372,"byte_end":2384,"line_start":74,"line_end":74,"column_start":8,"column_end":20},"name":"memchr3_iter","qualname":"::memchr3_iter","value":"pub fn memchr3_iter(u8, u8, u8, &[u8]) -> Memchr3","parent":null,"children":[],"decl_id":null,"docs":" An iterator over all occurrences of the needles in a haystack.\n","sig":null,"attributes":[{"value":"/ An iterator over all occurrences of the needles in a haystack.","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":2288,"byte_end":2354,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"inline","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":2355,"byte_end":2364,"line_start":73,"line_end":73,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":182},"span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":2625,"byte_end":2637,"line_start":85,"line_end":85,"column_start":8,"column_end":20},"name":"memrchr_iter","qualname":"::memrchr_iter","value":"pub fn memrchr_iter(u8, &[u8]) -> Rev<Memchr>","parent":null,"children":[],"decl_id":null,"docs":" An iterator over all occurrences of the needle in a haystack, in reverse.\n","sig":null,"attributes":[{"value":"/ An iterator over all occurrences of the needle in a haystack, in reverse.","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":2530,"byte_end":2607,"line_start":83,"line_end":83,"column_start":1,"column_end":78}},{"value":"inline","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":2608,"byte_end":2617,"line_start":84,"line_end":84,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":183},"span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":2823,"byte_end":2836,"line_start":91,"line_end":91,"column_start":8,"column_end":21},"name":"memrchr2_iter","qualname":"::memrchr2_iter","value":"pub fn memrchr2_iter(u8, u8, &[u8]) -> Rev<Memchr2>","parent":null,"children":[],"decl_id":null,"docs":" An iterator over all occurrences of the needles in a haystack, in reverse.\n","sig":null,"attributes":[{"value":"/ An iterator over all occurrences of the needles in a haystack, in reverse.","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":2727,"byte_end":2805,"line_start":89,"line_end":89,"column_start":1,"column_end":79}},{"value":"inline","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":2806,"byte_end":2815,"line_start":90,"line_end":90,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":184},"span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":3063,"byte_end":3076,"line_start":101,"line_end":101,"column_start":8,"column_end":21},"name":"memrchr3_iter","qualname":"::memrchr3_iter","value":"pub fn memrchr3_iter(u8, u8, u8, &[u8]) -> Rev<Memchr3>","parent":null,"children":[],"decl_id":null,"docs":" An iterator over all occurrences of the needles in a haystack, in reverse.\n","sig":null,"attributes":[{"value":"/ An iterator over all occurrences of the needles in a haystack, in reverse.","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":2967,"byte_end":3045,"line_start":99,"line_end":99,"column_start":1,"column_end":79}},{"value":"inline","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":3046,"byte_end":3055,"line_start":100,"line_end":100,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":185},"span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":3903,"byte_end":3909,"line_start":131,"line_end":131,"column_start":8,"column_end":14},"name":"memchr","qualname":"::memchr","value":"pub fn memchr(u8, &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Search for the first occurrence of a byte in a slice.","sig":null,"attributes":[{"value":"/ Search for the first occurrence of a byte in a slice.","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":3233,"byte_end":3290,"line_start":110,"line_end":110,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":3291,"byte_end":3294,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ This returns the index corresponding to the first occurrence of `needle` in","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":3295,"byte_end":3374,"line_start":112,"line_end":112,"column_start":1,"column_end":80}},{"value":"/ `haystack`, or `None` if one is not found.","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":3375,"byte_end":3421,"line_start":113,"line_end":113,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":3422,"byte_end":3425,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ While this is operationally the same as something like","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":3426,"byte_end":3484,"line_start":115,"line_end":115,"column_start":1,"column_end":59}},{"value":"/ `haystack.iter().position(|&b| b == needle)`, `memchr` will use a highly","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":3485,"byte_end":3561,"line_start":116,"line_end":116,"column_start":1,"column_end":77}},{"value":"/ optimized routine that can be up to an order of magnitude faster in some","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":3562,"byte_end":3638,"line_start":117,"line_end":117,"column_start":1,"column_end":77}},{"value":"/ cases.","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":3639,"byte_end":3649,"line_start":118,"line_end":118,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":3650,"byte_end":3653,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":3654,"byte_end":3667,"line_start":120,"line_end":120,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":3668,"byte_end":3671,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ This shows how to find the first position of a byte in a byte string.","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":3672,"byte_end":3745,"line_start":122,"line_end":122,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":3746,"byte_end":3749,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":3750,"byte_end":3757,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ use memchr::memchr;","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":3758,"byte_end":3781,"line_start":125,"line_end":125,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":3782,"byte_end":3785,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ let haystack = b\"the quick brown fox\";","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":3786,"byte_end":3828,"line_start":127,"line_end":127,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(memchr(b'k', haystack), Some(8));","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":3829,"byte_end":3877,"line_start":128,"line_end":128,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":3878,"byte_end":3885,"line_start":129,"line_end":129,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":3886,"byte_end":3895,"line_start":130,"line_end":130,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":187},"span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":4766,"byte_end":4773,"line_start":165,"line_end":165,"column_start":8,"column_end":15},"name":"memchr2","qualname":"::memchr2","value":"pub fn memchr2(u8, u8, &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Like `memchr`, but searches for two bytes instead of one.\n","sig":null,"attributes":[{"value":"/ Like `memchr`, but searches for two bytes instead of one.","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":4687,"byte_end":4748,"line_start":163,"line_end":163,"column_start":1,"column_end":62}},{"value":"inline","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":4749,"byte_end":4758,"line_start":164,"line_end":164,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":189},"span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":5415,"byte_end":5422,"line_start":187,"line_end":187,"column_start":8,"column_end":15},"name":"memchr3","qualname":"::memchr3","value":"pub fn memchr3(u8, u8, u8, &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Like `memchr`, but searches for three bytes instead of one.\n","sig":null,"attributes":[{"value":"/ Like `memchr`, but searches for three bytes instead of one.","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":5334,"byte_end":5397,"line_start":185,"line_end":185,"column_start":1,"column_end":64}},{"value":"inline","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":5398,"byte_end":5407,"line_start":186,"line_end":186,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":191},"span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":6720,"byte_end":6727,"line_start":233,"line_end":233,"column_start":8,"column_end":15},"name":"memrchr","qualname":"::memrchr","value":"pub fn memrchr(u8, &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Search for the last occurrence of a byte in a slice.","sig":null,"attributes":[{"value":"/ Search for the last occurrence of a byte in a slice.","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":6048,"byte_end":6104,"line_start":212,"line_end":212,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":6105,"byte_end":6108,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ This returns the index corresponding to the last occurrence of `needle` in","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":6109,"byte_end":6187,"line_start":214,"line_end":214,"column_start":1,"column_end":79}},{"value":"/ `haystack`, or `None` if one is not found.","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":6188,"byte_end":6234,"line_start":215,"line_end":215,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":6235,"byte_end":6238,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ While this is operationally the same as something like","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":6239,"byte_end":6297,"line_start":217,"line_end":217,"column_start":1,"column_end":59}},{"value":"/ `haystack.iter().rposition(|&b| b == needle)`, `memrchr` will use a highly","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":6298,"byte_end":6376,"line_start":218,"line_end":218,"column_start":1,"column_end":79}},{"value":"/ optimized routine that can be up to an order of magnitude faster in some","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":6377,"byte_end":6453,"line_start":219,"line_end":219,"column_start":1,"column_end":77}},{"value":"/ cases.","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":6454,"byte_end":6464,"line_start":220,"line_end":220,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":6465,"byte_end":6468,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":6469,"byte_end":6482,"line_start":222,"line_end":222,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":6483,"byte_end":6486,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ This shows how to find the last position of a byte in a byte string.","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":6487,"byte_end":6559,"line_start":224,"line_end":224,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":6560,"byte_end":6563,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":6564,"byte_end":6571,"line_start":226,"line_end":226,"column_start":1,"column_end":8}},{"value":"/ use memchr::memrchr;","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":6572,"byte_end":6596,"line_start":227,"line_end":227,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":6597,"byte_end":6600,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ let haystack = b\"the quick brown fox\";","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":6601,"byte_end":6643,"line_start":229,"line_end":229,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(memrchr(b'o', haystack), Some(17));","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":6644,"byte_end":6694,"line_start":230,"line_end":230,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":6695,"byte_end":6702,"line_start":231,"line_end":231,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":6703,"byte_end":6712,"line_start":232,"line_end":232,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":193},"span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":7640,"byte_end":7648,"line_start":267,"line_end":267,"column_start":8,"column_end":16},"name":"memrchr2","qualname":"::memrchr2","value":"pub fn memrchr2(u8, u8, &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Like `memrchr`, but searches for two bytes instead of one.\n","sig":null,"attributes":[{"value":"/ Like `memrchr`, but searches for two bytes instead of one.","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":7560,"byte_end":7622,"line_start":265,"line_end":265,"column_start":1,"column_end":63}},{"value":"inline","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":7623,"byte_end":7632,"line_start":266,"line_end":266,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":195},"span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":8293,"byte_end":8301,"line_start":289,"line_end":289,"column_start":8,"column_end":16},"name":"memrchr3","qualname":"::memrchr3","value":"pub fn memrchr3(u8, u8, u8, &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Like `memrchr`, but searches for three bytes instead of one.\n","sig":null,"attributes":[{"value":"/ Like `memrchr`, but searches for three bytes instead of one.","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":8211,"byte_end":8275,"line_start":287,"line_end":287,"column_start":1,"column_end":65}},{"value":"inline","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/lib.rs","byte_start":8276,"byte_end":8285,"line_start":288,"line_end":288,"column_start":1,"column_end":10}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/iter.rs","byte_start":21963,"byte_end":21969,"line_start":42,"line_end":42,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/iter.rs","byte_start":22269,"byte_end":22275,"line_start":54,"line_end":54,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/iter.rs","byte_start":22577,"byte_end":22583,"line_start":68,"line_end":68,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/iter.rs","byte_start":22932,"byte_end":22939,"line_start":85,"line_end":85,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/iter.rs","byte_start":23287,"byte_end":23294,"line_start":98,"line_end":98,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/iter.rs","byte_start":23612,"byte_end":23619,"line_start":112,"line_end":112,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/iter.rs","byte_start":24035,"byte_end":24042,"line_start":133,"line_end":133,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/iter.rs","byte_start":24466,"byte_end":24473,"line_start":152,"line_end":152,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/iter.rs","byte_start":24839,"byte_end":24846,"line_start":169,"line_end":169,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/iter.rs","byte_start":21963,"byte_end":21969,"line_start":42,"line_end":42,"column_start":10,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":51},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/iter.rs","byte_start":22269,"byte_end":22275,"line_start":54,"line_end":54,"column_start":23,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/iter.rs","byte_start":22577,"byte_end":22583,"line_start":68,"line_end":68,"column_start":34,"column_end":40},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":51},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/iter.rs","byte_start":22932,"byte_end":22939,"line_start":85,"line_end":85,"column_start":10,"column_end":17},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":67},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/iter.rs","byte_start":23287,"byte_end":23294,"line_start":98,"line_end":98,"column_start":23,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":67},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/iter.rs","byte_start":23612,"byte_end":23619,"line_start":112,"line_end":112,"column_start":34,"column_end":41},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":67},"to":{"krate":2,"index":5233}},{"span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/iter.rs","byte_start":24035,"byte_end":24042,"line_start":133,"line_end":133,"column_start":10,"column_end":17},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":84},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/iter.rs","byte_start":24466,"byte_end":24473,"line_start":152,"line_end":152,"column_start":23,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":84},"to":{"krate":2,"index":5304}},{"span":{"file_name":"/home/thainguyen/.cargo/registry/src/github.com-1ecc6299db9ec823/memchr-2.2.0/src/iter.rs","byte_start":24839,"byte_end":24846,"line_start":169,"line_end":169,"column_start":34,"column_end":41},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":84},"to":{"krate":2,"index":5233}}]}