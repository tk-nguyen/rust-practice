{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8","program":"C:\\Users\\Thai Nguyen\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","ryu","C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=f6aeefeff99e2d7e","-C","extra-filename=-f6aeefeff99e2d7e","--out-dir","c:\\Cygwin\\home\\Thai Nguyen\\rust\\rustlings\\target\\rls\\debug\\deps","-L","dependency=c:\\Cygwin\\home\\Thai Nguyen\\rust\\rustlings\\target\\rls\\debug\\deps","--cap-lints","allow","--cfg","integer128","--cfg","must_use_return","--error-format=json","--sysroot","C:\\Users\\Thai Nguyen\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Cygwin\\home\\Thai Nguyen\\rust\\rustlings\\target\\rls\\debug\\deps\\libryu-f6aeefeff99e2d7e.rmeta"},"prelude":{"crate_id":{"name":"ryu","disambiguator":[16366176591907296904,12476926528518932761]},"crate_root":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src","external_crates":[{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[1322159461575500717,8297198428669169011]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[2376346800744392852,12342541482992122530]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[14946502858004023242,6637215598610016319]}}],"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":0,"byte_end":4306,"line_start":1,"line_end":126,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":4004,"byte_end":4010,"line_start":118,"line_end":118,"column_start":18,"column_end":24},"alias_span":null,"name":"Buffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":16},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":4012,"byte_end":4017,"line_start":118,"line_end":118,"column_start":26,"column_end":31},"alias_span":null,"name":"Float","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":4134,"byte_end":4148,"line_start":122,"line_end":122,"column_start":18,"column_end":32},"alias_span":null,"name":"d2s_buffered_n","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":4167,"byte_end":4181,"line_start":123,"line_end":123,"column_start":18,"column_end":32},"alias_span":null,"name":"f2s_buffered_n","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":4203,"byte_end":4217,"line_start":124,"line_end":124,"column_start":21,"column_end":35},"alias_span":null,"name":"pretty_d2s_buffered_n","value":"","parent":{"krate":0,"index":122}},{"kind":"Use","ref_id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":4264,"byte_end":4278,"line_start":125,"line_end":125,"column_start":21,"column_end":35},"alias_span":null,"name":"pretty_f2s_buffered_n","value":"","parent":{"krate":0,"index":122}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":0,"byte_end":4306,"line_start":1,"line_end":126,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":25},{"krate":0,"index":31},{"krate":0,"index":56},{"krate":0,"index":61},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":97},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122}],"decl_id":null,"docs":" Pure Rust implementation of Ry큰, an algorithm to quickly convert floating\n point numbers to decimal strings.","sig":null,"attributes":[{"value":"/ Pure Rust implementation of Ry큰, an algorithm to quickly convert floating","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":0,"byte_end":78,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ point numbers to decimal strings.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":79,"byte_end":116,"line_start":2,"line_end":2,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":117,"byte_end":120,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ The PLDI'18 paper [*Ry큰: fast float-to-string conversion*][paper] by Ulf","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":121,"byte_end":198,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/ Adams includes a complete correctness proof of the algorithm. The paper is","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":199,"byte_end":277,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ available under the creative commons CC-BY-SA license.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":278,"byte_end":336,"line_start":6,"line_end":6,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":337,"byte_end":340,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This Rust implementation is a line-by-line port of Ulf Adams' implementation","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":341,"byte_end":421,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/ in C, [https://github.com/ulfjack/ryu][upstream]. The [`ryu::raw`][raw]","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":422,"byte_end":497,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ module exposes exactly the API and formatting of the C implementation as","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":498,"byte_end":574,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ unsafe pure Rust functions. There is additionally a safe API as demonstrated","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":575,"byte_end":655,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ in the example code below. The safe API uses the same underlying Ry큰","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":656,"byte_end":729,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ algorithm but diverges from the formatting of the C implementation to","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":730,"byte_end":803,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/ produce more human-readable output, for example `0.3` rather than `3E-1`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":804,"byte_end":881,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":882,"byte_end":885,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [paper]: https://dl.acm.org/citation.cfm?id=3192369","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":886,"byte_end":941,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"/ [upstream]: https://github.com/ulfjack/ryu","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":942,"byte_end":988,"line_start":17,"line_end":17,"column_start":1,"column_end":47}},{"value":"/ [raw]: raw/index.html","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":989,"byte_end":1014,"line_start":18,"line_end":18,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":1015,"byte_end":1018,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":1019,"byte_end":1032,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":1033,"byte_end":1036,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":1037,"byte_end":1055,"line_start":22,"line_end":22,"column_start":1,"column_end":19}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":1056,"byte_end":1071,"line_start":23,"line_end":23,"column_start":1,"column_end":16}},{"value":"/     let mut buffer = ryu::Buffer::new();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":1072,"byte_end":1116,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/     let printed = buffer.format(1.234);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":1117,"byte_end":1160,"line_start":25,"line_end":25,"column_start":1,"column_end":44}},{"value":"/     assert_eq!(printed, \"1.234\");","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":1161,"byte_end":1198,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":1199,"byte_end":1204,"line_start":27,"line_end":27,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":1205,"byte_end":1212,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":1213,"byte_end":1216,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ## Performance","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":1217,"byte_end":1235,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":1236,"byte_end":1239,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ You can run upstream's benchmarks with:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":1240,"byte_end":1283,"line_start":32,"line_end":32,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":1284,"byte_end":1287,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```console","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":1288,"byte_end":1302,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/ $ git clone https://github.com/ulfjack/ryu c-ryu","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":1303,"byte_end":1355,"line_start":35,"line_end":35,"column_start":1,"column_end":53}},{"value":"/ $ cd c-ryu","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":1356,"byte_end":1370,"line_start":36,"line_end":36,"column_start":1,"column_end":15}},{"value":"/ $ bazel run -c opt //ryu/benchmark","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":1371,"byte_end":1409,"line_start":37,"line_end":37,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":1410,"byte_end":1417,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":1418,"byte_end":1421,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ And the same benchmark against our implementation with:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":1422,"byte_end":1481,"line_start":40,"line_end":40,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":1482,"byte_end":1485,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ```console","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":1486,"byte_end":1500,"line_start":42,"line_end":42,"column_start":1,"column_end":15}},{"value":"/ $ git clone https://github.com/dtolnay/ryu rust-ryu","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":1501,"byte_end":1556,"line_start":43,"line_end":43,"column_start":1,"column_end":56}},{"value":"/ $ cd rust-ryu","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":1557,"byte_end":1574,"line_start":44,"line_end":44,"column_start":1,"column_end":18}},{"value":"/ $ cargo run --example upstream_benchmark --release","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":1575,"byte_end":1629,"line_start":45,"line_end":45,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":1630,"byte_end":1637,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":1638,"byte_end":1641,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ These benchmarks measure the average time to print a 32-bit float and average","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":1642,"byte_end":1723,"line_start":48,"line_end":48,"column_start":1,"column_end":82}},{"value":"/ time to print a 64-bit float, where the inputs are distributed as uniform random","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":1724,"byte_end":1808,"line_start":49,"line_end":49,"column_start":1,"column_end":85}},{"value":"/ bit patterns 32 and 64 bits wide.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":1809,"byte_end":1846,"line_start":50,"line_end":50,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":1847,"byte_end":1850,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ The upstream C code, the unsafe direct Rust port, and the safe pretty Rust API","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":1851,"byte_end":1933,"line_start":52,"line_end":52,"column_start":1,"column_end":83}},{"value":"/ all perform the same, taking around 21 nanoseconds to format a 32-bit float and","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":1934,"byte_end":2017,"line_start":53,"line_end":53,"column_start":1,"column_end":84}},{"value":"/ 31 nanoseconds to format a 64-bit float.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":2018,"byte_end":2062,"line_start":54,"line_end":54,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":2063,"byte_end":2066,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ There is also a Rust-specific benchmark comparing this implementation to the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":2067,"byte_end":2147,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ standard library which you can run with:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":2148,"byte_end":2192,"line_start":57,"line_end":57,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":2193,"byte_end":2196,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```console","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":2197,"byte_end":2211,"line_start":59,"line_end":59,"column_start":1,"column_end":15}},{"value":"/ $ cargo bench","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":2212,"byte_end":2229,"line_start":60,"line_end":60,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":2230,"byte_end":2237,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":2238,"byte_end":2241,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ The benchmark shows Ryu approximately 4-10x faster than the standard library","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":2242,"byte_end":2322,"line_start":63,"line_end":63,"column_start":1,"column_end":81}},{"value":"/ across a range of f32 and f64 inputs. Measurements are in nanoseconds per","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":2323,"byte_end":2400,"line_start":64,"line_end":64,"column_start":1,"column_end":78}},{"value":"/ iteration; smaller is better.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":2401,"byte_end":2434,"line_start":65,"line_end":65,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":2435,"byte_end":2438,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ | type=f32 | 0.0  | 0.1234 | 2.718281828459045 | f32::MAX |","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":2439,"byte_end":2502,"line_start":67,"line_end":67,"column_start":1,"column_end":64}},{"value":"/ |:--------:|:----:|:------:|:-----------------:|:--------:|","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":2503,"byte_end":2566,"line_start":68,"line_end":68,"column_start":1,"column_end":64}},{"value":"/ | RYU      | 3ns  | 28ns   | 23ns              | 22ns     |","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":2567,"byte_end":2630,"line_start":69,"line_end":69,"column_start":1,"column_end":64}},{"value":"/ | STD      | 40ns | 106ns  | 128ns             | 110ns    |","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":2631,"byte_end":2694,"line_start":70,"line_end":70,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":2695,"byte_end":2698,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ | type=f64 | 0.0  | 0.1234 | 2.718281828459045 | f64::MAX |","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":2699,"byte_end":2762,"line_start":72,"line_end":72,"column_start":1,"column_end":64}},{"value":"/ |:--------:|:----:|:------:|:-----------------:|:--------:|","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":2763,"byte_end":2826,"line_start":73,"line_end":73,"column_start":1,"column_end":64}},{"value":"/ | RYU      | 3ns  | 50ns   | 35ns              | 32ns     |","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":2827,"byte_end":2890,"line_start":74,"line_end":74,"column_start":1,"column_end":64}},{"value":"/ | STD      | 39ns | 105ns  | 128ns             | 202ns    |","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":2891,"byte_end":2954,"line_start":75,"line_end":75,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":2955,"byte_end":2958,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Formatting","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":2959,"byte_end":2976,"line_start":77,"line_end":77,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":2977,"byte_end":2980,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ This library tends to produce more human-readable output than the standard","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":2981,"byte_end":3059,"line_start":79,"line_end":79,"column_start":1,"column_end":79}},{"value":"/ library's to\\_string, which never uses scientific notation. Here are two","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":3060,"byte_end":3136,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ examples:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":3137,"byte_end":3150,"line_start":81,"line_end":81,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":3151,"byte_end":3154,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ - *ryu:* 1.23e40, *std:* 12300000000000000000000000000000000000000","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":3155,"byte_end":3225,"line_start":83,"line_end":83,"column_start":1,"column_end":71}},{"value":"/ - *ryu:* 1.23e-40, *std:* 0.000000000000000000000000000000000000000123","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":3226,"byte_end":3300,"line_start":84,"line_end":84,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":3301,"byte_end":3304,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ Both libraries print short decimals such as 0.0000123 without scientific","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":3305,"byte_end":3381,"line_start":86,"line_end":86,"column_start":1,"column_end":77}},{"value":"/ notation.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":3382,"byte_end":3395,"line_start":87,"line_end":87,"column_start":1,"column_end":14}},{"value":"no_std","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":3397,"byte_end":3407,"line_start":89,"line_end":89,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":4664,"byte_end":4670,"line_start":18,"line_end":18,"column_start":12,"column_end":18},"name":"Buffer","qualname":"::buffer::Buffer","value":"Buffer {  }","parent":null,"children":[{"krate":0,"index":128}],"decl_id":null,"docs":" Safe API for formatting floating point numbers to text.","sig":null,"attributes":[{"value":"/ Safe API for formatting floating point numbers to text.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":4405,"byte_end":4464,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":4465,"byte_end":4468,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":4469,"byte_end":4483,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":4484,"byte_end":4487,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":4488,"byte_end":4506,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"/ let mut buffer = ryu::Buffer::new();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":4507,"byte_end":4547,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"/ let printed = buffer.format(1.234);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":4548,"byte_end":4587,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(printed, \"1.234\");","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":4588,"byte_end":4621,"line_start":15,"line_end":15,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":4622,"byte_end":4629,"line_start":16,"line_end":16,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":11},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":4889,"byte_end":4892,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"new","qualname":"<Buffer>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" This is a cheap operation; you don't need to worry about reusing buffers\n for efficiency.\n","sig":null,"attributes":[{"value":"/ This is a cheap operation; you don't need to worry about reusing buffers","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":4715,"byte_end":4791,"line_start":23,"line_end":23,"column_start":5,"column_end":81}},{"value":"/ for efficiency.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":4796,"byte_end":4815,"line_start":24,"line_end":24,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":4820,"byte_end":4829,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":5888,"byte_end":5894,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"format","qualname":"<Buffer>::format","value":"pub fn format<F: Float>(&mut Self, F) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Print a floating point number into this buffer and return a reference to\n its string representation within the buffer.","sig":null,"attributes":[{"value":"/ Print a floating point number into this buffer and return a reference to","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":4995,"byte_end":5071,"line_start":33,"line_end":33,"column_start":5,"column_end":81}},{"value":"/ its string representation within the buffer.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":5076,"byte_end":5124,"line_start":34,"line_end":34,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":5129,"byte_end":5132,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Special cases","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":5137,"byte_end":5156,"line_start":36,"line_end":36,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":5161,"byte_end":5164,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ This function **does not** check for NaN or infinity. If the input","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":5169,"byte_end":5239,"line_start":38,"line_end":38,"column_start":5,"column_end":75}},{"value":"/ number is not a finite float, the printed representation will be some","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":5244,"byte_end":5317,"line_start":39,"line_end":39,"column_start":5,"column_end":78}},{"value":"/ correctly formatted but unspecified numerical value.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":5322,"byte_end":5378,"line_start":40,"line_end":40,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":5383,"byte_end":5386,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ Please check [`is_finite`] yourself before calling this function, or","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":5391,"byte_end":5463,"line_start":42,"line_end":42,"column_start":5,"column_end":77}},{"value":"/ check [`is_nan`] and [`is_infinite`] and handle those cases yourself.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":5468,"byte_end":5541,"line_start":43,"line_end":43,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":5546,"byte_end":5549,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ [`is_finite`]: https://doc.rust-lang.org/std/primitive.f64.html#method.is_finite","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":5554,"byte_end":5638,"line_start":45,"line_end":45,"column_start":5,"column_end":89}},{"value":"/ [`is_nan`]: https://doc.rust-lang.org/std/primitive.f64.html#method.is_nan","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":5643,"byte_end":5721,"line_start":46,"line_end":46,"column_start":5,"column_end":83}},{"value":"/ [`is_infinite`]: https://doc.rust-lang.org/std/primitive.f64.html#method.is_infinite","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":5726,"byte_end":5814,"line_start":47,"line_end":47,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":5819,"byte_end":5828,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":16},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":6541,"byte_end":6546,"line_start":73,"line_end":73,"column_start":11,"column_end":16},"name":"Float","qualname":"::buffer::Float","value":"Float: Sealed","parent":null,"children":[{"krate":0,"index":17}],"decl_id":null,"docs":" A floating point number, f32 or f64, that can be written into a\n [`ryu::Buffer`][Buffer].","sig":null,"attributes":[{"value":"/ A floating point number, f32 or f64, that can be written into a","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":6337,"byte_end":6404,"line_start":68,"line_end":68,"column_start":1,"column_end":68}},{"value":"/ [`ryu::Buffer`][Buffer].","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":6405,"byte_end":6433,"line_start":69,"line_end":69,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":6434,"byte_end":6437,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and cannot be implemented for types outside of the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":6438,"byte_end":6513,"line_start":71,"line_end":71,"column_start":1,"column_end":76}},{"value":"/ `ryu` crate.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":6514,"byte_end":6530,"line_start":72,"line_end":72,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":6613,"byte_end":6632,"line_start":76,"line_end":76,"column_start":15,"column_end":34},"name":"write_to_ryu_buffer","qualname":"::buffer::Float::write_to_ryu_buffer","value":"pub unsafe fn write_to_ryu_buffer(Self, *mut u8) -> usize","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":7089,"byte_end":7095,"line_start":95,"line_end":95,"column_start":11,"column_end":17},"name":"Sealed","qualname":"::buffer::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\d2s.rs","byte_start":28142,"byte_end":28156,"line_start":563,"line_end":563,"column_start":15,"column_end":29},"name":"d2s_buffered_n","qualname":"::d2s::d2s_buffered_n","value":"pub unsafe fn d2s_buffered_n(f64, *mut u8) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Print f64 to the given buffer and return number of bytes written. Ry큰's\n original formatting.","sig":null,"attributes":[{"value":"/ Print f64 to the given buffer and return number of bytes written. Ry큰's","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\d2s.rs","byte_start":27292,"byte_end":27368,"line_start":534,"line_end":534,"column_start":1,"column_end":76}},{"value":"/ original formatting.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\d2s.rs","byte_start":27369,"byte_end":27393,"line_start":535,"line_end":535,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\d2s.rs","byte_start":27394,"byte_end":27397,"line_start":536,"line_end":536,"column_start":1,"column_end":4}},{"value":"/ At most 24 bytes will be written.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\d2s.rs","byte_start":27398,"byte_end":27435,"line_start":537,"line_end":537,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\d2s.rs","byte_start":27436,"byte_end":27439,"line_start":538,"line_end":538,"column_start":1,"column_end":4}},{"value":"/ ## Special cases","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\d2s.rs","byte_start":27440,"byte_end":27460,"line_start":539,"line_end":539,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\d2s.rs","byte_start":27461,"byte_end":27464,"line_start":540,"line_end":540,"column_start":1,"column_end":4}},{"value":"/ This function represents any NaN as `NaN`, positive infinity as `Infinity`,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\d2s.rs","byte_start":27465,"byte_end":27544,"line_start":541,"line_end":541,"column_start":1,"column_end":80}},{"value":"/ and negative infinity as `-Infinity`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\d2s.rs","byte_start":27545,"byte_end":27586,"line_start":542,"line_end":542,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\d2s.rs","byte_start":27587,"byte_end":27590,"line_start":543,"line_end":543,"column_start":1,"column_end":4}},{"value":"/ ## Safety","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\d2s.rs","byte_start":27591,"byte_end":27604,"line_start":544,"line_end":544,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\d2s.rs","byte_start":27605,"byte_end":27608,"line_start":545,"line_end":545,"column_start":1,"column_end":4}},{"value":"/ The `result` pointer argument must point to sufficiently many writable bytes","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\d2s.rs","byte_start":27609,"byte_end":27689,"line_start":546,"line_end":546,"column_start":1,"column_end":81}},{"value":"/ to hold Ry큰's representation of `f`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\d2s.rs","byte_start":27690,"byte_end":27731,"line_start":547,"line_end":547,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\d2s.rs","byte_start":27732,"byte_end":27735,"line_start":548,"line_end":548,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\d2s.rs","byte_start":27736,"byte_end":27750,"line_start":549,"line_end":549,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\d2s.rs","byte_start":27751,"byte_end":27754,"line_start":550,"line_end":550,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\d2s.rs","byte_start":27755,"byte_end":27773,"line_start":551,"line_end":551,"column_start":1,"column_end":19}},{"value":"/ let f = 1.234f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\d2s.rs","byte_start":27774,"byte_end":27795,"line_start":552,"line_end":552,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\d2s.rs","byte_start":27796,"byte_end":27799,"line_start":553,"line_end":553,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\d2s.rs","byte_start":27800,"byte_end":27812,"line_start":554,"line_end":554,"column_start":1,"column_end":13}},{"value":"/     let mut buffer: [u8; 24] = std::mem::uninitialized();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\d2s.rs","byte_start":27813,"byte_end":27874,"line_start":555,"line_end":555,"column_start":1,"column_end":62}},{"value":"/     let n = ryu::raw::d2s_buffered_n(f, &mut buffer[0]);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\d2s.rs","byte_start":27875,"byte_end":27935,"line_start":556,"line_end":556,"column_start":1,"column_end":61}},{"value":"/     let s = std::str::from_utf8_unchecked(&buffer[..n]);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\d2s.rs","byte_start":27936,"byte_end":27996,"line_start":557,"line_end":557,"column_start":1,"column_end":61}},{"value":"/     assert_eq!(s, \"1.234E0\");","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\d2s.rs","byte_start":27997,"byte_end":28030,"line_start":558,"line_end":558,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\d2s.rs","byte_start":28031,"byte_end":28036,"line_start":559,"line_end":559,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\d2s.rs","byte_start":28037,"byte_end":28044,"line_start":560,"line_end":560,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\d2s.rs","byte_start":28073,"byte_end":28081,"line_start":561,"line_end":561,"column_start":29,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\f2s.rs","byte_start":76978,"byte_end":76992,"line_start":475,"line_end":475,"column_start":15,"column_end":29},"name":"f2s_buffered_n","qualname":"::f2s::f2s_buffered_n","value":"pub unsafe fn f2s_buffered_n(f32, *mut u8) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Print f32 to the given buffer and return number of bytes written. Ry큰's\n original formatting.","sig":null,"attributes":[{"value":"/ Print f32 to the given buffer and return number of bytes written. Ry큰's","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\f2s.rs","byte_start":76128,"byte_end":76204,"line_start":446,"line_end":446,"column_start":1,"column_end":76}},{"value":"/ original formatting.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\f2s.rs","byte_start":76205,"byte_end":76229,"line_start":447,"line_end":447,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\f2s.rs","byte_start":76230,"byte_end":76233,"line_start":448,"line_end":448,"column_start":1,"column_end":4}},{"value":"/ At most 15 bytes will be written.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\f2s.rs","byte_start":76234,"byte_end":76271,"line_start":449,"line_end":449,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\f2s.rs","byte_start":76272,"byte_end":76275,"line_start":450,"line_end":450,"column_start":1,"column_end":4}},{"value":"/ ## Special cases","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\f2s.rs","byte_start":76276,"byte_end":76296,"line_start":451,"line_end":451,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\f2s.rs","byte_start":76297,"byte_end":76300,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/ This function represents any NaN as `NaN`, positive infinity as `Infinity`,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\f2s.rs","byte_start":76301,"byte_end":76380,"line_start":453,"line_end":453,"column_start":1,"column_end":80}},{"value":"/ and negative infinity as `-Infinity`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\f2s.rs","byte_start":76381,"byte_end":76422,"line_start":454,"line_end":454,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\f2s.rs","byte_start":76423,"byte_end":76426,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ ## Safety","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\f2s.rs","byte_start":76427,"byte_end":76440,"line_start":456,"line_end":456,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\f2s.rs","byte_start":76441,"byte_end":76444,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ The `result` pointer argument must point to sufficiently many writable bytes","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\f2s.rs","byte_start":76445,"byte_end":76525,"line_start":458,"line_end":458,"column_start":1,"column_end":81}},{"value":"/ to hold Ry큰's representation of `f`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\f2s.rs","byte_start":76526,"byte_end":76567,"line_start":459,"line_end":459,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\f2s.rs","byte_start":76568,"byte_end":76571,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\f2s.rs","byte_start":76572,"byte_end":76586,"line_start":461,"line_end":461,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\f2s.rs","byte_start":76587,"byte_end":76590,"line_start":462,"line_end":462,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\f2s.rs","byte_start":76591,"byte_end":76609,"line_start":463,"line_end":463,"column_start":1,"column_end":19}},{"value":"/ let f = 1.234f32;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\f2s.rs","byte_start":76610,"byte_end":76631,"line_start":464,"line_end":464,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\f2s.rs","byte_start":76632,"byte_end":76635,"line_start":465,"line_end":465,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\f2s.rs","byte_start":76636,"byte_end":76648,"line_start":466,"line_end":466,"column_start":1,"column_end":13}},{"value":"/     let mut buffer: [u8; 15] = std::mem::uninitialized();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\f2s.rs","byte_start":76649,"byte_end":76710,"line_start":467,"line_end":467,"column_start":1,"column_end":62}},{"value":"/     let n = ryu::raw::f2s_buffered_n(f, &mut buffer[0]);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\f2s.rs","byte_start":76711,"byte_end":76771,"line_start":468,"line_end":468,"column_start":1,"column_end":61}},{"value":"/     let s = std::str::from_utf8_unchecked(&buffer[..n]);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\f2s.rs","byte_start":76772,"byte_end":76832,"line_start":469,"line_end":469,"column_start":1,"column_end":61}},{"value":"/     assert_eq!(s, \"1.234E0\");","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\f2s.rs","byte_start":76833,"byte_end":76866,"line_start":470,"line_end":470,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\f2s.rs","byte_start":76867,"byte_end":76872,"line_start":471,"line_end":471,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\f2s.rs","byte_start":76873,"byte_end":76880,"line_start":472,"line_end":472,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\f2s.rs","byte_start":76909,"byte_end":76917,"line_start":473,"line_end":473,"column_start":29,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":79383,"byte_end":79397,"line_start":53,"line_end":53,"column_start":15,"column_end":29},"name":"d2s_buffered_n","qualname":"::pretty::d2s_buffered_n","value":"pub unsafe fn d2s_buffered_n(f64, *mut u8) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Print f64 to the given buffer and return number of bytes written. Human\n readable formatting.","sig":null,"attributes":[{"value":"/ Print f64 to the given buffer and return number of bytes written. Human","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":78041,"byte_end":78116,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ readable formatting.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":78117,"byte_end":78141,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":78142,"byte_end":78145,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ At most 24 bytes will be written.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":78146,"byte_end":78183,"line_start":19,"line_end":19,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":78184,"byte_end":78187,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ## Special cases","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":78188,"byte_end":78208,"line_start":21,"line_end":21,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":78209,"byte_end":78212,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This function **does not** check for NaN or infinity. If the input","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":78213,"byte_end":78283,"line_start":23,"line_end":23,"column_start":1,"column_end":71}},{"value":"/ number is not a finite float, the printed representation will be some","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":78284,"byte_end":78357,"line_start":24,"line_end":24,"column_start":1,"column_end":74}},{"value":"/ correctly formatted but unspecified numerical value.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":78358,"byte_end":78414,"line_start":25,"line_end":25,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":78415,"byte_end":78418,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Please check [`is_finite`] yourself before calling this function, or","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":78419,"byte_end":78491,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/ check [`is_nan`] and [`is_infinite`] and handle those cases yourself.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":78492,"byte_end":78565,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":78566,"byte_end":78569,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`is_finite`]: https://doc.rust-lang.org/std/primitive.f64.html#method.is_finite","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":78570,"byte_end":78654,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/ [`is_nan`]: https://doc.rust-lang.org/std/primitive.f64.html#method.is_nan","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":78655,"byte_end":78733,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/ [`is_infinite`]: https://doc.rust-lang.org/std/primitive.f64.html#method.is_infinite","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":78734,"byte_end":78822,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":78823,"byte_end":78826,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ## Safety","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":78827,"byte_end":78840,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":78841,"byte_end":78844,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ The `result` pointer argument must point to sufficiently many writable bytes","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":78845,"byte_end":78925,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"/ to hold Ry큰's representation of `f`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":78926,"byte_end":78967,"line_start":37,"line_end":37,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":78968,"byte_end":78971,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":78972,"byte_end":78986,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":78987,"byte_end":78990,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":78991,"byte_end":79009,"line_start":41,"line_end":41,"column_start":1,"column_end":19}},{"value":"/ let f = 1.234f64;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":79010,"byte_end":79031,"line_start":42,"line_end":42,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":79032,"byte_end":79035,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":79036,"byte_end":79048,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"/     let mut buffer: [u8; 24] = std::mem::uninitialized();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":79049,"byte_end":79110,"line_start":45,"line_end":45,"column_start":1,"column_end":62}},{"value":"/     let n = ryu::raw::pretty_d2s_buffered_n(f, &mut buffer[0]);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":79111,"byte_end":79178,"line_start":46,"line_end":46,"column_start":1,"column_end":68}},{"value":"/     let s = std::str::from_utf8_unchecked(&buffer[..n]);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":79179,"byte_end":79239,"line_start":47,"line_end":47,"column_start":1,"column_end":61}},{"value":"/     assert_eq!(s, \"1.234\");","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":79240,"byte_end":79271,"line_start":48,"line_end":48,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":79272,"byte_end":79277,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":79278,"byte_end":79285,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":79314,"byte_end":79322,"line_start":51,"line_end":51,"column_start":29,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":83271,"byte_end":83285,"line_start":158,"line_end":158,"column_start":15,"column_end":29},"name":"f2s_buffered_n","qualname":"::pretty::f2s_buffered_n","value":"pub unsafe fn f2s_buffered_n(f32, *mut u8) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Print f32 to the given buffer and return number of bytes written. Human\n readable formatting.","sig":null,"attributes":[{"value":"/ Print f32 to the given buffer and return number of bytes written. Human","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":81929,"byte_end":82004,"line_start":121,"line_end":121,"column_start":1,"column_end":76}},{"value":"/ readable formatting.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":82005,"byte_end":82029,"line_start":122,"line_end":122,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":82030,"byte_end":82033,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ At most 16 bytes will be written.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":82034,"byte_end":82071,"line_start":124,"line_end":124,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":82072,"byte_end":82075,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ ## Special cases","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":82076,"byte_end":82096,"line_start":126,"line_end":126,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":82097,"byte_end":82100,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ This function **does not** check for NaN or infinity. If the input","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":82101,"byte_end":82171,"line_start":128,"line_end":128,"column_start":1,"column_end":71}},{"value":"/ number is not a finite float, the printed representation will be some","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":82172,"byte_end":82245,"line_start":129,"line_end":129,"column_start":1,"column_end":74}},{"value":"/ correctly formatted but unspecified numerical value.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":82246,"byte_end":82302,"line_start":130,"line_end":130,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":82303,"byte_end":82306,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ Please check [`is_finite`] yourself before calling this function, or","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":82307,"byte_end":82379,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/ check [`is_nan`] and [`is_infinite`] and handle those cases yourself.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":82380,"byte_end":82453,"line_start":133,"line_end":133,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":82454,"byte_end":82457,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ [`is_finite`]: https://doc.rust-lang.org/std/primitive.f32.html#method.is_finite","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":82458,"byte_end":82542,"line_start":135,"line_end":135,"column_start":1,"column_end":85}},{"value":"/ [`is_nan`]: https://doc.rust-lang.org/std/primitive.f32.html#method.is_nan","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":82543,"byte_end":82621,"line_start":136,"line_end":136,"column_start":1,"column_end":79}},{"value":"/ [`is_infinite`]: https://doc.rust-lang.org/std/primitive.f32.html#method.is_infinite","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":82622,"byte_end":82710,"line_start":137,"line_end":137,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":82711,"byte_end":82714,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ ## Safety","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":82715,"byte_end":82728,"line_start":139,"line_end":139,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":82729,"byte_end":82732,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ The `result` pointer argument must point to sufficiently many writable bytes","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":82733,"byte_end":82813,"line_start":141,"line_end":141,"column_start":1,"column_end":81}},{"value":"/ to hold Ry큰's representation of `f`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":82814,"byte_end":82855,"line_start":142,"line_end":142,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":82856,"byte_end":82859,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":82860,"byte_end":82874,"line_start":144,"line_end":144,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":82875,"byte_end":82878,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ```edition2018","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":82879,"byte_end":82897,"line_start":146,"line_end":146,"column_start":1,"column_end":19}},{"value":"/ let f = 1.234f32;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":82898,"byte_end":82919,"line_start":147,"line_end":147,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":82920,"byte_end":82923,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":82924,"byte_end":82936,"line_start":149,"line_end":149,"column_start":1,"column_end":13}},{"value":"/     let mut buffer: [u8; 16] = std::mem::uninitialized();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":82937,"byte_end":82998,"line_start":150,"line_end":150,"column_start":1,"column_end":62}},{"value":"/     let n = ryu::raw::pretty_f2s_buffered_n(f, &mut buffer[0]);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":82999,"byte_end":83066,"line_start":151,"line_end":151,"column_start":1,"column_end":68}},{"value":"/     let s = std::str::from_utf8_unchecked(&buffer[..n]);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":83067,"byte_end":83127,"line_start":152,"line_end":152,"column_start":1,"column_end":61}},{"value":"/     assert_eq!(s, \"1.234\");","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":83128,"byte_end":83159,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":83160,"byte_end":83165,"line_start":154,"line_end":154,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":83166,"byte_end":83173,"line_start":155,"line_end":155,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\pretty\\mod.rs","byte_start":83202,"byte_end":83210,"line_start":156,"line_end":156,"column_start":29,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":4111,"byte_end":4114,"line_start":121,"line_end":121,"column_start":9,"column_end":12},"name":"raw","qualname":"::raw","value":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126}],"decl_id":null,"docs":" Unsafe functions that exactly mirror the API of the C implementation of Ry큰.\n","sig":null,"attributes":[{"value":"/ Unsafe functions that exactly mirror the API of the C implementation of Ry큰.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\lib.rs","byte_start":4021,"byte_end":4102,"line_start":120,"line_end":120,"column_start":1,"column_end":81}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":4702,"byte_end":4708,"line_start":22,"line_end":22,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":11},{"krate":0,"index":12}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":6208,"byte_end":6214,"line_start":60,"line_end":60,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":15}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":4702,"byte_end":4708,"line_start":22,"line_end":22,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":127},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":6208,"byte_end":6214,"line_start":60,"line_end":60,"column_start":18,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":127},"to":{"krate":1,"index":2033}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\ryu-0.2.8\\src\\buffer\\mod.rs","byte_start":6548,"byte_end":6554,"line_start":73,"line_end":73,"column_start":18,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":22},"to":{"krate":0,"index":16}}]}