{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5","program":"C:\\Users\\Thai Nguyen\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","encode_unicode","C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=c3ae02fa4810f397","-C","extra-filename=-c3ae02fa4810f397","--out-dir","c:\\Cygwin\\home\\Thai Nguyen\\rust\\rustlings\\target\\rls\\debug\\deps","-L","dependency=c:\\Cygwin\\home\\Thai Nguyen\\rust\\rustlings\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Thai Nguyen\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Cygwin\\home\\Thai Nguyen\\rust\\rustlings\\target\\rls\\debug\\deps\\libencode_unicode-c3ae02fa4810f397.rmeta"},"prelude":{"crate_id":{"name":"encode_unicode","disambiguator":[12538217645657170455,3428658721753183673]},"crate_root":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src","external_crates":[{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[2134305066550747688,1377703208702874155]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","num":2,"id":{"name":"core","disambiguator":[1322159461575500717,8297198428669169011]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2376346800744392852,12342541482992122530]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14946502858004023242,6637215598610016319]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5305136910335682758,6890491777619641650]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[8079093424489733033,9678018066858265018]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8191054904896780843,65190916132359678]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17454577518104061478,8473922882117178851]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14702801963282246562,3385633331338644346]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4483555191844012602,617965746000623535]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6496369475756502088,8603909216288097824]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[8790568169648576788,8899032378407077408]}}],"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":351,"byte_end":3469,"line_start":10,"line_end":78,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":2391,"byte_end":2398,"line_start":56,"line_end":56,"column_start":18,"column_end":25},"alias_span":null,"name":"CharExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":2400,"byte_end":2408,"line_start":56,"line_end":56,"column_start":27,"column_end":35},"alias_span":null,"name":"U8UtfExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":2410,"byte_end":2419,"line_start":56,"line_end":56,"column_start":37,"column_end":46},"alias_span":null,"name":"U16UtfExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":2421,"byte_end":2427,"line_start":56,"line_end":56,"column_start":48,"column_end":54},"alias_span":null,"name":"StrExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":2429,"byte_end":2436,"line_start":56,"line_end":56,"column_start":56,"column_end":63},"alias_span":null,"name":"IterExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":2438,"byte_end":2446,"line_start":56,"line_end":56,"column_start":65,"column_end":73},"alias_span":null,"name":"SliceExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":992},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":2468,"byte_end":2476,"line_start":57,"line_end":57,"column_start":20,"column_end":28},"alias_span":null,"name":"Utf8Char","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1045},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":2498,"byte_end":2507,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"alias_span":null,"name":"Utf16Char","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1017},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":2534,"byte_end":2546,"line_start":59,"line_end":59,"column_start":26,"column_end":38},"alias_span":null,"name":"Utf8Iterator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":2548,"byte_end":2558,"line_start":59,"line_end":59,"column_start":40,"column_end":50},"alias_span":null,"name":"iter_bytes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1062},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":2587,"byte_end":2600,"line_start":60,"line_end":60,"column_start":27,"column_end":40},"alias_span":null,"name":"Utf16Iterator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":490},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":2602,"byte_end":2612,"line_start":60,"line_end":60,"column_start":42,"column_end":52},"alias_span":null,"name":"iter_units","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":863},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":2765,"byte_end":2777,"line_start":64,"line_end":64,"column_start":22,"column_end":34},"alias_span":null,"name":"FromStrError","value":"","parent":{"krate":0,"index":663}},{"kind":"Use","ref_id":{"krate":0,"index":715},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":2779,"byte_end":2792,"line_start":64,"line_end":64,"column_start":36,"column_end":49},"alias_span":null,"name":"EmptyStrError","value":"","parent":{"krate":0,"index":663}},{"kind":"Use","ref_id":{"krate":0,"index":716},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":2779,"byte_end":2792,"line_start":64,"line_end":64,"column_start":36,"column_end":49},"alias_span":null,"name":"EmptyStrError","value":"","parent":{"krate":0,"index":666}},{"kind":"Use","ref_id":{"krate":0,"index":769},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":2816,"byte_end":2832,"line_start":65,"line_end":65,"column_start":22,"column_end":38},"alias_span":null,"name":"InvalidCodepoint","value":"","parent":{"krate":0,"index":663}},{"kind":"Use","ref_id":{"krate":0,"index":905},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":2834,"byte_end":2845,"line_start":65,"line_end":65,"column_start":40,"column_end":51},"alias_span":null,"name":"InvalidUtf8","value":"","parent":{"krate":0,"index":663}},{"kind":"Use","ref_id":{"krate":0,"index":884},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":2869,"byte_end":2889,"line_start":66,"line_end":66,"column_start":22,"column_end":42},"alias_span":null,"name":"InvalidUtf8FirstByte","value":"","parent":{"krate":0,"index":663}},{"kind":"Use","ref_id":{"krate":0,"index":697},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":2890,"byte_end":2911,"line_start":66,"line_end":66,"column_start":43,"column_end":64},"alias_span":null,"name":"InvalidUtf16FirstUnit","value":"","parent":{"krate":0,"index":663}},{"kind":"Use","ref_id":{"krate":0,"index":698},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":2890,"byte_end":2911,"line_start":66,"line_end":66,"column_start":43,"column_end":64},"alias_span":null,"name":"InvalidUtf16FirstUnit","value":"","parent":{"krate":0,"index":672}},{"kind":"Use","ref_id":{"krate":0,"index":961},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":2935,"byte_end":2951,"line_start":67,"line_end":67,"column_start":22,"column_end":38},"alias_span":null,"name":"InvalidUtf8Slice","value":"","parent":{"krate":0,"index":663}},{"kind":"Use","ref_id":{"krate":0,"index":815},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":2952,"byte_end":2969,"line_start":67,"line_end":67,"column_start":39,"column_end":56},"alias_span":null,"name":"InvalidUtf16Slice","value":"","parent":{"krate":0,"index":663}},{"kind":"Use","ref_id":{"krate":0,"index":933},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":2993,"byte_end":3009,"line_start":68,"line_end":68,"column_start":22,"column_end":38},"alias_span":null,"name":"InvalidUtf8Array","value":"","parent":{"krate":0,"index":663}},{"kind":"Use","ref_id":{"krate":0,"index":790},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":3010,"byte_end":3027,"line_start":68,"line_end":68,"column_start":39,"column_end":56},"alias_span":null,"name":"InvalidUtf16Tuple","value":"","parent":{"krate":0,"index":663}},{"kind":"Use","ref_id":{"krate":0,"index":840},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":3050,"byte_end":3064,"line_start":69,"line_end":69,"column_start":21,"column_end":35},"alias_span":null,"name":"Utf16PairError","value":"","parent":{"krate":0,"index":663}},{"kind":"Use","ref_id":{"krate":0,"index":1017},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":3176,"byte_end":3188,"line_start":74,"line_end":74,"column_start":30,"column_end":42},"alias_span":null,"name":"Utf8Iterator","value":"","parent":{"krate":0,"index":680}},{"kind":"Use","ref_id":{"krate":0,"index":1022},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":3190,"byte_end":3206,"line_start":74,"line_end":74,"column_start":44,"column_end":60},"alias_span":null,"name":"Utf8CharSplitter","value":"","parent":{"krate":0,"index":680}},{"kind":"Use","ref_id":{"krate":0,"index":1038},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":3208,"byte_end":3217,"line_start":74,"line_end":74,"column_start":62,"column_end":71},"alias_span":null,"name":"Utf8Chars","value":"","parent":{"krate":0,"index":680}},{"kind":"Use","ref_id":{"krate":0,"index":1031},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":3219,"byte_end":3234,"line_start":74,"line_end":74,"column_start":73,"column_end":88},"alias_span":null,"name":"Utf8CharIndices","value":"","parent":{"krate":0,"index":680}},{"kind":"Use","ref_id":{"krate":0,"index":1062},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":3267,"byte_end":3280,"line_start":75,"line_end":75,"column_start":31,"column_end":44},"alias_span":null,"name":"Utf16Iterator","value":"","parent":{"krate":0,"index":680}},{"kind":"Use","ref_id":{"krate":0,"index":1067},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":3282,"byte_end":3299,"line_start":75,"line_end":75,"column_start":46,"column_end":63},"alias_span":null,"name":"Utf16CharSplitter","value":"","parent":{"krate":0,"index":680}},{"kind":"Use","ref_id":{"krate":0,"index":1083},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":3301,"byte_end":3311,"line_start":75,"line_end":75,"column_start":65,"column_end":75},"alias_span":null,"name":"Utf16Chars","value":"","parent":{"krate":0,"index":680}},{"kind":"Use","ref_id":{"krate":0,"index":1076},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":3313,"byte_end":3329,"line_start":75,"line_end":75,"column_start":77,"column_end":93},"alias_span":null,"name":"Utf16CharIndices","value":"","parent":{"krate":0,"index":680}},{"kind":"Use","ref_id":{"krate":0,"index":1090},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":3365,"byte_end":3379,"line_start":76,"line_end":76,"column_start":34,"column_end":48},"alias_span":null,"name":"Utf8CharMerger","value":"","parent":{"krate":0,"index":680}},{"kind":"Use","ref_id":{"krate":0,"index":1105},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":3381,"byte_end":3396,"line_start":76,"line_end":76,"column_start":50,"column_end":65},"alias_span":null,"name":"Utf8CharDecoder","value":"","parent":{"krate":0,"index":680}},{"kind":"Use","ref_id":{"krate":0,"index":1115},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":3432,"byte_end":3447,"line_start":77,"line_end":77,"column_start":34,"column_end":49},"alias_span":null,"name":"Utf16CharMerger","value":"","parent":{"krate":0,"index":680}},{"kind":"Use","ref_id":{"krate":0,"index":1128},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":3449,"byte_end":3465,"line_start":77,"line_end":77,"column_start":51,"column_end":67},"alias_span":null,"name":"Utf16CharDecoder","value":"","parent":{"krate":0,"index":680}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":351,"byte_end":3469,"line_start":10,"line_end":78,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":19},{"krate":0,"index":124},{"krate":0,"index":255},{"krate":0,"index":343},{"krate":0,"index":469},{"krate":0,"index":545},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":680}],"decl_id":null,"docs":"Miscellaneous UTF-8 and UTF-16 types and methods.","sig":null,"attributes":[{"value":"*\nMiscellaneous UTF-8 and UTF-16 types and methods.\n\n# Optional features:\n* `#![no_std]`-mode: There are a few differences:\n  * `Error` doesn't exist, but `description()` is made available as an inherent impl.\n  * `Extend`/`FromIterator`-implementations for `String`/`Vec<u8>`/`Vec<u16>` are missing.\n  * There is no `io`, so `Utf8Iterator` and `Utf8CharSplitter` doesn't implement `Read`.\n\n  This feature is enabled by setting `default-features=false` in `Cargo.toml`:\n  `encode_unicode = {version=\"0.3.4\", default-features=false}`\n* Integration with the [ascii](https://tomprogrammer.github.io/rust-ascii/ascii/index.html) crate:  \n  Convert `Utf8Char` and `Utf16Char` to and from\n  [ascii::`AsciiChar`](https://tomprogrammer.github.io/rust-ascii/ascii/enum.AsciiChar.html).\n\nThe minimum supported version of Rust is 1.15,\nolder versions might work now but can break with a minor update.\n\n[crates.io page](https://crates.io/crates/encode_unicode)  \n[github repository](https://github.com/tormol/encode_unicode)\n\n*/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":351,"byte_end":1369,"line_start":10,"line_end":31,"column_start":1,"column_end":3}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":1371,"byte_end":1393,"line_start":33,"line_end":33,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":697},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":4903,"byte_end":4924,"line_start":53,"line_end":53,"column_start":5,"column_end":26},"name":"InvalidUtf16FirstUnit","qualname":"::errors::InvalidUtf16FirstUnit","value":"","parent":null,"children":[],"decl_id":null,"docs":" Cannot tell whether an `u16` needs an extra unit,\n because it's a trailing surrogate itself.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":715},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":5094,"byte_end":5107,"line_start":59,"line_end":59,"column_start":5,"column_end":18},"name":"EmptyStrError","qualname":"::errors::EmptyStrError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Cannot create an `Utf8Char` or `Utf16Char` from the first codepoint of a str,\n because there are none.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":733},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":5243,"byte_end":5256,"line_start":65,"line_end":65,"column_start":5,"column_end":18},"name":"NonAsciiError","qualname":"::errors::NonAsciiError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Cannot create an `Utf8Char` from a standalone `u8`\n that is not an ASCII character.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":751},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":5467,"byte_end":5478,"line_start":71,"line_end":71,"column_start":5,"column_end":16},"name":"NonBMPError","qualname":"::errors::NonBMPError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Cannot create an `Utf16Char` from a standalone `u16` that is not a\n codepoint in the basic multilingual plane, but part of a suurrogate pair.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":770},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":6063,"byte_end":6076,"line_start":91,"line_end":91,"column_start":11,"column_end":24},"name":"Utf16Reserved","qualname":"::errors::InvalidCodepoint::Utf16Reserved","value":"InvalidCodepoint::Utf16Reserved","parent":{"krate":0,"index":769},"children":[],"decl_id":null,"docs":" It's reserved for UTF-16 surrogate pairs.\"\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":772},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":6204,"byte_end":6211,"line_start":93,"line_end":93,"column_start":11,"column_end":18},"name":"TooHigh","qualname":"::errors::InvalidCodepoint::TooHigh","value":"InvalidCodepoint::TooHigh","parent":{"krate":0,"index":769},"children":[],"decl_id":null,"docs":" It's higher than the highest codepoint (which is 0x10ffff).\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":769},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":5979,"byte_end":5995,"line_start":89,"line_end":89,"column_start":5,"column_end":21},"name":"InvalidCodepoint","qualname":"::errors::InvalidCodepoint","value":"pub enum InvalidCodepoint {\n\n    #[doc = r#\" It's reserved for UTF-16 surrogate pairs.\"\"#]\n    Utf16Reserved,\n\n    #[doc = r\" It's higher than the highest codepoint (which is 0x10ffff).\"]\n    TooHigh,\n}","parent":null,"children":[{"krate":0,"index":770},{"krate":0,"index":772}],"decl_id":null,"docs":" Reasons why an `u32` is not a valid UTF codepoint.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":6397,"byte_end":6408,"line_start":98,"line_end":98,"column_start":12,"column_end":23},"name":"error_range","qualname":"<InvalidCodepoint>::error_range","value":"pub fn error_range(Self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the range of values for which this error would be given.\n","sig":null,"attributes":[{"value":"/ Get the range of values for which this error would be given.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":6321,"byte_end":6385,"line_start":97,"line_end":97,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":791},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":6853,"byte_end":6877,"line_start":110,"line_end":110,"column_start":11,"column_end":35},"name":"FirstIsTrailingSurrogate","qualname":"::errors::InvalidUtf16Tuple::FirstIsTrailingSurrogate","value":"InvalidUtf16Tuple::FirstIsTrailingSurrogate","parent":{"krate":0,"index":790},"children":[],"decl_id":null,"docs":" The first unit is a trailing/low surrogate, which is never valid.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":793},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":7038,"byte_end":7055,"line_start":112,"line_end":112,"column_start":11,"column_end":28},"name":"SuperfluousSecond","qualname":"::errors::InvalidUtf16Tuple::SuperfluousSecond","value":"InvalidUtf16Tuple::SuperfluousSecond","parent":{"krate":0,"index":790},"children":[],"decl_id":null,"docs":" You provided a second unit, but the first one stands on its own.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":795},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":7163,"byte_end":7176,"line_start":114,"line_end":114,"column_start":11,"column_end":24},"name":"MissingSecond","qualname":"::errors::InvalidUtf16Tuple::MissingSecond","value":"InvalidUtf16Tuple::MissingSecond","parent":{"krate":0,"index":790},"children":[],"decl_id":null,"docs":" The first and only unit requires a second unit.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":797},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":7426,"byte_end":7439,"line_start":118,"line_end":118,"column_start":11,"column_end":24},"name":"InvalidSecond","qualname":"::errors::InvalidUtf16Tuple::InvalidSecond","value":"InvalidUtf16Tuple::InvalidSecond","parent":{"krate":0,"index":790},"children":[],"decl_id":null,"docs":" The first unit requires a second unit, but it's not a trailing/low surrogate.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":790},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":6640,"byte_end":6657,"line_start":106,"line_end":106,"column_start":5,"column_end":22},"name":"InvalidUtf16Tuple","qualname":"::errors::InvalidUtf16Tuple","value":"pub enum InvalidUtf16Tuple {\n\n    #[doc =\n      r\" The first unit is a trailing/low surrogate, which is never valid.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r\" Note that the value of a low surrogate is actually higher than a high surrogate.\"]\n    FirstIsTrailingSurrogate,\n\n    #[doc =\n      r\" You provided a second unit, but the first one stands on its own.\"]\n    SuperfluousSecond,\n\n    #[doc = r\" The first and only unit requires a second unit.\"]\n    MissingSecond,\n\n    #[doc =\n      r\" The first unit requires a second unit, but it's not a trailing/low surrogate.\"]\n    #[doc = r\"\"]\n    #[doc =\n      r\" Note that the value of a low surrogate is actually higher than a high surrogate.\"]\n    InvalidSecond,\n}","parent":null,"children":[{"krate":0,"index":791},{"krate":0,"index":793},{"krate":0,"index":795},{"krate":0,"index":797}],"decl_id":null,"docs":" Reasons why one or two `u16`s are not valid UTF-16, in sinking precedence.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":816},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":7655,"byte_end":7665,"line_start":125,"line_end":125,"column_start":11,"column_end":21},"name":"EmptySlice","qualname":"::errors::InvalidUtf16Slice::EmptySlice","value":"InvalidUtf16Slice::EmptySlice","parent":{"krate":0,"index":815},"children":[],"decl_id":null,"docs":" The slice is empty.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":818},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":7748,"byte_end":7765,"line_start":127,"line_end":127,"column_start":11,"column_end":28},"name":"FirstLowSurrogate","qualname":"::errors::InvalidUtf16Slice::FirstLowSurrogate","value":"InvalidUtf16Slice::FirstLowSurrogate","parent":{"krate":0,"index":815},"children":[],"decl_id":null,"docs":" The first unit is a low surrogate.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":820},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":7881,"byte_end":7894,"line_start":129,"line_end":129,"column_start":11,"column_end":24},"name":"MissingSecond","qualname":"::errors::InvalidUtf16Slice::MissingSecond","value":"InvalidUtf16Slice::MissingSecond","parent":{"krate":0,"index":815},"children":[],"decl_id":null,"docs":" The first and only unit requires a second unit.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":822},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":8042,"byte_end":8063,"line_start":131,"line_end":131,"column_start":11,"column_end":32},"name":"SecondNotLowSurrogate","qualname":"::errors::InvalidUtf16Slice::SecondNotLowSurrogate","value":"InvalidUtf16Slice::SecondNotLowSurrogate","parent":{"krate":0,"index":815},"children":[],"decl_id":null,"docs":" The first unit requires a second one, but it's not a trailing surrogate.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":815},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":7593,"byte_end":7610,"line_start":123,"line_end":123,"column_start":5,"column_end":22},"name":"InvalidUtf16Slice","qualname":"::errors::InvalidUtf16Slice","value":"pub enum InvalidUtf16Slice {\n\n    #[doc = r\" The slice is empty.\"]\n    EmptySlice,\n\n    #[doc = r\" The first unit is a low surrogate.\"]\n    FirstLowSurrogate,\n\n    #[doc = r\" The first and only unit requires a second unit.\"]\n    MissingSecond,\n\n    #[doc =\n      r\" The first unit requires a second one, but it's not a trailing surrogate.\"]\n    SecondNotLowSurrogate,\n}","parent":null,"children":[{"krate":0,"index":816},{"krate":0,"index":818},{"krate":0,"index":820},{"krate":0,"index":822}],"decl_id":null,"docs":" Reasons why a slice of `u16`s doesn't start with valid UTF-16.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":841},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":8310,"byte_end":8337,"line_start":137,"line_end":137,"column_start":11,"column_end":38},"name":"UnexpectedTrailingSurrogate","qualname":"::errors::Utf16PairError::UnexpectedTrailingSurrogate","value":"Utf16PairError::UnexpectedTrailingSurrogate","parent":{"krate":0,"index":840},"children":[],"decl_id":null,"docs":" A trailing surrogate was not preceeded by a leading surrogate.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":843},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":8507,"byte_end":8532,"line_start":139,"line_end":139,"column_start":11,"column_end":36},"name":"UnmatchedLeadingSurrogate","qualname":"::errors::Utf16PairError::UnmatchedLeadingSurrogate","value":"Utf16PairError::UnmatchedLeadingSurrogate","parent":{"krate":0,"index":840},"children":[],"decl_id":null,"docs":" A leading surrogate was followed by an unit that was not a trailing surrogate.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":845},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":8699,"byte_end":8709,"line_start":141,"line_end":141,"column_start":11,"column_end":21},"name":"Incomplete","qualname":"::errors::Utf16PairError::Incomplete","value":"Utf16PairError::Incomplete","parent":{"krate":0,"index":840},"children":[],"decl_id":null,"docs":" A trailing surrogate was expected when the end was reached.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":840},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":8208,"byte_end":8222,"line_start":135,"line_end":135,"column_start":5,"column_end":19},"name":"Utf16PairError","qualname":"::errors::Utf16PairError","value":"pub enum Utf16PairError {\n\n    #[doc =\n      r\" A trailing surrogate was not preceeded by a leading surrogate.\"]\n    UnexpectedTrailingSurrogate,\n\n    #[doc =\n      r\" A leading surrogate was followed by an unit that was not a trailing surrogate.\"]\n    UnmatchedLeadingSurrogate,\n\n    #[doc = r\" A trailing surrogate was expected when the end was reached.\"]\n    Incomplete,\n}","parent":null,"children":[{"krate":0,"index":841},{"krate":0,"index":843},{"krate":0,"index":845}],"decl_id":null,"docs":" Types of invalid sequences encountered by `Utf16CharParser`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":864},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":8976,"byte_end":8994,"line_start":148,"line_end":148,"column_start":11,"column_end":29},"name":"MultipleCodepoints","qualname":"::errors::FromStrError::MultipleCodepoints","value":"FromStrError::MultipleCodepoints","parent":{"krate":0,"index":863},"children":[],"decl_id":null,"docs":" `Utf8Char` or `Utf16Char` cannot store more than a single codepoint.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":866},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":9094,"byte_end":9099,"line_start":150,"line_end":150,"column_start":11,"column_end":16},"name":"Empty","qualname":"::errors::FromStrError::Empty","value":"FromStrError::Empty","parent":{"krate":0,"index":863},"children":[],"decl_id":null,"docs":" `Utf8Char` or `Utf16Char` cannot be empty.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":863},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":8870,"byte_end":8882,"line_start":146,"line_end":146,"column_start":5,"column_end":17},"name":"FromStrError","qualname":"::errors::FromStrError","value":"pub enum FromStrError {\n\n    #[doc =\n      r\" `Utf8Char` or `Utf16Char` cannot store more than a single codepoint.\"]\n    MultipleCodepoints,\n\n    #[doc = r\" `Utf8Char` or `Utf16Char` cannot be empty.\"]\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":864},{"krate":0,"index":866}],"decl_id":null,"docs":" Reasons why `Utf8Char::from_str()` or `Utf16Char::from_str()` failed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":885},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":9312,"byte_end":9326,"line_start":157,"line_end":157,"column_start":11,"column_end":25},"name":"TooLongSeqence","qualname":"::errors::InvalidUtf8FirstByte::TooLongSeqence","value":"InvalidUtf8FirstByte::TooLongSeqence","parent":{"krate":0,"index":884},"children":[],"decl_id":null,"docs":" Sequences cannot be longer than 4 bytes. Is given for values >= 240.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":887},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":9521,"byte_end":9537,"line_start":159,"line_end":159,"column_start":11,"column_end":27},"name":"ContinuationByte","qualname":"::errors::InvalidUtf8FirstByte::ContinuationByte","value":"InvalidUtf8FirstByte::ContinuationByte","parent":{"krate":0,"index":884},"children":[],"decl_id":null,"docs":" This byte belongs to a previous sequence. Is given for values between 128 and 192 (exclusive).\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":884},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":9198,"byte_end":9218,"line_start":155,"line_end":155,"column_start":5,"column_end":25},"name":"InvalidUtf8FirstByte","qualname":"::errors::InvalidUtf8FirstByte","value":"pub enum InvalidUtf8FirstByte {\n\n    #[doc =\n      r\" Sequences cannot be longer than 4 bytes. Is given for values >= 240.\"]\n    TooLongSeqence,\n\n    #[doc =\n      r\" This byte belongs to a previous sequence. Is given for values between 128 and 192 (exclusive).\"]\n    ContinuationByte,\n}","parent":null,"children":[{"krate":0,"index":885},{"krate":0,"index":887}],"decl_id":null,"docs":" Reasons why a byte is not the start of a UTF-8 codepoint.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":906},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":11073,"byte_end":11082,"line_start":212,"line_end":212,"column_start":5,"column_end":14},"name":"FirstByte","qualname":"::errors::InvalidUtf8::FirstByte","value":"InvalidUtf8::FirstByte(InvalidUtf8FirstByte)","parent":{"krate":0,"index":905},"children":[],"decl_id":null,"docs":" Something is wrong with the first byte.\n","sig":null,"attributes":[{"value":"/ Something is wrong with the first byte.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":11025,"byte_end":11068,"line_start":211,"line_end":211,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":909},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":11223,"byte_end":11243,"line_start":215,"line_end":215,"column_start":5,"column_end":25},"name":"NotAContinuationByte","qualname":"::errors::InvalidUtf8::NotAContinuationByte","value":"InvalidUtf8::NotAContinuationByte(usize)","parent":{"krate":0,"index":905},"children":[],"decl_id":null,"docs":" The byte at index 1...3 should be a continuation byte,\n but dosesn't fit the pattern 0b10xx_xxxx.\n","sig":null,"attributes":[{"value":"/ The byte at index 1...3 should be a continuation byte,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":11110,"byte_end":11168,"line_start":213,"line_end":213,"column_start":5,"column_end":63}},{"value":"/ but dosesn't fit the pattern 0b10xx_xxxx.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":11173,"byte_end":11218,"line_start":214,"line_end":214,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":912},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":11505,"byte_end":11513,"line_start":220,"line_end":220,"column_start":5,"column_end":13},"name":"OverLong","qualname":"::errors::InvalidUtf8::OverLong","value":"InvalidUtf8::OverLong","parent":{"krate":0,"index":905},"children":[],"decl_id":null,"docs":" There are too many leading zeros: it could be a byte shorter.","sig":null,"attributes":[{"value":"/ There are too many leading zeros: it could be a byte shorter.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":11256,"byte_end":11321,"line_start":216,"line_end":216,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":11326,"byte_end":11329,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ [Decoding this could allow someone to input otherwise prohibited","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":11334,"byte_end":11402,"line_start":218,"line_end":218,"column_start":5,"column_end":73}},{"value":"/ characters and sequences, such as \"../\"](https://tools.ietf.org/html/rfc3629#section-10).","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":11407,"byte_end":11500,"line_start":219,"line_end":219,"column_start":5,"column_end":98}}]},{"kind":"Enum","id":{"krate":0,"index":905},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":11007,"byte_end":11018,"line_start":210,"line_end":210,"column_start":10,"column_end":21},"name":"InvalidUtf8","qualname":"::errors::InvalidUtf8","value":"pub enum InvalidUtf8 {\n\n    /// Something is wrong with the first byte.\n    FirstByte(InvalidUtf8FirstByte),\n\n    /// The byte at index 1...3 should be a continuation byte,\n    /// but dosesn't fit the pattern 0b10xx_xxxx.\n    NotAContinuationByte(usize),\n\n    /// There are too many leading zeros: it could be a byte shorter.\n    ///\n    /// [Decoding this could allow someone to input otherwise prohibited\n    /// characters and sequences, such as \"../\"](https://tools.ietf.org/html/rfc3629#section-10).\n    OverLong,\n}","parent":null,"children":[{"krate":0,"index":906},{"krate":0,"index":909},{"krate":0,"index":912}],"decl_id":null,"docs":" Reasons why a byte sequence is not valid UTF-8, excluding invalid codepoint.\n In sinking precedence.\n","sig":null,"attributes":[{"value":"/ Reasons why a byte sequence is not valid UTF-8, excluding invalid codepoint.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":10847,"byte_end":10927,"line_start":207,"line_end":207,"column_start":1,"column_end":81}},{"value":"/ In sinking precedence.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":10928,"byte_end":10954,"line_start":208,"line_end":208,"column_start":1,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":934},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":12323,"byte_end":12327,"line_start":241,"line_end":241,"column_start":5,"column_end":9},"name":"Utf8","qualname":"::errors::InvalidUtf8Array::Utf8","value":"InvalidUtf8Array::Utf8(InvalidUtf8)","parent":{"krate":0,"index":933},"children":[],"decl_id":null,"docs":" Not a valid UTF-8 sequence.\n","sig":null,"attributes":[{"value":"/ Not a valid UTF-8 sequence.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":12287,"byte_end":12318,"line_start":240,"line_end":240,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":937},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":12385,"byte_end":12394,"line_start":243,"line_end":243,"column_start":5,"column_end":14},"name":"Codepoint","qualname":"::errors::InvalidUtf8Array::Codepoint","value":"InvalidUtf8Array::Codepoint(InvalidCodepoint)","parent":{"krate":0,"index":933},"children":[],"decl_id":null,"docs":" Not a valid unicode codepoint.\n","sig":null,"attributes":[{"value":"/ Not a valid unicode codepoint.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":12346,"byte_end":12380,"line_start":242,"line_end":242,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":933},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":12264,"byte_end":12280,"line_start":239,"line_end":239,"column_start":10,"column_end":26},"name":"InvalidUtf8Array","qualname":"::errors::InvalidUtf8Array","value":"pub enum InvalidUtf8Array {\n\n    /// Not a valid UTF-8 sequence.\n    Utf8(InvalidUtf8),\n\n    /// Not a valid unicode codepoint.\n    Codepoint(InvalidCodepoint),\n}","parent":null,"children":[{"krate":0,"index":934},{"krate":0,"index":937}],"decl_id":null,"docs":" Reasons why a byte array is not valid UTF-8, in sinking precedence.\n","sig":null,"attributes":[{"value":"/ Reasons why a byte array is not valid UTF-8, in sinking precedence.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":12140,"byte_end":12211,"line_start":237,"line_end":237,"column_start":1,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":962},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":13069,"byte_end":13073,"line_start":262,"line_end":262,"column_start":5,"column_end":9},"name":"Utf8","qualname":"::errors::InvalidUtf8Slice::Utf8","value":"InvalidUtf8Slice::Utf8(InvalidUtf8)","parent":{"krate":0,"index":961},"children":[],"decl_id":null,"docs":" Something is certainly wrong with the first byte.\n","sig":null,"attributes":[{"value":"/ Something is certainly wrong with the first byte.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":13011,"byte_end":13064,"line_start":261,"line_end":261,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":965},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":13134,"byte_end":13143,"line_start":264,"line_end":264,"column_start":5,"column_end":14},"name":"Codepoint","qualname":"::errors::InvalidUtf8Slice::Codepoint","value":"InvalidUtf8Slice::Codepoint(InvalidCodepoint)","parent":{"krate":0,"index":961},"children":[],"decl_id":null,"docs":" The encoded codepoint is invalid:\n","sig":null,"attributes":[{"value":"/ The encoded codepoint is invalid:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":13092,"byte_end":13129,"line_start":263,"line_end":263,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":968},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":13221,"byte_end":13229,"line_start":266,"line_end":266,"column_start":5,"column_end":13},"name":"TooShort","qualname":"::errors::InvalidUtf8Slice::TooShort","value":"InvalidUtf8Slice::TooShort(usize)","parent":{"krate":0,"index":961},"children":[],"decl_id":null,"docs":" The slice is too short; n bytes was required.\n","sig":null,"attributes":[{"value":"/ The slice is too short; n bytes was required.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":13167,"byte_end":13216,"line_start":265,"line_end":265,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":961},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":12988,"byte_end":13004,"line_start":260,"line_end":260,"column_start":10,"column_end":26},"name":"InvalidUtf8Slice","qualname":"::errors::InvalidUtf8Slice","value":"pub enum InvalidUtf8Slice {\n\n    /// Something is certainly wrong with the first byte.\n    Utf8(InvalidUtf8),\n\n    /// The encoded codepoint is invalid:\n    Codepoint(InvalidCodepoint),\n\n    /// The slice is too short; n bytes was required.\n    TooShort(usize),\n}","parent":null,"children":[{"krate":0,"index":962},{"krate":0,"index":965},{"krate":0,"index":968}],"decl_id":null,"docs":" Reasons why a byte slice is not valid UTF-8, in sinking precedence.\n","sig":null,"attributes":[{"value":"/ Reasons why a byte slice is not valid UTF-8, in sinking precedence.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":12864,"byte_end":12935,"line_start":258,"line_end":258,"column_start":1,"column_end":72}}]},{"kind":"Trait","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":14754,"byte_end":14762,"line_start":29,"line_end":29,"column_start":11,"column_end":19},"name":"U8UtfExt","qualname":"::traits::U8UtfExt","value":"U8UtfExt","parent":null,"children":[{"krate":0,"index":37},{"krate":0,"index":38}],"decl_id":null,"docs":" Methods for working with `u8`s as UTF-8 bytes.\n","sig":null,"attributes":[{"value":"/ Methods for working with `u8`s as UTF-8 bytes.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":14693,"byte_end":14743,"line_start":28,"line_end":28,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":15152,"byte_end":15168,"line_start":42,"line_end":42,"column_start":8,"column_end":24},"name":"extra_utf8_bytes","qualname":"::traits::U8UtfExt::extra_utf8_bytes","value":"pub fn extra_utf8_bytes(Self) -> Result<usize, InvalidUtf8FirstByte>","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" How many more bytes will you need to complete this codepoint?","sig":null,"attributes":[{"value":"/ How many more bytes will you need to complete this codepoint?","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":14769,"byte_end":14834,"line_start":30,"line_end":30,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":14839,"byte_end":14842,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":14847,"byte_end":14859,"line_start":32,"line_end":32,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":14864,"byte_end":14867,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ An error is returned if the byte is not a valid start of an UTF-8","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":14872,"byte_end":14941,"line_start":34,"line_end":34,"column_start":5,"column_end":74}},{"value":"/ codepoint:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":14946,"byte_end":14960,"line_start":35,"line_end":35,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":14965,"byte_end":14968,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ * `128..192`: ContinuationByte","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":14973,"byte_end":15007,"line_start":37,"line_end":37,"column_start":5,"column_end":39}},{"value":"/ * `248..`: TooLongSequence","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":15012,"byte_end":15042,"line_start":38,"line_end":38,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":15047,"byte_end":15050,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Values in 244..248 represent a too high codepoint, but do not cause an","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":15055,"byte_end":15129,"line_start":40,"line_end":40,"column_start":5,"column_end":79}},{"value":"/ error.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":15134,"byte_end":15144,"line_start":41,"line_end":41,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":15482,"byte_end":15508,"line_start":49,"line_end":49,"column_start":8,"column_end":34},"name":"extra_utf8_bytes_unchecked","qualname":"::traits::U8UtfExt::extra_utf8_bytes_unchecked","value":"pub fn extra_utf8_bytes_unchecked(Self) -> usize","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":" How many more bytes will you need to complete this codepoint?","sig":null,"attributes":[{"value":"/ How many more bytes will you need to complete this codepoint?","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":15219,"byte_end":15284,"line_start":44,"line_end":44,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":15289,"byte_end":15292,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function assumes that the byte is a valid UTF-8 start, and might","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":15297,"byte_end":15370,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ return any value otherwise. (but the function is pure and safe to call","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":15375,"byte_end":15449,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/ with any value).","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":15454,"byte_end":15474,"line_start":48,"line_end":48,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":19369,"byte_end":19378,"line_start":127,"line_end":127,"column_start":11,"column_end":20},"name":"U16UtfExt","qualname":"::traits::U16UtfExt","value":"U16UtfExt","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47}],"decl_id":null,"docs":" Methods for working with `u16`s as UTF-16 units.\n","sig":null,"attributes":[{"value":"/ Methods for working with `u16`s as UTF-16 units.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":19306,"byte_end":19358,"line_start":126,"line_end":126,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":19578,"byte_end":19600,"line_start":132,"line_end":132,"column_start":8,"column_end":30},"name":"utf16_needs_extra_unit","qualname":"::traits::U16UtfExt::utf16_needs_extra_unit","value":"pub fn utf16_needs_extra_unit(Self) -> Result<bool, InvalidUtf16FirstUnit>","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" Will you need an extra unit to complete this codepoint?","sig":null,"attributes":[{"value":"/ Will you need an extra unit to complete this codepoint?","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":19385,"byte_end":19444,"line_start":128,"line_end":128,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":19449,"byte_end":19452,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ Returns `Err` for trailing surrogates, `Ok(true)` for leading surrogates,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":19457,"byte_end":19534,"line_start":130,"line_end":130,"column_start":5,"column_end":82}},{"value":"/ and `Ok(false)` for others.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":19539,"byte_end":19570,"line_start":131,"line_end":131,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":19847,"byte_end":19873,"line_start":138,"line_end":138,"column_start":8,"column_end":34},"name":"is_utf16_leading_surrogate","qualname":"::traits::U16UtfExt::is_utf16_leading_surrogate","value":"pub fn is_utf16_leading_surrogate(Self) -> bool","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" Does this `u16` need another `u16` to complete a codepoint?\n Returns `(self & 0xfc00) == 0xd800`","sig":null,"attributes":[{"value":"/ Does this `u16` need another `u16` to complete a codepoint?","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":19651,"byte_end":19714,"line_start":134,"line_end":134,"column_start":5,"column_end":68}},{"value":"/ Returns `(self & 0xfc00) == 0xd800`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":19719,"byte_end":19758,"line_start":135,"line_end":135,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":19763,"byte_end":19766,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Is basically an unchecked variant of `utf16_needs_extra_unit()`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":19771,"byte_end":19839,"line_start":137,"line_end":137,"column_start":5,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":20618,"byte_end":20625,"line_start":161,"line_end":161,"column_start":11,"column_end":18},"name":"CharExt","qualname":"::traits::CharExt","value":"CharExt: Sized","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66}],"decl_id":null,"docs":" Extension trait for `char` that adds methods for converting to and from UTF-8 or UTF-16.\n","sig":null,"attributes":[{"value":"/ Extension trait for `char` that adds methods for converting to and from UTF-8 or UTF-16.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":20515,"byte_end":20607,"line_start":160,"line_end":160,"column_start":1,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":20826,"byte_end":20833,"line_start":166,"line_end":166,"column_start":8,"column_end":15},"name":"to_utf8","qualname":"::traits::CharExt::to_utf8","value":"pub fn to_utf8(Self) -> Utf8Char","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Get the UTF-8 representation of this codepoint.","sig":null,"attributes":[{"value":"/ Get the UTF-8 representation of this codepoint.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":20639,"byte_end":20690,"line_start":162,"line_end":162,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":20695,"byte_end":20698,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ `Utf8Char` is to `[u8;4]` what `char` is to `u32`:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":20703,"byte_end":20757,"line_start":164,"line_end":164,"column_start":5,"column_end":59}},{"value":"/ a restricted type that cannot be mutated internally.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":20762,"byte_end":20818,"line_start":165,"line_end":165,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":21048,"byte_end":21056,"line_start":172,"line_end":172,"column_start":8,"column_end":16},"name":"to_utf16","qualname":"::traits::CharExt::to_utf16","value":"pub fn to_utf16(Self) -> Utf16Char","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Get the UTF-16 representation of this codepoint.","sig":null,"attributes":[{"value":"/ Get the UTF-16 representation of this codepoint.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":20858,"byte_end":20910,"line_start":168,"line_end":168,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":20915,"byte_end":20918,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ `Utf16Char` is to `[u16;2]` what `char` is to `u32`:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":20923,"byte_end":20979,"line_start":170,"line_end":170,"column_start":5,"column_end":61}},{"value":"/ a restricted type that cannot be mutated internally.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":20984,"byte_end":21040,"line_start":171,"line_end":171,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":21408,"byte_end":21423,"line_start":179,"line_end":179,"column_start":8,"column_end":23},"name":"iter_utf8_bytes","qualname":"::traits::CharExt::iter_utf8_bytes","value":"pub fn iter_utf8_bytes(Self) -> Utf8Iterator","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Iterate over or [read](https://doc.rust-lang.org/std/io/trait.Read.html)\n the one to four bytes in the UTF-8 representation of this codepoint.","sig":null,"attributes":[{"value":"/ Iterate over or [read](https://doc.rust-lang.org/std/io/trait.Read.html)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":21082,"byte_end":21158,"line_start":174,"line_end":174,"column_start":5,"column_end":81}},{"value":"/ the one to four bytes in the UTF-8 representation of this codepoint.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":21163,"byte_end":21235,"line_start":175,"line_end":175,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":21240,"byte_end":21243,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ An identical alternative to the unstable `char.encode_utf8()`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":21248,"byte_end":21314,"line_start":177,"line_end":177,"column_start":5,"column_end":71}},{"value":"/ That method somehow still exist on stable, so I have to use a different name.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":21319,"byte_end":21400,"line_start":178,"line_end":178,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":21711,"byte_end":21727,"line_start":185,"line_end":185,"column_start":8,"column_end":24},"name":"iter_utf16_units","qualname":"::traits::CharExt::iter_utf16_units","value":"pub fn iter_utf16_units(Self) -> Utf16Iterator","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Iterate over the one or two units in the UTF-16 representation of this codepoint.","sig":null,"attributes":[{"value":"/ Iterate over the one or two units in the UTF-16 representation of this codepoint.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":21452,"byte_end":21537,"line_start":181,"line_end":181,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":21542,"byte_end":21545,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ An identical alternative to the unstable `char.encode_utf16()`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":21550,"byte_end":21617,"line_start":183,"line_end":183,"column_start":5,"column_end":72}},{"value":"/ That method somehow still exist on stable, so I have to use a different name.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":21622,"byte_end":21703,"line_start":184,"line_end":184,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":21950,"byte_end":21963,"line_start":192,"line_end":192,"column_start":8,"column_end":21},"name":"to_utf8_array","qualname":"::traits::CharExt::to_utf8_array","value":"pub fn to_utf8_array(Self) -> ([u8; ], usize)","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Convert this char to an UTF-8 array, and also return how many bytes of\n the array are used,","sig":null,"attributes":[{"value":"/ Convert this char to an UTF-8 array, and also return how many bytes of","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":21758,"byte_end":21832,"line_start":188,"line_end":188,"column_start":5,"column_end":79}},{"value":"/ the array are used,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":21837,"byte_end":21860,"line_start":189,"line_end":189,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":21865,"byte_end":21868,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ The returned array is left-aligned with unused bytes set to zero.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":21873,"byte_end":21942,"line_start":191,"line_end":191,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":22106,"byte_end":22120,"line_start":196,"line_end":196,"column_start":8,"column_end":22},"name":"to_utf16_tuple","qualname":"::traits::CharExt::to_utf16_tuple","value":"pub fn to_utf16_tuple(Self) -> (u16, Option<u16>)","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Convert this `char` to UTF-16.\n The second `u16` is `Some` if a surrogate pair is required.\n","sig":null,"attributes":[{"value":"/ Convert this `char` to UTF-16.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":21996,"byte_end":22030,"line_start":194,"line_end":194,"column_start":5,"column_end":39}},{"value":"/ The second `u16` is `Some` if a surrogate pair is required.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":22035,"byte_end":22098,"line_start":195,"line_end":195,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":23184,"byte_end":23205,"line_start":223,"line_end":223,"column_start":8,"column_end":29},"name":"from_utf8_slice_start","qualname":"::traits::CharExt::from_utf8_slice_start","value":"pub fn from_utf8_slice_start(&[u8]) -> Result<(Self, usize), InvalidUtf8Slice>","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Create a `char` from the start of an UTF-8 slice,\n and also return how many bytes were used.","sig":null,"attributes":[{"value":"/ Create a `char` from the start of an UTF-8 slice,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":22157,"byte_end":22210,"line_start":200,"line_end":200,"column_start":5,"column_end":58}},{"value":"/ and also return how many bytes were used.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":22215,"byte_end":22260,"line_start":201,"line_end":201,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":22265,"byte_end":22268,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":22273,"byte_end":22285,"line_start":203,"line_end":203,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":22290,"byte_end":22293,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Returns an `Err` if the slice is empty, doesn't start with a valid","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":22298,"byte_end":22368,"line_start":205,"line_end":205,"column_start":5,"column_end":75}},{"value":"/ UTF-8 sequence or is too short for the sequence.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":22373,"byte_end":22425,"line_start":206,"line_end":206,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":22430,"byte_end":22433,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":22438,"byte_end":22452,"line_start":208,"line_end":208,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":22457,"byte_end":22460,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":22465,"byte_end":22472,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::CharExt;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":22477,"byte_end":22509,"line_start":211,"line_end":211,"column_start":5,"column_end":37}},{"value":"/ use encode_unicode::error::InvalidUtf8Slice::*;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":22514,"byte_end":22565,"line_start":212,"line_end":212,"column_start":5,"column_end":56}},{"value":"/ use encode_unicode::error::InvalidUtf8::*;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":22570,"byte_end":22616,"line_start":213,"line_end":213,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":22621,"byte_end":22624,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(char::from_utf8_slice_start(&[b'A', b'B', b'C']), Ok(('A',1)));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":22629,"byte_end":22707,"line_start":215,"line_end":215,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(char::from_utf8_slice_start(&[0xdd, 0xbb]), Ok(('\\u{77b}',2)));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":22712,"byte_end":22790,"line_start":216,"line_end":216,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":22795,"byte_end":22798,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(char::from_utf8_slice_start(&[]), Err(TooShort(1)));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":22803,"byte_end":22870,"line_start":218,"line_end":218,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(char::from_utf8_slice_start(&[0xf0, 0x99]), Err(TooShort(4)));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":22875,"byte_end":22952,"line_start":219,"line_end":219,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(char::from_utf8_slice_start(&[0xee, b'F', 0x80]), Err(Utf8(NotAContinuationByte(1))));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":22957,"byte_end":23058,"line_start":220,"line_end":220,"column_start":5,"column_end":106}},{"value":"/ assert_eq!(char::from_utf8_slice_start(&[0xee, 0x99, 0x0f]), Err(Utf8(NotAContinuationByte(2))));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":23063,"byte_end":23164,"line_start":221,"line_end":221,"column_start":5,"column_end":106}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":23169,"byte_end":23176,"line_start":222,"line_end":222,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":23468,"byte_end":23490,"line_start":229,"line_end":229,"column_start":8,"column_end":30},"name":"from_utf16_slice_start","qualname":"::traits::CharExt::from_utf16_slice_start","value":"pub fn from_utf16_slice_start(&[u16])\n-> Result<(Self, usize), InvalidUtf16Slice>","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Create a `char` from the start of an UTF-16 slice,\n and also return how many units were used.","sig":null,"attributes":[{"value":"/ Create a `char` from the start of an UTF-16 slice,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":23265,"byte_end":23319,"line_start":225,"line_end":225,"column_start":5,"column_end":59}},{"value":"/ and also return how many units were used.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":23324,"byte_end":23369,"line_start":226,"line_end":226,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":23374,"byte_end":23377,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ If you want to continue after an error, continue with the next `u16` unit.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":23382,"byte_end":23460,"line_start":228,"line_end":228,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":24712,"byte_end":24727,"line_start":257,"line_end":257,"column_start":8,"column_end":23},"name":"from_utf8_array","qualname":"::traits::CharExt::from_utf8_array","value":"pub fn from_utf8_array([u8; ]) -> Result<Self, InvalidUtf8Array>","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Convert an UTF-8 sequence as returned from `.to_utf8_array()` into a `char`","sig":null,"attributes":[{"value":"/ Convert an UTF-8 sequence as returned from `.to_utf8_array()` into a `char`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":23554,"byte_end":23633,"line_start":232,"line_end":232,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":23638,"byte_end":23641,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The codepoint must start at the first byte, and leftover bytes are ignored.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":23646,"byte_end":23725,"line_start":234,"line_end":234,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":23730,"byte_end":23733,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":23738,"byte_end":23750,"line_start":236,"line_end":236,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":23755,"byte_end":23758,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Returns an `Err` if the array doesn't start with a valid UTF-8 sequence.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":23763,"byte_end":23839,"line_start":238,"line_end":238,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":23844,"byte_end":23847,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":23852,"byte_end":23866,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":23871,"byte_end":23874,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":23879,"byte_end":23886,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::CharExt;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":23891,"byte_end":23923,"line_start":243,"line_end":243,"column_start":5,"column_end":37}},{"value":"/ use encode_unicode::error::InvalidUtf8Array::*;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":23928,"byte_end":23979,"line_start":244,"line_end":244,"column_start":5,"column_end":56}},{"value":"/ use encode_unicode::error::InvalidUtf8::*;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":23984,"byte_end":24030,"line_start":245,"line_end":245,"column_start":5,"column_end":51}},{"value":"/ use encode_unicode::error::InvalidCodepoint::*;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":24035,"byte_end":24086,"line_start":246,"line_end":246,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":24091,"byte_end":24094,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(char::from_utf8_array([b'A', 0, 0, 0]), Ok('A'));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":24099,"byte_end":24163,"line_start":248,"line_end":248,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(char::from_utf8_array([0xf4, 0x8b, 0xbb, 0xbb]), Ok('\\u{10befb}'));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":24168,"byte_end":24250,"line_start":249,"line_end":249,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(char::from_utf8_array([b'A', b'B', b'C', b'D']), Ok('A'));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":24255,"byte_end":24328,"line_start":250,"line_end":250,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(char::from_utf8_array([0, 0, 0xcc, 0xbb]), Ok('\\0'));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":24333,"byte_end":24401,"line_start":251,"line_end":251,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":24406,"byte_end":24409,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(char::from_utf8_array([0xef, b'F', 0x80, 0x80]), Err(Utf8(NotAContinuationByte(1))));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":24414,"byte_end":24514,"line_start":253,"line_end":253,"column_start":5,"column_end":105}},{"value":"/ assert_eq!(char::from_utf8_array([0xc1, 0x80, 0, 0]), Err(Utf8(OverLong)));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":24519,"byte_end":24598,"line_start":254,"line_end":254,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(char::from_utf8_array([0xf7, 0xaa, 0x99, 0x88]), Err(Codepoint(TooHigh)));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":24603,"byte_end":24692,"line_start":255,"line_end":255,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":24697,"byte_end":24704,"line_start":256,"line_end":256,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":24867,"byte_end":24883,"line_start":260,"line_end":260,"column_start":8,"column_end":24},"name":"from_utf16_tuple","qualname":"::traits::CharExt::from_utf16_tuple","value":"pub fn from_utf16_tuple((u16, Option<u16>)) -> Result<Self, InvalidUtf16Tuple>","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Convert a UTF-16 pair as returned from `.to_utf16_tuple()` into a `char`.\n","sig":null,"attributes":[{"value":"/ Convert a UTF-16 pair as returned from `.to_utf16_tuple()` into a `char`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":24782,"byte_end":24859,"line_start":259,"line_end":259,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":25468,"byte_end":25499,"line_start":279,"line_end":279,"column_start":15,"column_end":46},"name":"from_utf8_exact_slice_unchecked","qualname":"::traits::CharExt::from_utf8_exact_slice_unchecked","value":"pub unsafe fn from_utf8_exact_slice_unchecked(&[u8]) -> Self","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Convert an UTF-8 sequence into a char.","sig":null,"attributes":[{"value":"/ Convert an UTF-8 sequence into a char.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":24953,"byte_end":24995,"line_start":263,"line_end":263,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":25000,"byte_end":25003,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ The length of the slice is taken as length of the sequence;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":25008,"byte_end":25071,"line_start":265,"line_end":265,"column_start":5,"column_end":68}},{"value":"/ it should be 1,2,3 or 4.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":25076,"byte_end":25104,"line_start":266,"line_end":266,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":25109,"byte_end":25112,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":25117,"byte_end":25129,"line_start":268,"line_end":268,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":25134,"byte_end":25137,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ The slice must contain exactly one, valid, UTF-8 sequence.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":25142,"byte_end":25204,"line_start":270,"line_end":270,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":25209,"byte_end":25212,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ Passing a slice that produces an invalid codepoint is always undefined","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":25217,"byte_end":25291,"line_start":272,"line_end":272,"column_start":5,"column_end":79}},{"value":"/ behavior; Later checks that the codepoint is valid can be removed","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":25296,"byte_end":25365,"line_start":273,"line_end":273,"column_start":5,"column_end":74}},{"value":"/ by the compiler.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":25370,"byte_end":25390,"line_start":274,"line_end":274,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":25395,"byte_end":25398,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":25403,"byte_end":25415,"line_start":276,"line_end":276,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":25420,"byte_end":25423,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ If the slice is empty","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":25428,"byte_end":25453,"line_start":278,"line_end":278,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":25619,"byte_end":25645,"line_start":282,"line_end":282,"column_start":15,"column_end":41},"name":"from_utf16_tuple_unchecked","qualname":"::traits::CharExt::from_utf16_tuple_unchecked","value":"pub unsafe fn from_utf16_tuple_unchecked((u16, Option<u16>)) -> Self","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Convert a UTF-16 tuple as returned from `.to_utf16_tuple()` into a `char`.\n","sig":null,"attributes":[{"value":"/ Convert a UTF-16 tuple as returned from `.to_utf16_tuple()` into a `char`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":25526,"byte_end":25604,"line_start":281,"line_end":281,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":25964,"byte_end":25981,"line_start":293,"line_end":293,"column_start":8,"column_end":25},"name":"from_u32_detailed","qualname":"::traits::CharExt::from_u32_detailed","value":"pub fn from_u32_detailed(u32) -> Result<Self, InvalidCodepoint>","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":" Perform some extra validations compared to `char::from_u32_unchecked()`","sig":null,"attributes":[{"value":"/ Perform some extra validations compared to `char::from_u32_unchecked()`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":25688,"byte_end":25763,"line_start":285,"line_end":285,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":25768,"byte_end":25771,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":25776,"byte_end":25788,"line_start":287,"line_end":287,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":25793,"byte_end":25796,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ This function will return an error if","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":25801,"byte_end":25842,"line_start":289,"line_end":289,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":25847,"byte_end":25850,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ * the value is greater than 0x10ffff","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":25855,"byte_end":25895,"line_start":291,"line_end":291,"column_start":5,"column_end":45}},{"value":"/ * the value is between 0xd800 and 0xdfff (inclusive)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":25900,"byte_end":25956,"line_start":292,"line_end":292,"column_start":5,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":33194,"byte_end":33200,"line_start":498,"line_end":498,"column_start":11,"column_end":17},"name":"StrExt","qualname":"::traits::StrExt","value":"StrExt: AsRef<str>","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100}],"decl_id":null,"docs":" Adds `.utf8chars()` and `.utf16chars()` iterator constructors to `&str`.\n","sig":null,"attributes":[{"value":"/ Adds `.utf8chars()` and `.utf16chars()` iterator constructors to `&str`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":33107,"byte_end":33183,"line_start":497,"line_end":497,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":33281,"byte_end":33290,"line_start":500,"line_end":500,"column_start":8,"column_end":17},"name":"utf8chars","qualname":"::traits::StrExt::utf8chars","value":"pub fn utf8chars(&Self) -> Utf8Chars","parent":{"krate":0,"index":96},"children":[],"decl_id":null,"docs":" Equivalent to `.chars()` but produces `Utf8Char`s.\n","sig":null,"attributes":[{"value":"/ Equivalent to `.chars()` but produces `Utf8Char`s.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":33219,"byte_end":33273,"line_start":499,"line_end":499,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":33379,"byte_end":33389,"line_start":502,"line_end":502,"column_start":8,"column_end":18},"name":"utf16chars","qualname":"::traits::StrExt::utf16chars","value":"pub fn utf16chars(&Self) -> Utf16Chars","parent":{"krate":0,"index":96},"children":[],"decl_id":null,"docs":" Equivalent to `.chars()` but produces `Utf16Char`s.\n","sig":null,"attributes":[{"value":"/ Equivalent to `.chars()` but produces `Utf16Char`s.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":33316,"byte_end":33371,"line_start":501,"line_end":501,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":33485,"byte_end":33501,"line_start":504,"line_end":504,"column_start":8,"column_end":24},"name":"utf8char_indices","qualname":"::traits::StrExt::utf8char_indices","value":"pub fn utf8char_indices(&Self) -> Utf8CharIndices","parent":{"krate":0,"index":96},"children":[],"decl_id":null,"docs":" Equivalent to `.char_indices()` but produces `Utf8Char`s.\n","sig":null,"attributes":[{"value":"/ Equivalent to `.char_indices()` but produces `Utf8Char`s.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":33416,"byte_end":33477,"line_start":503,"line_end":503,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":33603,"byte_end":33620,"line_start":506,"line_end":506,"column_start":8,"column_end":25},"name":"utf16char_indices","qualname":"::traits::StrExt::utf16char_indices","value":"pub fn utf16char_indices(&Self) -> Utf16CharIndices","parent":{"krate":0,"index":96},"children":[],"decl_id":null,"docs":" Equivalent to `.char_indices()` but produces `Utf16Char`s.\n","sig":null,"attributes":[{"value":"/ Equivalent to `.char_indices()` but produces `Utf16Char`s.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":33533,"byte_end":33595,"line_start":505,"line_end":505,"column_start":5,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":34671,"byte_end":34678,"line_start":546,"line_end":546,"column_start":11,"column_end":18},"name":"IterExt","qualname":"::traits::IterExt","value":"IterExt: Iterator + Sized","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110}],"decl_id":null,"docs":" Iterator methods that convert between `u8`s and `Utf8Char` or `u16`s and `Utf16Char`","sig":null,"attributes":[{"value":"/ Iterator methods that convert between `u8`s and `Utf8Char` or `u16`s and `Utf16Char`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":34457,"byte_end":34545,"line_start":542,"line_end":542,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":34546,"byte_end":34549,"line_start":543,"line_end":543,"column_start":1,"column_end":4}},{"value":"/ All the iterator adapters also accept iterators that produce references of","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":34550,"byte_end":34628,"line_start":544,"line_end":544,"column_start":1,"column_end":79}},{"value":"/ the type they convert from.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":34629,"byte_end":34660,"line_start":545,"line_end":545,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":36725,"byte_end":36733,"line_start":603,"line_end":603,"column_start":8,"column_end":16},"name":"to_bytes","qualname":"::traits::IterExt::to_bytes","value":"pub fn to_bytes(Self) -> Utf8CharSplitter<Self::Item, Self> where\nSelf::Item: Borrow<Utf8Char>","parent":{"krate":0,"index":106},"children":[],"decl_id":null,"docs":" Converts an iterator of `Utf8Char`s or `&Utf8Char`s to an iterator of\n `u8`s.","sig":null,"attributes":[{"value":"/ Converts an iterator of `Utf8Char`s or `&Utf8Char`s to an iterator of","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":34701,"byte_end":34774,"line_start":547,"line_end":547,"column_start":5,"column_end":78}},{"value":"/ `u8`s.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":34779,"byte_end":34789,"line_start":548,"line_end":548,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":34794,"byte_end":34797,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ Has the same effect as `.flat_map()` or `.flatten()`, but the returned","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":34802,"byte_end":34876,"line_start":550,"line_end":550,"column_start":5,"column_end":79}},{"value":"/ iterator is ~40% faster.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":34881,"byte_end":34909,"line_start":551,"line_end":551,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":34914,"byte_end":34917,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ The iterator also implements `Read`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":34922,"byte_end":34961,"line_start":553,"line_end":553,"column_start":5,"column_end":44}},{"value":"/ (when the `std` feature isn't disabled).  ","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":34966,"byte_end":35012,"line_start":554,"line_end":554,"column_start":5,"column_end":51}},{"value":"/ Reading will never produce an error, and calls to `.read()` and `.next()`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":35017,"byte_end":35094,"line_start":555,"line_end":555,"column_start":5,"column_end":82}},{"value":"/ can be mixed.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":35099,"byte_end":35116,"line_start":556,"line_end":556,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":35121,"byte_end":35124,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ The exact number of bytes cannot be known in advance, but `size_hint()`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":35129,"byte_end":35204,"line_start":558,"line_end":558,"column_start":5,"column_end":80}},{"value":"/ gives the possible range.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":35209,"byte_end":35238,"line_start":559,"line_end":559,"column_start":5,"column_end":34}},{"value":"/ (min: all remaining characters are ASCII, max: all require four bytes)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":35243,"byte_end":35317,"line_start":560,"line_end":560,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":35322,"byte_end":35325,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":35330,"byte_end":35344,"line_start":562,"line_end":562,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":35349,"byte_end":35352,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ From iterator of values:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":35357,"byte_end":35385,"line_start":564,"line_end":564,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":35390,"byte_end":35393,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":35398,"byte_end":35405,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::{IterExt, StrExt};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":35410,"byte_end":35452,"line_start":567,"line_end":567,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":35457,"byte_end":35460,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ let iterator = \"foo\".utf8chars();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":35465,"byte_end":35502,"line_start":569,"line_end":569,"column_start":5,"column_end":42}},{"value":"/ let mut bytes = [0; 4];","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":35507,"byte_end":35534,"line_start":570,"line_end":570,"column_start":5,"column_end":32}},{"value":"/ for (u,dst) in iterator.to_bytes().zip(&mut bytes) {*dst=u;}","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":35539,"byte_end":35603,"line_start":571,"line_end":571,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(&bytes, b\"foo\\0\");","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":35608,"byte_end":35641,"line_start":572,"line_end":572,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":35646,"byte_end":35653,"line_start":573,"line_end":573,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":35658,"byte_end":35661,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ From iterator of references:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":35666,"byte_end":35698,"line_start":575,"line_end":575,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":35703,"byte_end":35706,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ use encode_unicode::{IterExt, StrExt, Utf8Char};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":35812,"byte_end":35864,"line_start":579,"line_end":579,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":35869,"byte_end":35872,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ let chars: Vec<Utf8Char> = \"💣 bomb 💣\".utf8chars().collect();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":35877,"byte_end":35947,"line_start":581,"line_end":581,"column_start":5,"column_end":69}},{"value":"/ let bytes: Vec<u8> = chars.iter().to_bytes().collect();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":35952,"byte_end":36011,"line_start":582,"line_end":582,"column_start":5,"column_end":64}},{"value":"/ let flat_map: Vec<u8> = chars.iter().flat_map(|u8c| *u8c ).collect();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":36016,"byte_end":36089,"line_start":583,"line_end":583,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(bytes, flat_map);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":36094,"byte_end":36126,"line_start":584,"line_end":584,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":36131,"byte_end":36138,"line_start":585,"line_end":585,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":36143,"byte_end":36146,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ `Read`ing from it:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":36151,"byte_end":36173,"line_start":587,"line_end":587,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":36178,"byte_end":36181,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ use encode_unicode::{IterExt, StrExt};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":36287,"byte_end":36329,"line_start":591,"line_end":591,"column_start":5,"column_end":47}},{"value":"/ use std::io::Read;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":36334,"byte_end":36356,"line_start":592,"line_end":592,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":36361,"byte_end":36364,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ let s = \"Ååh‽\";","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":36369,"byte_end":36392,"line_start":594,"line_end":594,"column_start":5,"column_end":24}},{"value":"/ assert_eq!(s.len(), 8);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":36397,"byte_end":36424,"line_start":595,"line_end":595,"column_start":5,"column_end":32}},{"value":"/ let mut buf = [b'E'; 9];","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":36429,"byte_end":36457,"line_start":596,"line_end":596,"column_start":5,"column_end":33}},{"value":"/ let mut reader = s.utf8chars().to_bytes();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":36462,"byte_end":36508,"line_start":597,"line_end":597,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(reader.read(&mut buf[..]).unwrap(), 8);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":36513,"byte_end":36567,"line_start":598,"line_end":598,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(reader.read(&mut buf[..]).unwrap(), 0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":36572,"byte_end":36626,"line_start":599,"line_end":599,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(&buf[..8], s.as_bytes());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":36631,"byte_end":36671,"line_start":600,"line_end":600,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(buf[8], b'E');","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":36676,"byte_end":36705,"line_start":601,"line_end":601,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":36710,"byte_end":36717,"line_start":602,"line_end":602,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":38076,"byte_end":38084,"line_start":641,"line_end":641,"column_start":8,"column_end":16},"name":"to_units","qualname":"::traits::IterExt::to_units","value":"pub fn to_units(Self) -> Utf16CharSplitter<Self::Item, Self> where\nSelf::Item: Borrow<Utf16Char>","parent":{"krate":0,"index":106},"children":[],"decl_id":null,"docs":" Converts an iterator of `Utf16Char` (or `&Utf16Char`) to an iterator of\n `u16`s.","sig":null,"attributes":[{"value":"/ Converts an iterator of `Utf16Char` (or `&Utf16Char`) to an iterator of","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":36818,"byte_end":36893,"line_start":605,"line_end":605,"column_start":5,"column_end":80}},{"value":"/ `u16`s.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":36898,"byte_end":36909,"line_start":606,"line_end":606,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":36914,"byte_end":36917,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ Has the same effect as `.flat_map()` or `.flatten()`, but the returned","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":36922,"byte_end":36996,"line_start":608,"line_end":608,"column_start":5,"column_end":79}},{"value":"/ iterator is about twice as fast.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":37001,"byte_end":37037,"line_start":609,"line_end":609,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":37042,"byte_end":37045,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ The exact number of units cannot be known in advance, but `size_hint()`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":37050,"byte_end":37125,"line_start":611,"line_end":611,"column_start":5,"column_end":80}},{"value":"/ gives the possible range.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":37130,"byte_end":37159,"line_start":612,"line_end":612,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":37164,"byte_end":37167,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":37172,"byte_end":37186,"line_start":614,"line_end":614,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":37191,"byte_end":37194,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ From iterator of values:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":37199,"byte_end":37227,"line_start":616,"line_end":616,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":37232,"byte_end":37235,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":37240,"byte_end":37247,"line_start":618,"line_end":618,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::{IterExt, StrExt};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":37252,"byte_end":37294,"line_start":619,"line_end":619,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":37299,"byte_end":37302,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ let iterator = \"foo\".utf16chars();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":37307,"byte_end":37345,"line_start":621,"line_end":621,"column_start":5,"column_end":43}},{"value":"/ let mut units = [0; 4];","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":37350,"byte_end":37377,"line_start":622,"line_end":622,"column_start":5,"column_end":32}},{"value":"/ for (u,dst) in iterator.to_units().zip(&mut units) {*dst=u;}","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":37382,"byte_end":37446,"line_start":623,"line_end":623,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":37451,"byte_end":37454,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(units, ['f' as u16, 'o' as u16, 'o' as u16, 0]);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":37459,"byte_end":37522,"line_start":625,"line_end":625,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":37527,"byte_end":37534,"line_start":626,"line_end":626,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":37539,"byte_end":37542,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ From iterator of references:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":37547,"byte_end":37579,"line_start":628,"line_end":628,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":37584,"byte_end":37587,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ use encode_unicode::{IterExt, StrExt, Utf16Char};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":37693,"byte_end":37746,"line_start":632,"line_end":632,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":37751,"byte_end":37754,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ // (💣 takes two units)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":37759,"byte_end":37788,"line_start":634,"line_end":634,"column_start":5,"column_end":31}},{"value":"/ let chars: Vec<Utf16Char> = \"💣 bomb 💣\".utf16chars().collect();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":37793,"byte_end":37865,"line_start":635,"line_end":635,"column_start":5,"column_end":71}},{"value":"/ let units: Vec<u16> = chars.iter().to_units().collect();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":37870,"byte_end":37930,"line_start":636,"line_end":636,"column_start":5,"column_end":65}},{"value":"/ let flat_map: Vec<u16> = chars.iter().flat_map(|u16c| *u16c ).collect();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":37935,"byte_end":38011,"line_start":637,"line_end":637,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":38016,"byte_end":38019,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(units, flat_map);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":38024,"byte_end":38056,"line_start":639,"line_end":639,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":38061,"byte_end":38068,"line_start":640,"line_end":640,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":40258,"byte_end":40270,"line_start":696,"line_end":696,"column_start":8,"column_end":20},"name":"to_utf8chars","qualname":"::traits::IterExt::to_utf8chars","value":"pub fn to_utf8chars(Self) -> Utf8CharMerger<Self::Item, Self> where\nSelf::Item: Borrow<u8>","parent":{"krate":0,"index":106},"children":[],"decl_id":null,"docs":" Decodes bytes as UTF-8 and groups them into `Utf8Char`s","sig":null,"attributes":[{"value":"/ Decodes bytes as UTF-8 and groups them into `Utf8Char`s","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":38171,"byte_end":38230,"line_start":643,"line_end":643,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":38235,"byte_end":38238,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ When errors (invalid values or sequences) are encountered,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":38243,"byte_end":38305,"line_start":645,"line_end":645,"column_start":5,"column_end":67}},{"value":"/ it continues with the byte right after the start of the error sequence.  ","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":38310,"byte_end":38387,"line_start":646,"line_end":646,"column_start":5,"column_end":82}},{"value":"/ This is neither the most intelligent choiche (sometimes it is guaranteed to","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":38392,"byte_end":38471,"line_start":647,"line_end":647,"column_start":5,"column_end":84}},{"value":"/  produce another error), nor the easiest to implement, but I believe it to","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":38476,"byte_end":38554,"line_start":648,"line_end":648,"column_start":5,"column_end":83}},{"value":"/ be the most predictable.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":38559,"byte_end":38587,"line_start":649,"line_end":649,"column_start":5,"column_end":33}},{"value":"/ It also means that ASCII characters are never hidden by errors.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":38592,"byte_end":38659,"line_start":650,"line_end":650,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":38664,"byte_end":38667,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":38672,"byte_end":38686,"line_start":652,"line_end":652,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":38691,"byte_end":38694,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ Replace all errors with u+FFFD REPLACEMENT_CHARACTER:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":38699,"byte_end":38756,"line_start":654,"line_end":654,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":38761,"byte_end":38768,"line_start":655,"line_end":655,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::{Utf8Char, IterExt};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":38773,"byte_end":38817,"line_start":656,"line_end":656,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":38822,"byte_end":38825,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ let mut buf = [b'\\0'; 255];","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":38830,"byte_end":38861,"line_start":658,"line_end":658,"column_start":5,"column_end":36}},{"value":"/ let len = b\"foo\\xCFbar\".iter()","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":38866,"byte_end":38900,"line_start":659,"line_end":659,"column_start":5,"column_end":39}},{"value":"/     .to_utf8chars()","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":38905,"byte_end":38928,"line_start":660,"line_end":660,"column_start":5,"column_end":28}},{"value":"/     .flat_map(|r| r.unwrap_or(Utf8Char::from('\\u{FFFD}')).into_iter() )","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":38933,"byte_end":39008,"line_start":661,"line_end":661,"column_start":5,"column_end":80}},{"value":"/     .zip(&mut buf[..])","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":39013,"byte_end":39039,"line_start":662,"line_end":662,"column_start":5,"column_end":31}},{"value":"/     .map(|(byte, dst)| *dst = byte )","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":39044,"byte_end":39084,"line_start":663,"line_end":663,"column_start":5,"column_end":45}},{"value":"/     .count();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":39089,"byte_end":39106,"line_start":664,"line_end":664,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":39111,"byte_end":39114,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&buf[..len], \"foo\\u{FFFD}bar\".as_bytes());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":39119,"byte_end":39176,"line_start":666,"line_end":666,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":39181,"byte_end":39188,"line_start":667,"line_end":667,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":39193,"byte_end":39196,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ Collect everything up until the first error into a string:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":39201,"byte_end":39263,"line_start":669,"line_end":669,"column_start":5,"column_end":67}},{"value":"/ use encode_unicode::iterator::Utf8CharMerger;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":39369,"byte_end":39418,"line_start":672,"line_end":672,"column_start":5,"column_end":54}},{"value":"/ let mut good = String::new();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":39423,"byte_end":39456,"line_start":673,"line_end":673,"column_start":5,"column_end":38}},{"value":"/ for r in Utf8CharMerger::from(b\"foo\\xcc\\xbbbar\\xcc\\xddbaz\") {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":39461,"byte_end":39526,"line_start":674,"line_end":674,"column_start":5,"column_end":70}},{"value":"/     if let Ok(uc) = r {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":39531,"byte_end":39558,"line_start":675,"line_end":675,"column_start":5,"column_end":32}},{"value":"/         good.push_str(uc.as_str());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":39563,"byte_end":39602,"line_start":676,"line_end":676,"column_start":5,"column_end":44}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":39607,"byte_end":39623,"line_start":677,"line_end":677,"column_start":5,"column_end":21}},{"value":"/         break;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":39628,"byte_end":39646,"line_start":678,"line_end":678,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":39651,"byte_end":39660,"line_start":679,"line_end":679,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":39665,"byte_end":39670,"line_start":680,"line_end":680,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(good, \"foo̻bar\");","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":39675,"byte_end":39708,"line_start":681,"line_end":681,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":39713,"byte_end":39720,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":39725,"byte_end":39728,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ Abort decoding on error:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":39733,"byte_end":39761,"line_start":684,"line_end":684,"column_start":5,"column_end":33}},{"value":"/ use encode_unicode::{IterExt, Utf8Char};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":39867,"byte_end":39911,"line_start":687,"line_end":687,"column_start":5,"column_end":49}},{"value":"/ use encode_unicode::error::{InvalidUtf8Slice, InvalidUtf8};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":39916,"byte_end":39979,"line_start":688,"line_end":688,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":39984,"byte_end":39987,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ let result = b\"ab\\0\\xe0\\xbc\\xa9 \\xf3\\x80\\x77\".iter()","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":39992,"byte_end":40048,"line_start":690,"line_end":690,"column_start":5,"column_end":61}},{"value":"/     .to_utf8chars()","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":40053,"byte_end":40076,"line_start":691,"line_end":691,"column_start":5,"column_end":28}},{"value":"/     .collect::<Result<String,InvalidUtf8Slice>>();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":40081,"byte_end":40135,"line_start":692,"line_end":692,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":40140,"byte_end":40143,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Err(InvalidUtf8Slice::Utf8(InvalidUtf8::NotAContinuationByte(2))));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":40148,"byte_end":40238,"line_start":694,"line_end":694,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":40243,"byte_end":40250,"line_start":695,"line_end":695,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":42295,"byte_end":42308,"line_start":745,"line_end":745,"column_start":8,"column_end":21},"name":"to_utf16chars","qualname":"::traits::IterExt::to_utf16chars","value":"pub fn to_utf16chars(Self) -> Utf16CharMerger<Self::Item, Self> where\nSelf::Item: Borrow<u16>","parent":{"krate":0,"index":106},"children":[],"decl_id":null,"docs":" Decodes bytes as UTF-16 and groups them into `Utf16Char`s","sig":null,"attributes":[{"value":"/ Decodes bytes as UTF-16 and groups them into `Utf16Char`s","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":40347,"byte_end":40408,"line_start":698,"line_end":698,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":40413,"byte_end":40416,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ When errors (unmatched leading surrogates or unexpected trailing surrogates)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":40421,"byte_end":40501,"line_start":700,"line_end":700,"column_start":5,"column_end":85}},{"value":"/ are encountered, an error is produced for every unit.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":40506,"byte_end":40563,"line_start":701,"line_end":701,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":40568,"byte_end":40571,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":40576,"byte_end":40590,"line_start":703,"line_end":703,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":40595,"byte_end":40598,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ Replace errors with '�':","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":40603,"byte_end":40633,"line_start":705,"line_end":705,"column_start":5,"column_end":33}},{"value":"/ use encode_unicode::{IterExt, Utf16Char};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":40739,"byte_end":40784,"line_start":708,"line_end":708,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":40789,"byte_end":40792,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ let slice = &['a' as u16, 0xdf00, 0xd83c, 0xdca0][..];","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":40797,"byte_end":40855,"line_start":710,"line_end":710,"column_start":5,"column_end":63}},{"value":"/ let string = slice.iter()","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":40860,"byte_end":40889,"line_start":711,"line_end":711,"column_start":5,"column_end":34}},{"value":"/     .to_utf16chars()","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":40894,"byte_end":40918,"line_start":712,"line_end":712,"column_start":5,"column_end":29}},{"value":"/     .map(|r| r.unwrap_or(Utf16Char::from('\\u{fffd}')) ) // REPLACEMENT_CHARACTER","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":40923,"byte_end":41007,"line_start":713,"line_end":713,"column_start":5,"column_end":89}},{"value":"/     .collect::<String>();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":41012,"byte_end":41041,"line_start":714,"line_end":714,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":41046,"byte_end":41049,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(string, \"a�🂠\");","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":41054,"byte_end":41089,"line_start":716,"line_end":716,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":41094,"byte_end":41101,"line_start":717,"line_end":717,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":41106,"byte_end":41109,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":41114,"byte_end":41121,"line_start":719,"line_end":719,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::{IterExt, Utf16Char};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":41126,"byte_end":41171,"line_start":720,"line_end":720,"column_start":5,"column_end":50}},{"value":"/ use encode_unicode::error::Utf16PairError::*;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":41176,"byte_end":41225,"line_start":721,"line_end":721,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":41230,"byte_end":41233,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ let slice = [0xdcba, 0xdeff, 0xd8be, 0xdeee, 'Y' as u16, 0xdab1, 0xdab1];","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":41238,"byte_end":41315,"line_start":723,"line_end":723,"column_start":5,"column_end":82}},{"value":"/ let mut iter = slice.iter().to_utf16chars();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":41320,"byte_end":41368,"line_start":724,"line_end":724,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(iter.size_hint(), (3, Some(7)));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":41373,"byte_end":41420,"line_start":725,"line_end":725,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(iter.next(), Some(Err(UnexpectedTrailingSurrogate)));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":41425,"byte_end":41493,"line_start":726,"line_end":726,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(iter.next(), Some(Err(UnexpectedTrailingSurrogate)));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":41498,"byte_end":41566,"line_start":727,"line_end":727,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(iter.next(), Some(Ok(Utf16Char::from('\\u{3faee}'))));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":41571,"byte_end":41639,"line_start":728,"line_end":728,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(iter.next(), Some(Ok(Utf16Char::from('Y'))));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":41644,"byte_end":41704,"line_start":729,"line_end":729,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(iter.next(), Some(Err(UnmatchedLeadingSurrogate)));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":41709,"byte_end":41775,"line_start":730,"line_end":730,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(iter.next(), Some(Err(Incomplete)));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":41780,"byte_end":41831,"line_start":731,"line_end":731,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(iter.into_remaining_units().next(), None);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":41836,"byte_end":41893,"line_start":732,"line_end":732,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":41898,"byte_end":41905,"line_start":733,"line_end":733,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":41910,"byte_end":41913,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ Search for a codepoint and return the codepoint index of the first match:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":41918,"byte_end":41995,"line_start":735,"line_end":735,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":42000,"byte_end":42007,"line_start":736,"line_end":736,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::{IterExt, Utf16Char};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":42012,"byte_end":42057,"line_start":737,"line_end":737,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":42062,"byte_end":42065,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ let position = [0xd875, 0xdd4f, '≈' as u16, '2' as u16].iter()","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":42070,"byte_end":42138,"line_start":739,"line_end":739,"column_start":5,"column_end":71}},{"value":"/     .to_utf16chars()","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":42143,"byte_end":42167,"line_start":740,"line_end":740,"column_start":5,"column_end":29}},{"value":"/     .position(|r| r == Ok(Utf16Char::from('≈')) );","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":42172,"byte_end":42228,"line_start":741,"line_end":741,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":42233,"byte_end":42236,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(position, Some(1));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":42241,"byte_end":42275,"line_start":743,"line_end":743,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":42280,"byte_end":42287,"line_start":744,"line_end":744,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":43291,"byte_end":43299,"line_start":769,"line_end":769,"column_start":11,"column_end":19},"name":"SliceExt","qualname":"::traits::SliceExt","value":"SliceExt: Index<RangeFull>","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119}],"decl_id":null,"docs":" Methods for iterating over `u8` and `u16` slices as UTF-8 or UTF-16 characters.","sig":null,"attributes":[{"value":"/ Methods for iterating over `u8` and `u16` slices as UTF-8 or UTF-16 characters.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":42948,"byte_end":43031,"line_start":764,"line_end":764,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":43032,"byte_end":43035,"line_start":765,"line_end":765,"column_start":1,"column_end":4}},{"value":"/ The iterators are slightly faster than the similar methods in [`IterExt`](trait.IterExt.html)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":43036,"byte_end":43133,"line_start":766,"line_end":766,"column_start":1,"column_end":98}},{"value":"/ because they con \"push back\" items for free after errors and don't need a","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":43134,"byte_end":43211,"line_start":767,"line_end":767,"column_start":1,"column_end":78}},{"value":"/ separate buffer that must be checked on every call to `.next()`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":43212,"byte_end":43280,"line_start":768,"line_end":768,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":46368,"byte_end":46384,"line_start":836,"line_end":836,"column_start":8,"column_end":24},"name":"utf8char_indices","qualname":"::traits::SliceExt::utf8char_indices","value":"pub fn utf8char_indices(&Self) -> Utf8CharDecoder where\nSelf::Output: Borrow<[u8]>","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Decode `u8` slices as UTF-8 and iterate over the codepoints as `Utf8Char`s,","sig":null,"attributes":[{"value":"/ Decode `u8` slices as UTF-8 and iterate over the codepoints as `Utf8Char`s,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":43324,"byte_end":43403,"line_start":770,"line_end":770,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":43408,"byte_end":43411,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":43416,"byte_end":43430,"line_start":772,"line_end":772,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":43435,"byte_end":43438,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ Get the index and error type of the first error:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":43443,"byte_end":43495,"line_start":774,"line_end":774,"column_start":5,"column_end":57}},{"value":"/ use encode_unicode::{SliceExt, Utf8Char};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":43601,"byte_end":43646,"line_start":777,"line_end":777,"column_start":5,"column_end":50}},{"value":"/ use encode_unicode::error::InvalidUtf8Slice;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":43651,"byte_end":43699,"line_start":778,"line_end":778,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":43704,"byte_end":43707,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ let slice = b\"ab\\0\\xe0\\xbc\\xa9 \\xf3\\x80\\x77\";","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":43712,"byte_end":43761,"line_start":780,"line_end":780,"column_start":5,"column_end":54}},{"value":"/ let result = slice.utf8char_indices()","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":43766,"byte_end":43807,"line_start":781,"line_end":781,"column_start":5,"column_end":46}},{"value":"/     .map(|(offset,r,length)| r.map_err(|e| (offset,e,length) ) )","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":43812,"byte_end":43880,"line_start":782,"line_end":782,"column_start":5,"column_end":73}},{"value":"/     .collect::<Result<String,(usize,InvalidUtf8Slice,usize)>>();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":43885,"byte_end":43953,"line_start":783,"line_end":783,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":43958,"byte_end":43961,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Err((7, InvalidUtf8Slice::TooShort(4), 1)));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":43966,"byte_end":44033,"line_start":785,"line_end":785,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":44038,"byte_end":44045,"line_start":786,"line_end":786,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":44050,"byte_end":44053,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":44058,"byte_end":44065,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::{SliceExt, Utf8Char};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":44070,"byte_end":44115,"line_start":789,"line_end":789,"column_start":5,"column_end":50}},{"value":"/ use std::error::Error;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":44120,"byte_end":44146,"line_start":790,"line_end":790,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":44151,"byte_end":44154,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ let slice = b\"\\xf0\\xbf\\xbf\\xbfXY\\xdd\\xbb\\xe1\\x80\\x99quux123\";","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":44159,"byte_end":44224,"line_start":792,"line_end":792,"column_start":5,"column_end":70}},{"value":"/ let mut fixed_size = [Utf8Char::default(); 8];","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":44229,"byte_end":44279,"line_start":793,"line_end":793,"column_start":5,"column_end":55}},{"value":"/ for (cp_i, (byte_index, r, _)) in slice.utf8char_indices().enumerate().take(8) {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":44284,"byte_end":44368,"line_start":794,"line_end":794,"column_start":5,"column_end":89}},{"value":"/     match r {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":44373,"byte_end":44390,"line_start":795,"line_end":795,"column_start":5,"column_end":22}},{"value":"/         Ok(u8c) => fixed_size[cp_i] = u8c,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":44395,"byte_end":44441,"line_start":796,"line_end":796,"column_start":5,"column_end":51}},{"value":"/         Err(e) => panic!(\"Invalid codepoint at index {} ({})\", cp_i, e.description()),","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":44446,"byte_end":44536,"line_start":797,"line_end":797,"column_start":5,"column_end":95}},{"value":"/     }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":44541,"byte_end":44550,"line_start":798,"line_end":798,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":44555,"byte_end":44560,"line_start":799,"line_end":799,"column_start":5,"column_end":10}},{"value":"/ let chars = ['\\u{3ffff}', 'X', 'Y', '\\u{77b}', '\\u{1019}', 'q', 'u', 'u'];","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":44565,"byte_end":44643,"line_start":800,"line_end":800,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(fixed_size, chars);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":44648,"byte_end":44682,"line_start":801,"line_end":801,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":44687,"byte_end":44694,"line_start":802,"line_end":802,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":44699,"byte_end":44702,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ use encode_unicode::{SliceExt, Utf8Char};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":44808,"byte_end":44853,"line_start":806,"line_end":806,"column_start":5,"column_end":50}},{"value":"/ use encode_unicode::error::InvalidUtf8Slice::*;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":44858,"byte_end":44909,"line_start":807,"line_end":807,"column_start":5,"column_end":56}},{"value":"/ use encode_unicode::error::{InvalidUtf8, InvalidUtf8FirstByte, InvalidCodepoint};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":44914,"byte_end":44999,"line_start":808,"line_end":808,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":45004,"byte_end":45007,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ let bytes = b\"\\xfa-\\xf4\\x8f\\xee\\xa1\\x8f-\\xed\\xa9\\x87\\xf0\\xcc\\xbb\";","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":45012,"byte_end":45082,"line_start":810,"line_end":810,"column_start":5,"column_end":75}},{"value":"/ let mut errors = Vec::new();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":45087,"byte_end":45119,"line_start":811,"line_end":811,"column_start":5,"column_end":37}},{"value":"/ let mut lengths = Vec::new();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":45124,"byte_end":45157,"line_start":812,"line_end":812,"column_start":5,"column_end":38}},{"value":"/ let mut string = String::new();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":45162,"byte_end":45197,"line_start":813,"line_end":813,"column_start":5,"column_end":40}},{"value":"/ for (offset,result,length) in bytes.utf8char_indices() {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":45202,"byte_end":45262,"line_start":814,"line_end":814,"column_start":5,"column_end":65}},{"value":"/     lengths.push((offset,length));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":45267,"byte_end":45305,"line_start":815,"line_end":815,"column_start":5,"column_end":43}},{"value":"/     let c = result.unwrap_or_else(|error| {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":45310,"byte_end":45357,"line_start":816,"line_end":816,"column_start":5,"column_end":52}},{"value":"/         errors.push((offset,error));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":45362,"byte_end":45402,"line_start":817,"line_end":817,"column_start":5,"column_end":45}},{"value":"/         Utf8Char::from('\\u{fffd}') // replacement character","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":45407,"byte_end":45470,"line_start":818,"line_end":818,"column_start":5,"column_end":68}},{"value":"/     });","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":45475,"byte_end":45486,"line_start":819,"line_end":819,"column_start":5,"column_end":16}},{"value":"/     string.push_str(c.as_str());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":45491,"byte_end":45527,"line_start":820,"line_end":820,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":45532,"byte_end":45537,"line_start":821,"line_end":821,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":45542,"byte_end":45545,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(string, \"�-��\\u{e84f}-����\\u{33b}\");","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":45550,"byte_end":45615,"line_start":823,"line_end":823,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(lengths, [(0,1), (1,1), (2,1), (3,1), (4,3), (7,1),","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":45620,"byte_end":45686,"line_start":824,"line_end":824,"column_start":5,"column_end":71}},{"value":"/                      (8,1), (9,1), (10,1), (11,1), (12,2)]);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":45691,"byte_end":45755,"line_start":825,"line_end":825,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(errors, [","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":45760,"byte_end":45784,"line_start":826,"line_end":826,"column_start":5,"column_end":29}},{"value":"/     ( 0, Utf8(InvalidUtf8::FirstByte(InvalidUtf8FirstByte::TooLongSeqence))),","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":45789,"byte_end":45870,"line_start":827,"line_end":827,"column_start":5,"column_end":86}},{"value":"/     ( 2, Utf8(InvalidUtf8::NotAContinuationByte(2))),","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":45875,"byte_end":45932,"line_start":828,"line_end":828,"column_start":5,"column_end":62}},{"value":"/     ( 3, Utf8(InvalidUtf8::FirstByte(InvalidUtf8FirstByte::ContinuationByte))),","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":45937,"byte_end":46020,"line_start":829,"line_end":829,"column_start":5,"column_end":88}},{"value":"/     ( 8, Codepoint(InvalidCodepoint::Utf16Reserved)),","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":46025,"byte_end":46082,"line_start":830,"line_end":830,"column_start":5,"column_end":62}},{"value":"/     ( 9, Utf8(InvalidUtf8::FirstByte(InvalidUtf8FirstByte::ContinuationByte))),","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":46087,"byte_end":46170,"line_start":831,"line_end":831,"column_start":5,"column_end":88}},{"value":"/     (10, Utf8(InvalidUtf8::FirstByte(InvalidUtf8FirstByte::ContinuationByte))),","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":46175,"byte_end":46258,"line_start":832,"line_end":832,"column_start":5,"column_end":88}},{"value":"/     (11, TooShort(4)), // (but it was not the last element returned!)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":46263,"byte_end":46336,"line_start":833,"line_end":833,"column_start":5,"column_end":78}},{"value":"/ ]);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":46341,"byte_end":46348,"line_start":834,"line_end":834,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":46353,"byte_end":46360,"line_start":835,"line_end":835,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":48912,"byte_end":48929,"line_start":897,"line_end":897,"column_start":8,"column_end":25},"name":"utf16char_indices","qualname":"::traits::SliceExt::utf16char_indices","value":"pub fn utf16char_indices(&Self) -> Utf16CharDecoder where\nSelf::Output: Borrow<[u16]>","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Decode `u16` slices as UTF-16 and iterate over the codepoints as `Utf16Char`s,","sig":null,"attributes":[{"value":"/ Decode `u16` slices as UTF-16 and iterate over the codepoints as `Utf16Char`s,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":46451,"byte_end":46533,"line_start":839,"line_end":839,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":46538,"byte_end":46541,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ The iterator produces `(usize,Result<Utf16Char,Utf16Error>,usize)`,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":46546,"byte_end":46617,"line_start":841,"line_end":841,"column_start":5,"column_end":76}},{"value":"/ and the slice is validated as you go.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":46622,"byte_end":46663,"line_start":842,"line_end":842,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":46668,"byte_end":46671,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ The first `usize` contains the offset from the start of the slice and","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":46676,"byte_end":46749,"line_start":844,"line_end":844,"column_start":5,"column_end":78}},{"value":"/ the last `usize` contains the length of the codepoint or error.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":46754,"byte_end":46821,"line_start":845,"line_end":845,"column_start":5,"column_end":72}},{"value":"/ The length is either 1 or 2, and always 1 for errors.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":46826,"byte_end":46883,"line_start":846,"line_end":846,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":46888,"byte_end":46891,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":46896,"byte_end":46910,"line_start":848,"line_end":848,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":46915,"byte_end":46918,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ use encode_unicode::{SliceExt, Utf8Char};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":47024,"byte_end":47069,"line_start":852,"line_end":852,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":47074,"byte_end":47077,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ let slice = &['a' as u16, 0xdf00, 0xd83c, 0xdca0][..];","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":47082,"byte_end":47140,"line_start":854,"line_end":854,"column_start":5,"column_end":63}},{"value":"/ let mut errors = Vec::new();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":47145,"byte_end":47177,"line_start":855,"line_end":855,"column_start":5,"column_end":37}},{"value":"/ let string = slice.utf16char_indices().map(|(offset,r,_)| match r {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":47182,"byte_end":47253,"line_start":856,"line_end":856,"column_start":5,"column_end":76}},{"value":"/     Ok(u16c) => Utf8Char::from(u16c),","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":47258,"byte_end":47299,"line_start":857,"line_end":857,"column_start":5,"column_end":46}},{"value":"/     Err(_) => {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":47304,"byte_end":47323,"line_start":858,"line_end":858,"column_start":5,"column_end":24}},{"value":"/         errors.push(offset);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":47328,"byte_end":47360,"line_start":859,"line_end":859,"column_start":5,"column_end":37}},{"value":"/         Utf8Char::from('\\u{fffd}') // REPLACEMENT_CHARACTER","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":47365,"byte_end":47428,"line_start":860,"line_end":860,"column_start":5,"column_end":68}},{"value":"/     }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":47433,"byte_end":47442,"line_start":861,"line_end":861,"column_start":5,"column_end":14}},{"value":"/ }).collect::<String>();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":47447,"byte_end":47474,"line_start":862,"line_end":862,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":47479,"byte_end":47482,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(string, \"a�🂠\");","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":47487,"byte_end":47522,"line_start":864,"line_end":864,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(errors, [1]);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":47527,"byte_end":47555,"line_start":865,"line_end":865,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":47560,"byte_end":47567,"line_start":866,"line_end":866,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":47572,"byte_end":47575,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ Search for a codepoint and return its unit and codepoint index.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":47580,"byte_end":47647,"line_start":868,"line_end":868,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":47652,"byte_end":47659,"line_start":869,"line_end":869,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::{SliceExt, Utf16Char};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":47664,"byte_end":47710,"line_start":870,"line_end":870,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":47715,"byte_end":47718,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ let slice = [0xd875,/*'𝕏'*/ 0xdd4f, '≈' as u16, '2' as u16];","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":47723,"byte_end":47792,"line_start":872,"line_end":872,"column_start":5,"column_end":69}},{"value":"/ let position = slice.utf16char_indices()","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":47797,"byte_end":47841,"line_start":873,"line_end":873,"column_start":5,"column_end":49}},{"value":"/     .enumerate()","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":47846,"byte_end":47866,"line_start":874,"line_end":874,"column_start":5,"column_end":25}},{"value":"/     .find(|&(_,(_,r,_))| r == Ok(Utf16Char::from('≈')) )","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":47871,"byte_end":47933,"line_start":875,"line_end":875,"column_start":5,"column_end":65}},{"value":"/     .map(|(codepoint, (offset, _, _))| (codepoint, offset) );","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":47938,"byte_end":48003,"line_start":876,"line_end":876,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":48008,"byte_end":48011,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(position, Some((1,2)));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":48016,"byte_end":48054,"line_start":878,"line_end":878,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":48059,"byte_end":48066,"line_start":879,"line_end":879,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":48071,"byte_end":48074,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ Error types:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":48079,"byte_end":48095,"line_start":881,"line_end":881,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":48100,"byte_end":48107,"line_start":882,"line_end":882,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::{SliceExt, Utf16Char};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":48112,"byte_end":48158,"line_start":883,"line_end":883,"column_start":5,"column_end":51}},{"value":"/ use encode_unicode::error::Utf16PairError::*;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":48163,"byte_end":48212,"line_start":884,"line_end":884,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":48217,"byte_end":48220,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ let slice = [0xdcba, 0xdeff, 0xd8be, 0xdeee, 'λ' as u16, 0xdab1, 0xdab1];","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":48225,"byte_end":48303,"line_start":886,"line_end":886,"column_start":5,"column_end":82}},{"value":"/ let mut iter = slice.utf16char_indices();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":48308,"byte_end":48353,"line_start":887,"line_end":887,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(iter.next(), Some((0, Err(UnexpectedTrailingSurrogate), 1)));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":48358,"byte_end":48434,"line_start":888,"line_end":888,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(iter.next(), Some((1, Err(UnexpectedTrailingSurrogate), 1)));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":48439,"byte_end":48515,"line_start":889,"line_end":889,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(iter.next(), Some((2, Ok(Utf16Char::from('\\u{3faee}')), 2)));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":48520,"byte_end":48596,"line_start":890,"line_end":890,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(iter.next(), Some((4, Ok(Utf16Char::from('λ')), 1)));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":48601,"byte_end":48670,"line_start":891,"line_end":891,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(iter.next(), Some((5, Err(UnmatchedLeadingSurrogate), 1)));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":48675,"byte_end":48749,"line_start":892,"line_end":892,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(iter.next(), Some((6, Err(Incomplete), 1)));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":48754,"byte_end":48813,"line_start":893,"line_end":893,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(iter.next(), None);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":48818,"byte_end":48852,"line_start":894,"line_end":894,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(iter.as_slice(), [])","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":48857,"byte_end":48892,"line_start":895,"line_end":895,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":48897,"byte_end":48904,"line_start":896,"line_end":896,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":992},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":50914,"byte_end":50922,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"Utf8Char","qualname":"::utf8_char::Utf8Char","value":"Utf8Char {  }","parent":null,"children":[{"krate":0,"index":993}],"decl_id":null,"docs":" An unicode codepoint stored as UTF-8.","sig":null,"attributes":[{"value":"/ An unicode codepoint stored as UTF-8.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":50789,"byte_end":50830,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":50831,"byte_end":50834,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It can be borrowed as a `str`, and has the same size as `char`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":50835,"byte_end":50902,"line_start":43,"line_end":43,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":61716,"byte_end":61730,"line_start":402,"line_end":402,"column_start":12,"column_end":26},"name":"from_str_start","qualname":"<Utf8Char>::from_str_start","value":"pub fn from_str_start(&str) -> Result<(Self, usize), EmptyStrError>","parent":null,"children":[],"decl_id":null,"docs":" Create an `Utf8Char` from the first codepoint in a `str`.","sig":null,"attributes":[{"value":"/ Create an `Utf8Char` from the first codepoint in a `str`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":61070,"byte_end":61131,"line_start":387,"line_end":387,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":61136,"byte_end":61139,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the `str` is empty.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":61144,"byte_end":61187,"line_start":389,"line_end":389,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":61192,"byte_end":61195,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":61200,"byte_end":61214,"line_start":391,"line_end":391,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":61219,"byte_end":61222,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":61227,"byte_end":61234,"line_start":393,"line_end":393,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::Utf8Char;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":61239,"byte_end":61272,"line_start":394,"line_end":394,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":61277,"byte_end":61280,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utf8Char::from_str_start(\"a\"), Ok((Utf8Char::from('a'),1)));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":61285,"byte_end":61360,"line_start":396,"line_end":396,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(Utf8Char::from_str_start(\"ab\"), Ok((Utf8Char::from('a'),1)));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":61365,"byte_end":61441,"line_start":397,"line_end":397,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(Utf8Char::from_str_start(\"🂠 \"), Ok((Utf8Char::from('🂠'),4)));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":61446,"byte_end":61528,"line_start":398,"line_end":398,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(Utf8Char::from_str_start(\"é\"), Ok((Utf8Char::from('e'),1)));// 'e'+u301 combining mark","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":61533,"byte_end":61636,"line_start":399,"line_end":399,"column_start":5,"column_end":107}},{"value":"/ assert!(Utf8Char::from_str_start(\"\").is_err());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":61641,"byte_end":61692,"line_start":400,"line_end":400,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":61697,"byte_end":61704,"line_start":401,"line_end":401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":63187,"byte_end":63203,"line_start":436,"line_end":436,"column_start":12,"column_end":28},"name":"from_slice_start","qualname":"<Utf8Char>::from_slice_start","value":"pub fn from_slice_start(&[u8]) -> Result<(Self, usize), InvalidUtf8Slice>","parent":null,"children":[],"decl_id":null,"docs":" Create an `Utf8Char` of the first codepoint in an UTF-8 slice.  \n Also returns the length of the UTF-8 sequence for the codepoint.","sig":null,"attributes":[{"value":"/ Create an `Utf8Char` of the first codepoint in an UTF-8 slice.  ","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":61994,"byte_end":62062,"line_start":411,"line_end":411,"column_start":5,"column_end":73}},{"value":"/ Also returns the length of the UTF-8 sequence for the codepoint.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":62067,"byte_end":62135,"line_start":412,"line_end":412,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":62140,"byte_end":62143,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ If the slice is from a `str`, use `::from_str_start()` to skip UTF-8 validation.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":62148,"byte_end":62232,"line_start":414,"line_end":414,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":62237,"byte_end":62240,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":62245,"byte_end":62257,"line_start":416,"line_end":416,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":62262,"byte_end":62265,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ Returns an `Err` if the slice is empty, doesn't start with a valid","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":62270,"byte_end":62340,"line_start":418,"line_end":418,"column_start":5,"column_end":75}},{"value":"/ UTF-8 sequence or is too short for the sequence.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":62345,"byte_end":62397,"line_start":419,"line_end":419,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":62402,"byte_end":62405,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":62410,"byte_end":62424,"line_start":421,"line_end":421,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":62429,"byte_end":62432,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":62437,"byte_end":62444,"line_start":423,"line_end":423,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::Utf8Char;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":62449,"byte_end":62482,"line_start":424,"line_end":424,"column_start":5,"column_end":38}},{"value":"/ use encode_unicode::error::InvalidUtf8Slice::*;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":62487,"byte_end":62538,"line_start":425,"line_end":425,"column_start":5,"column_end":56}},{"value":"/ use encode_unicode::error::InvalidUtf8::*;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":62543,"byte_end":62589,"line_start":426,"line_end":426,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":62594,"byte_end":62597,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utf8Char::from_slice_start(&[b'A', b'B', b'C']), Ok((Utf8Char::from('A'),1)));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":62602,"byte_end":62695,"line_start":428,"line_end":428,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(Utf8Char::from_slice_start(&[0xdd, 0xbb]), Ok((Utf8Char::from('\\u{77b}'),2)));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":62700,"byte_end":62793,"line_start":429,"line_end":429,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":62798,"byte_end":62801,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utf8Char::from_slice_start(&[]), Err(TooShort(1)));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":62806,"byte_end":62872,"line_start":431,"line_end":431,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(Utf8Char::from_slice_start(&[0xf0, 0x99]), Err(TooShort(4)));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":62877,"byte_end":62953,"line_start":432,"line_end":432,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(Utf8Char::from_slice_start(&[0xee, b'F', 0x80]), Err(Utf8(NotAContinuationByte(1))));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":62958,"byte_end":63058,"line_start":433,"line_end":433,"column_start":5,"column_end":105}},{"value":"/ assert_eq!(Utf8Char::from_slice_start(&[0xee, 0x99, 0x0f]), Err(Utf8(NotAContinuationByte(2))));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":63063,"byte_end":63163,"line_start":434,"line_end":434,"column_start":5,"column_end":105}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":63168,"byte_end":63175,"line_start":435,"line_end":435,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":63744,"byte_end":63770,"line_start":449,"line_end":449,"column_start":19,"column_end":45},"name":"from_slice_start_unchecked","qualname":"<Utf8Char>::from_slice_start_unchecked","value":"pub unsafe fn from_slice_start_unchecked(&[u8]) -> (Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" A `from_slice_start()` that doesn't validate the codepoint.","sig":null,"attributes":[{"value":"/ A `from_slice_start()` that doesn't validate the codepoint.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":63472,"byte_end":63535,"line_start":443,"line_end":443,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":63540,"byte_end":63543,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":63548,"byte_end":63560,"line_start":445,"line_end":445,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":63565,"byte_end":63568,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ The slice must be non-empty and start with a valid UTF-8 codepoint.  ","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":63573,"byte_end":63646,"line_start":447,"line_end":447,"column_start":5,"column_end":78}},{"value":"/ Invalid or incomplete values might cause reads of uninitalized memory.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":63651,"byte_end":63725,"line_start":448,"line_end":448,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":65285,"byte_end":65295,"line_start":481,"line_end":481,"column_start":12,"column_end":22},"name":"from_array","qualname":"<Utf8Char>::from_array","value":"pub fn from_array([u8; ]) -> Result<Self, InvalidUtf8Array>","parent":null,"children":[],"decl_id":null,"docs":" Create an `Utf8Char` from a byte array after validating it.","sig":null,"attributes":[{"value":"/ Create an `Utf8Char` from a byte array after validating it.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":64033,"byte_end":64096,"line_start":455,"line_end":455,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":64101,"byte_end":64104,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ The codepoint must start at the first byte.  ","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":64109,"byte_end":64158,"line_start":457,"line_end":457,"column_start":5,"column_end":54}},{"value":"/ Unused bytes are set to zero by this function and so can be anything.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":64163,"byte_end":64236,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":64241,"byte_end":64244,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":64249,"byte_end":64261,"line_start":460,"line_end":460,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":64266,"byte_end":64269,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ Returns an `Err` if the array doesn't start with a valid UTF-8 sequence.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":64274,"byte_end":64350,"line_start":462,"line_end":462,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":64355,"byte_end":64358,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":64363,"byte_end":64377,"line_start":464,"line_end":464,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":64382,"byte_end":64385,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":64390,"byte_end":64397,"line_start":466,"line_end":466,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::Utf8Char;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":64402,"byte_end":64435,"line_start":467,"line_end":467,"column_start":5,"column_end":38}},{"value":"/ use encode_unicode::error::InvalidUtf8Array::*;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":64440,"byte_end":64491,"line_start":468,"line_end":468,"column_start":5,"column_end":56}},{"value":"/ use encode_unicode::error::InvalidUtf8::*;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":64496,"byte_end":64542,"line_start":469,"line_end":469,"column_start":5,"column_end":51}},{"value":"/ use encode_unicode::error::InvalidCodepoint::*;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":64547,"byte_end":64598,"line_start":470,"line_end":470,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":64603,"byte_end":64606,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utf8Char::from_array([b'A', 0, 0, 0]), Ok(Utf8Char::from('A')));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":64611,"byte_end":64690,"line_start":472,"line_end":472,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(Utf8Char::from_array([0xf4, 0x8b, 0xbb, 0xbb]), Ok(Utf8Char::from('\\u{10befb}')));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":64695,"byte_end":64792,"line_start":473,"line_end":473,"column_start":5,"column_end":102}},{"value":"/ assert_eq!(Utf8Char::from_array([b'A', b'B', b'C', b'D']), Ok(Utf8Char::from('A')));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":64797,"byte_end":64885,"line_start":474,"line_end":474,"column_start":5,"column_end":93}},{"value":"/ assert_eq!(Utf8Char::from_array([0, 0, 0xcc, 0xbb]), Ok(Utf8Char::from('\\0')));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":64890,"byte_end":64973,"line_start":475,"line_end":475,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":64978,"byte_end":64981,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utf8Char::from_array([0xef, b'F', 0x80, 0x80]), Err(Utf8(NotAContinuationByte(1))));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":64986,"byte_end":65085,"line_start":477,"line_end":477,"column_start":5,"column_end":104}},{"value":"/ assert_eq!(Utf8Char::from_array([0xc1, 0x80, 0, 0]), Err(Utf8(OverLong)));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":65090,"byte_end":65168,"line_start":478,"line_end":478,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(Utf8Char::from_array([0xf7, 0xaa, 0x99, 0x88]), Err(Codepoint(TooHigh)));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":65173,"byte_end":65261,"line_start":479,"line_end":479,"column_start":5,"column_end":93}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":65266,"byte_end":65273,"line_start":480,"line_end":480,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":66072,"byte_end":66092,"line_start":500,"line_end":500,"column_start":19,"column_end":39},"name":"from_array_unchecked","qualname":"<Utf8Char>::from_array_unchecked","value":"pub unsafe fn from_array_unchecked([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Zero-cost constructor.","sig":null,"attributes":[{"value":"/ Zero-cost constructor.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":65879,"byte_end":65905,"line_start":493,"line_end":493,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":65910,"byte_end":65913,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":65918,"byte_end":65930,"line_start":495,"line_end":495,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":65935,"byte_end":65938,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ Must represent a valid codepoint,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":65943,"byte_end":65980,"line_start":497,"line_end":497,"column_start":5,"column_end":42}},{"value":"/ starting at the first byte with the unused zeroed.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":65985,"byte_end":66039,"line_start":498,"line_end":498,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":66044,"byte_end":66053,"line_start":499,"line_end":499,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":66577,"byte_end":66587,"line_start":518,"line_end":518,"column_start":12,"column_end":22},"name":"from_ascii","qualname":"<Utf8Char>::from_ascii","value":"pub fn from_ascii(u8) -> Result<Self, NonAsciiError>","parent":null,"children":[],"decl_id":null,"docs":" Create an `Utf8Char` from a single byte.","sig":null,"attributes":[{"value":"/ Create an `Utf8Char` from a single byte.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":66159,"byte_end":66203,"line_start":503,"line_end":503,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":66208,"byte_end":66211,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ The byte must be an ASCII character.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":66216,"byte_end":66256,"line_start":505,"line_end":505,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":66261,"byte_end":66264,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":66269,"byte_end":66281,"line_start":507,"line_end":507,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":66286,"byte_end":66289,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ Returns `NonAsciiError` if the byte greater than 127.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":66294,"byte_end":66351,"line_start":509,"line_end":509,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":66356,"byte_end":66359,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":66364,"byte_end":66378,"line_start":511,"line_end":511,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":66383,"byte_end":66386,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":66391,"byte_end":66398,"line_start":513,"line_end":513,"column_start":5,"column_end":12}},{"value":"/ # use encode_unicode::Utf8Char;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":66403,"byte_end":66438,"line_start":514,"line_end":514,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(Utf8Char::from_ascii(b'a').unwrap(), 'a');","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":66443,"byte_end":66500,"line_start":515,"line_end":515,"column_start":5,"column_end":62}},{"value":"/ assert!(Utf8Char::from_ascii(128).is_err());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":66505,"byte_end":66553,"line_start":516,"line_end":516,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":66558,"byte_end":66565,"line_start":517,"line_end":517,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":67036,"byte_end":67056,"line_start":532,"line_end":532,"column_start":19,"column_end":39},"name":"from_ascii_unchecked","qualname":"<Utf8Char>::from_ascii_unchecked","value":"pub unsafe fn from_ascii_unchecked(u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `Utf8Char` from a single byte without checking that it's a\n valid codepoint on its own, which is only true for ASCII characters.","sig":null,"attributes":[{"value":"/ Create an `Utf8Char` from a single byte without checking that it's a","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":66781,"byte_end":66853,"line_start":525,"line_end":525,"column_start":5,"column_end":77}},{"value":"/ valid codepoint on its own, which is only true for ASCII characters.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":66858,"byte_end":66930,"line_start":526,"line_end":526,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":66935,"byte_end":66938,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":66943,"byte_end":66955,"line_start":528,"line_end":528,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":66960,"byte_end":66963,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ The byte must be less than 128.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":66968,"byte_end":67003,"line_start":530,"line_end":530,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":67008,"byte_end":67017,"line_start":531,"line_end":531,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":67322,"byte_end":67325,"line_start":541,"line_end":541,"column_start":12,"column_end":15},"name":"len","qualname":"<Utf8Char>::len","value":"pub fn len(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of bytes this character needs.","sig":null,"attributes":[{"value":"/ The number of bytes this character needs.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":67133,"byte_end":67178,"line_start":536,"line_end":536,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":67183,"byte_end":67186,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ Is between 1 and 4 (inclusive) and identical to `.as_ref().len()` or","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":67191,"byte_end":67263,"line_start":538,"line_end":538,"column_start":5,"column_end":77}},{"value":"/ `.as_char().len_utf8()`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":67268,"byte_end":67296,"line_start":539,"line_end":539,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":67301,"byte_end":67310,"line_start":540,"line_end":540,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":68604,"byte_end":68612,"line_start":567,"line_end":567,"column_start":12,"column_end":20},"name":"is_ascii","qualname":"<Utf8Char>::is_ascii","value":"pub fn is_ascii(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks that the codepoint is an ASCII character.\n","sig":null,"attributes":[{"value":"/ Checks that the codepoint is an ASCII character.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":68540,"byte_end":68592,"line_start":566,"line_end":566,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":68859,"byte_end":68879,"line_start":574,"line_end":574,"column_start":12,"column_end":32},"name":"eq_ignore_ascii_case","qualname":"<Utf8Char>::eq_ignore_ascii_case","value":"pub fn eq_ignore_ascii_case(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks that two characters are an ASCII case-insensitive match.","sig":null,"attributes":[{"value":"/ Checks that two characters are an ASCII case-insensitive match.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":68669,"byte_end":68736,"line_start":570,"line_end":570,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":68741,"byte_end":68744,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ Is equivalent to `a.to_ascii_lowercase() == b.to_ascii_lowercase()`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":68749,"byte_end":68821,"line_start":572,"line_end":572,"column_start":5,"column_end":77}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":68826,"byte_end":68847,"line_start":573,"line_end":573,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":69258,"byte_end":69276,"line_start":583,"line_end":583,"column_start":12,"column_end":30},"name":"to_ascii_uppercase","qualname":"<Utf8Char>::to_ascii_uppercase","value":"pub fn to_ascii_uppercase(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts the character to its ASCII upper case equivalent.","sig":null,"attributes":[{"value":"/ Converts the character to its ASCII upper case equivalent.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":69046,"byte_end":69108,"line_start":578,"line_end":578,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":69113,"byte_end":69116,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ ASCII letters 'a' to 'z' are mapped to 'A' to 'Z',","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":69121,"byte_end":69175,"line_start":580,"line_end":580,"column_start":5,"column_end":59}},{"value":"/ but non-ASCII letters are unchanged.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":69180,"byte_end":69220,"line_start":581,"line_end":581,"column_start":5,"column_end":45}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":69225,"byte_end":69246,"line_start":582,"line_end":582,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":69590,"byte_end":69608,"line_start":593,"line_end":593,"column_start":12,"column_end":30},"name":"to_ascii_lowercase","qualname":"<Utf8Char>::to_ascii_lowercase","value":"pub fn to_ascii_lowercase(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts the character to its ASCII lower case equivalent.","sig":null,"attributes":[{"value":"/ Converts the character to its ASCII lower case equivalent.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":69378,"byte_end":69440,"line_start":588,"line_end":588,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":69445,"byte_end":69448,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ ASCII letters 'A' to 'Z' are mapped to 'a' to 'z',","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":69453,"byte_end":69507,"line_start":590,"line_end":590,"column_start":5,"column_end":59}},{"value":"/ but non-ASCII letters are unchanged.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":69512,"byte_end":69552,"line_start":591,"line_end":591,"column_start":5,"column_end":45}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":69557,"byte_end":69578,"line_start":592,"line_end":592,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":69945,"byte_end":69965,"line_start":604,"line_end":604,"column_start":12,"column_end":32},"name":"make_ascii_uppercase","qualname":"<Utf8Char>::make_ascii_uppercase","value":"pub fn make_ascii_uppercase(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Converts the character to its ASCII upper case equivalent in-place.","sig":null,"attributes":[{"value":"/ Converts the character to its ASCII upper case equivalent in-place.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":69710,"byte_end":69781,"line_start":598,"line_end":598,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":69786,"byte_end":69789,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ ASCII letters 'a' to 'z' are mapped to 'A' to 'Z',","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":69794,"byte_end":69848,"line_start":600,"line_end":600,"column_start":5,"column_end":59}},{"value":"/ but non-ASCII letters are unchanged.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":69853,"byte_end":69893,"line_start":601,"line_end":601,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":69898,"byte_end":69907,"line_start":602,"line_end":602,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":69912,"byte_end":69933,"line_start":603,"line_end":603,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":70269,"byte_end":70289,"line_start":613,"line_end":613,"column_start":12,"column_end":32},"name":"make_ascii_lowercase","qualname":"<Utf8Char>::make_ascii_lowercase","value":"pub fn make_ascii_lowercase(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Converts the character to its ASCII lower case equivalent in-place.","sig":null,"attributes":[{"value":"/ Converts the character to its ASCII lower case equivalent in-place.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":70034,"byte_end":70105,"line_start":607,"line_end":607,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":70110,"byte_end":70113,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ ASCII letters 'A' to 'Z' are mapped to 'a' to 'z',","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":70118,"byte_end":70172,"line_start":609,"line_end":609,"column_start":5,"column_end":59}},{"value":"/ but non-ASCII letters are unchanged.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":70177,"byte_end":70217,"line_start":610,"line_end":610,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":70222,"byte_end":70231,"line_start":611,"line_end":611,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":70236,"byte_end":70257,"line_start":612,"line_end":612,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":70404,"byte_end":70411,"line_start":618,"line_end":618,"column_start":12,"column_end":19},"name":"to_char","qualname":"<Utf8Char>::to_char","value":"pub fn to_char(Self) -> char","parent":null,"children":[],"decl_id":null,"docs":" Convert from UTF-8 to UTF-32\n","sig":null,"attributes":[{"value":"/ Convert from UTF-8 to UTF-32","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":70360,"byte_end":70392,"line_start":617,"line_end":617,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":70765,"byte_end":70773,"line_start":629,"line_end":629,"column_start":12,"column_end":20},"name":"to_slice","qualname":"<Utf8Char>::to_slice","value":"pub fn to_slice(Self, &mut [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Write the internal representation to a slice,\n and then returns the number of bytes written.","sig":null,"attributes":[{"value":"/ Write the internal representation to a slice,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":70458,"byte_end":70507,"line_start":621,"line_end":621,"column_start":5,"column_end":54}},{"value":"/ and then returns the number of bytes written.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":70512,"byte_end":70561,"line_start":622,"line_end":622,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":70566,"byte_end":70569,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":70574,"byte_end":70586,"line_start":624,"line_end":624,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":70591,"byte_end":70594,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ Will panic the buffer is too small;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":70599,"byte_end":70638,"line_start":626,"line_end":626,"column_start":5,"column_end":44}},{"value":"/ You can get the required length from `.len()`,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":70643,"byte_end":70693,"line_start":627,"line_end":627,"column_start":5,"column_end":55}},{"value":"/ but a buffer of length four is always large enough.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":70698,"byte_end":70753,"line_start":628,"line_end":628,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":71080,"byte_end":71088,"line_start":637,"line_end":637,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Utf8Char>::to_array","value":"pub fn to_array(Self) -> ([u8; ], usize)","parent":null,"children":[],"decl_id":null,"docs":" Expose the internal array and the number of used bytes.\n","sig":null,"attributes":[{"value":"/ Expose the internal array and the number of used bytes.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":71009,"byte_end":71068,"line_start":636,"line_end":636,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":71292,"byte_end":71298,"line_start":643,"line_end":643,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Utf8Char>::as_str","value":"pub fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Return a `str` view of the array the codepoint is stored as.","sig":null,"attributes":[{"value":"/ Return a `str` view of the array the codepoint is stored as.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":71158,"byte_end":71222,"line_start":640,"line_end":640,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":71227,"byte_end":71230,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ Is an unambiguous version of `.as_ref()`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":71235,"byte_end":71280,"line_start":642,"line_end":642,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1017},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":72050,"byte_end":72062,"line_start":23,"line_end":23,"column_start":12,"column_end":24},"name":"Utf8Iterator","qualname":"::utf8_iterators::Utf8Iterator","value":"","parent":null,"children":[],"decl_id":null,"docs":" Read or iterate over the bytes of the UTF-8 representation of a codepoint.\n","sig":null,"attributes":[{"value":"/ Read or iterate over the bytes of the UTF-8 representation of a codepoint.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":71943,"byte_end":72021,"line_start":21,"line_end":21,"column_start":1,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":75703,"byte_end":75713,"line_start":141,"line_end":141,"column_start":8,"column_end":18},"name":"iter_bytes","qualname":"::utf8_iterators::iter_bytes","value":"pub fn iter_bytes<U: Borrow<Utf8Char>, I: IntoIterator<Item = U>>(I)\n-> Utf8CharSplitter<U, I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Converts an iterator of `Utf8Char` (or `&Utf8Char`)\n to an iterator of `u8`s.  \n Is equivalent to calling `.flat_map()` on the original iterator,\n but the returned iterator is ~40% faster.","sig":null,"attributes":[{"value":"/ Converts an iterator of `Utf8Char` (or `&Utf8Char`)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":73835,"byte_end":73890,"line_start":87,"line_end":87,"column_start":1,"column_end":56}},{"value":"/ to an iterator of `u8`s.  ","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":73891,"byte_end":73921,"line_start":88,"line_end":88,"column_start":1,"column_end":31}},{"value":"/ Is equivalent to calling `.flat_map()` on the original iterator,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":73922,"byte_end":73990,"line_start":89,"line_end":89,"column_start":1,"column_end":69}},{"value":"/ but the returned iterator is ~40% faster.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":73991,"byte_end":74036,"line_start":90,"line_end":90,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":74037,"byte_end":74040,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ The iterator also implements `Read` (if the `std` feature isn't disabled).","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":74041,"byte_end":74119,"line_start":92,"line_end":92,"column_start":1,"column_end":79}},{"value":"/ Reading will never produce an error, and calls to `.read()` and `.next()`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":74120,"byte_end":74197,"line_start":93,"line_end":93,"column_start":1,"column_end":78}},{"value":"/ can be mixed.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":74198,"byte_end":74215,"line_start":94,"line_end":94,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":74216,"byte_end":74219,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ The exact number of bytes cannot be known in advance, but `size_hint()`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":74220,"byte_end":74295,"line_start":96,"line_end":96,"column_start":1,"column_end":76}},{"value":"/ gives the possible range.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":74296,"byte_end":74325,"line_start":97,"line_end":97,"column_start":1,"column_end":30}},{"value":"/ (min: all remaining characters are ASCII, max: all require four bytes)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":74326,"byte_end":74400,"line_start":98,"line_end":98,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":74401,"byte_end":74404,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":74405,"byte_end":74419,"line_start":100,"line_end":100,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":74420,"byte_end":74423,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ From iterator of values:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":74424,"byte_end":74452,"line_start":102,"line_end":102,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":74453,"byte_end":74456,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":74457,"byte_end":74464,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/ use encode_unicode::{iter_bytes, CharExt};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":74465,"byte_end":74511,"line_start":105,"line_end":105,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":74512,"byte_end":74515,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ let iterator = \"foo\".chars().map(|c| c.to_utf8() );","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":74516,"byte_end":74571,"line_start":107,"line_end":107,"column_start":1,"column_end":56}},{"value":"/ let mut bytes = [0; 4];","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":74572,"byte_end":74599,"line_start":108,"line_end":108,"column_start":1,"column_end":28}},{"value":"/ for (u,dst) in iter_bytes(iterator).zip(&mut bytes) {*dst=u;}","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":74600,"byte_end":74665,"line_start":109,"line_end":109,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(&bytes, b\"foo\\0\");","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":74666,"byte_end":74699,"line_start":110,"line_end":110,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":74700,"byte_end":74707,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":74708,"byte_end":74711,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ From iterator of references:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":74712,"byte_end":74744,"line_start":113,"line_end":113,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":74745,"byte_end":74748,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ use encode_unicode::{iter_bytes, CharExt, Utf8Char};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":74842,"byte_end":74898,"line_start":117,"line_end":117,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":74899,"byte_end":74902,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ let chars: Vec<Utf8Char> = \"💣 bomb 💣\".chars().map(|c| c.to_utf8() ).collect();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":74903,"byte_end":74991,"line_start":119,"line_end":119,"column_start":1,"column_end":83}},{"value":"/ let bytes: Vec<u8> = iter_bytes(&chars).collect();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":74992,"byte_end":75046,"line_start":120,"line_end":120,"column_start":1,"column_end":55}},{"value":"/ let flat_map: Vec<u8> = chars.iter().flat_map(|u8c| *u8c ).collect();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":75047,"byte_end":75120,"line_start":121,"line_end":121,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(bytes, flat_map);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":75121,"byte_end":75153,"line_start":122,"line_end":122,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":75154,"byte_end":75161,"line_start":123,"line_end":123,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":75162,"byte_end":75165,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ `Read`ing from it:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":75166,"byte_end":75188,"line_start":125,"line_end":125,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":75189,"byte_end":75192,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ use encode_unicode::{iter_bytes, CharExt};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":75286,"byte_end":75332,"line_start":129,"line_end":129,"column_start":1,"column_end":47}},{"value":"/ use std::io::Read;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":75333,"byte_end":75355,"line_start":130,"line_end":130,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":75356,"byte_end":75359,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ let s = \"Ååh‽\";","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":75360,"byte_end":75383,"line_start":132,"line_end":132,"column_start":1,"column_end":20}},{"value":"/ assert_eq!(s.len(), 8);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":75384,"byte_end":75411,"line_start":133,"line_end":133,"column_start":1,"column_end":28}},{"value":"/ let mut buf = [b'E'; 9];","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":75412,"byte_end":75440,"line_start":134,"line_end":134,"column_start":1,"column_end":29}},{"value":"/ let mut reader = iter_bytes(s.chars().map(|c| c.to_utf8() ));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":75441,"byte_end":75506,"line_start":135,"line_end":135,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(reader.read(&mut buf[..]).unwrap(), 8);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":75507,"byte_end":75561,"line_start":136,"line_end":136,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(reader.read(&mut buf[..]).unwrap(), 0);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":75562,"byte_end":75616,"line_start":137,"line_end":137,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(&buf[..8], s.as_bytes());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":75617,"byte_end":75657,"line_start":138,"line_end":138,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(buf[8], b'E');","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":75658,"byte_end":75687,"line_start":139,"line_end":139,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":75688,"byte_end":75695,"line_start":140,"line_end":140,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1022},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":75995,"byte_end":76011,"line_start":150,"line_end":150,"column_start":12,"column_end":28},"name":"Utf8CharSplitter","qualname":"::utf8_iterators::Utf8CharSplitter","value":"Utf8CharSplitter {  }","parent":null,"children":[{"krate":0,"index":1025},{"krate":0,"index":1026}],"decl_id":null,"docs":" The iterator type returned by `iter_bytes()`","sig":null,"attributes":[{"value":"/ The iterator type returned by `iter_bytes()`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":75875,"byte_end":75923,"line_start":146,"line_end":146,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":75924,"byte_end":75927,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ See its documentation for details.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":75928,"byte_end":75966,"line_start":148,"line_end":148,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":76597,"byte_end":76607,"line_start":166,"line_end":166,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Utf8CharSplitter<U, I>>::into_inner","value":"pub fn into_inner(Self) -> I","parent":null,"children":[],"decl_id":null,"docs":" Extracts the source iterator.","sig":null,"attributes":[{"value":"/ Extracts the source iterator.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":76352,"byte_end":76385,"line_start":161,"line_end":161,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":76390,"byte_end":76393,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Note that `iter_bytes(iter.into_inner())` is not a no-op:  ","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":76398,"byte_end":76461,"line_start":163,"line_end":163,"column_start":5,"column_end":68}},{"value":"/ If the last returned byte from `next()` was not an ASCII by,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":76466,"byte_end":76530,"line_start":164,"line_end":164,"column_start":5,"column_end":69}},{"value":"/ the remaining bytes of that codepoint is lost.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":76535,"byte_end":76585,"line_start":165,"line_end":165,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1031},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":79127,"byte_end":79142,"line_start":238,"line_end":238,"column_start":12,"column_end":27},"name":"Utf8CharIndices","qualname":"::utf8_iterators::Utf8CharIndices","value":"Utf8CharIndices {  }","parent":null,"children":[{"krate":0,"index":1033},{"krate":0,"index":1034}],"decl_id":null,"docs":" An iterator over the `Utf8Char` of a string slice, and their positions.","sig":null,"attributes":[{"value":"/ An iterator over the `Utf8Char` of a string slice, and their positions.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":78903,"byte_end":78978,"line_start":234,"line_end":234,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":78979,"byte_end":78982,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the `utf8char_indices() method from [`StrExt`] trait. See its documentation for more.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":78983,"byte_end":79098,"line_start":236,"line_end":236,"column_start":1,"column_end":116}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":79751,"byte_end":79757,"line_start":259,"line_end":259,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Utf8CharIndices>::as_str","value":"pub fn as_str(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Extract the remainder of the source `str`.","sig":null,"attributes":[{"value":"/ Extract the remainder of the source `str`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":79362,"byte_end":79408,"line_start":248,"line_end":248,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":79413,"byte_end":79416,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":79421,"byte_end":79435,"line_start":250,"line_end":250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":79440,"byte_end":79443,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":79448,"byte_end":79455,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::{StrExt, Utf8Char};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":79460,"byte_end":79503,"line_start":253,"line_end":253,"column_start":5,"column_end":48}},{"value":"/ let mut iter = \"abc\".utf8char_indices();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":79508,"byte_end":79552,"line_start":254,"line_end":254,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(iter.next_back(), Some((2, Utf8Char::from('c'))));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":79557,"byte_end":79622,"line_start":255,"line_end":255,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(iter.next(), Some((0, Utf8Char::from('a'))));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":79627,"byte_end":79687,"line_start":256,"line_end":256,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(iter.as_str(), \"b\");","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":79692,"byte_end":79727,"line_start":257,"line_end":257,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":79732,"byte_end":79739,"line_start":258,"line_end":258,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1038},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":81562,"byte_end":81571,"line_start":310,"line_end":310,"column_start":12,"column_end":21},"name":"Utf8Chars","qualname":"::utf8_iterators::Utf8Chars","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the codepoints in a `str` represented as `Utf8Char`.\n","sig":null,"attributes":[{"value":"/ An iterator over the codepoints in a `str` represented as `Utf8Char`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":81460,"byte_end":81533,"line_start":308,"line_end":308,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":82130,"byte_end":82136,"line_start":328,"line_end":328,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Utf8Chars>::as_str","value":"pub fn as_str(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Extract the remainder of the source `str`.","sig":null,"attributes":[{"value":"/ Extract the remainder of the source `str`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":81758,"byte_end":81804,"line_start":317,"line_end":317,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":81809,"byte_end":81812,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":81817,"byte_end":81831,"line_start":319,"line_end":319,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":81836,"byte_end":81839,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":81844,"byte_end":81851,"line_start":321,"line_end":321,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::{StrExt, Utf8Char};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":81856,"byte_end":81899,"line_start":322,"line_end":322,"column_start":5,"column_end":48}},{"value":"/ let mut iter = \"abc\".utf8chars();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":81904,"byte_end":81941,"line_start":323,"line_end":323,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(iter.next(), Some(Utf8Char::from('a')));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":81946,"byte_end":82001,"line_start":324,"line_end":324,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(iter.next_back(), Some(Utf8Char::from('c')));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":82006,"byte_end":82066,"line_start":325,"line_end":325,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(iter.as_str(), \"b\");","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":82071,"byte_end":82106,"line_start":326,"line_end":326,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":82111,"byte_end":82118,"line_start":327,"line_end":327,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1045},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":84284,"byte_end":84293,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"name":"Utf16Char","qualname":"::utf16_char::Utf16Char","value":"Utf16Char {  }","parent":null,"children":[{"krate":0,"index":1046}],"decl_id":null,"docs":" An unicode codepoint stored as UTF-16.","sig":null,"attributes":[{"value":"/ An unicode codepoint stored as UTF-16.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":84151,"byte_end":84193,"line_start":41,"line_end":41,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":84194,"byte_end":84197,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It can be borrowed as an `u16` slice, and has the same size as `char`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":84198,"byte_end":84272,"line_start":43,"line_end":43,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":96493,"byte_end":96507,"line_start":433,"line_end":433,"column_start":12,"column_end":26},"name":"from_str_start","qualname":"<Utf16Char>::from_str_start","value":"pub fn from_str_start(&str) -> Result<(Self, usize), EmptyStrError>","parent":null,"children":[],"decl_id":null,"docs":" Create an `Utf16Char` from the first codepoint in a string slice,\n converting from UTF-8 to UTF-16.","sig":null,"attributes":[{"value":"/ Create an `Utf16Char` from the first codepoint in a string slice,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":95659,"byte_end":95728,"line_start":414,"line_end":414,"column_start":5,"column_end":74}},{"value":"/ converting from UTF-8 to UTF-16.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":95733,"byte_end":95769,"line_start":415,"line_end":415,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":95774,"byte_end":95777,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ The returned `usize` is the number of UTF-8 bytes used from the str,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":95782,"byte_end":95854,"line_start":417,"line_end":417,"column_start":5,"column_end":77}},{"value":"/ and not the number of UTF-16 units.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":95859,"byte_end":95898,"line_start":418,"line_end":418,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":95903,"byte_end":95906,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the `str` is empty.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":95911,"byte_end":95954,"line_start":420,"line_end":420,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":95959,"byte_end":95962,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":95967,"byte_end":95981,"line_start":422,"line_end":422,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":95986,"byte_end":95989,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":95994,"byte_end":96001,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::Utf16Char;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":96006,"byte_end":96040,"line_start":425,"line_end":425,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":96045,"byte_end":96048,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utf16Char::from_str_start(\"a\"), Ok((Utf16Char::from('a'),1)));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":96053,"byte_end":96130,"line_start":427,"line_end":427,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(Utf16Char::from_str_start(\"ab\"), Ok((Utf16Char::from('a'),1)));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":96135,"byte_end":96213,"line_start":428,"line_end":428,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(Utf16Char::from_str_start(\"🂠 \"), Ok((Utf16Char::from('🂠'),4)));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":96218,"byte_end":96302,"line_start":429,"line_end":429,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(Utf16Char::from_str_start(\"é\"), Ok((Utf16Char::from('e'),1)));// 'e'+u301 combining mark","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":96307,"byte_end":96412,"line_start":430,"line_end":430,"column_start":5,"column_end":109}},{"value":"/ assert!(Utf16Char::from_str_start(\"\").is_err());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":96417,"byte_end":96469,"line_start":431,"line_end":431,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":96474,"byte_end":96481,"line_start":432,"line_end":432,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":98481,"byte_end":98497,"line_start":469,"line_end":469,"column_start":12,"column_end":28},"name":"from_slice_start","qualname":"<Utf16Char>::from_slice_start","value":"pub fn from_slice_start(&[u16]) -> Result<(Self, usize), InvalidUtf16Slice>","parent":null,"children":[],"decl_id":null,"docs":" Validate and store the first UTF-16 codepoint in the slice.\n Also return how many units were needed.\n","sig":null,"attributes":[{"value":"/ Validate and store the first UTF-16 codepoint in the slice.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":98358,"byte_end":98421,"line_start":467,"line_end":467,"column_start":5,"column_end":68}},{"value":"/ Also return how many units were needed.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":98426,"byte_end":98469,"line_start":468,"line_end":468,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":98968,"byte_end":98994,"line_start":480,"line_end":480,"column_start":19,"column_end":45},"name":"from_slice_start_unchecked","qualname":"<Utf16Char>::from_slice_start_unchecked","value":"pub unsafe fn from_slice_start_unchecked(&[u16]) -> (Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Store the first UTF-16 codepoint of the slice.","sig":null,"attributes":[{"value":"/ Store the first UTF-16 codepoint of the slice.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":98745,"byte_end":98795,"line_start":475,"line_end":475,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":98800,"byte_end":98803,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":98808,"byte_end":98820,"line_start":477,"line_end":477,"column_start":5,"column_end":17}},{"value":"/ The slice must be non-empty and start with a valid UTF-16 codepoint.  ","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":98825,"byte_end":98899,"line_start":478,"line_end":478,"column_start":5,"column_end":79}},{"value":"/ The length of the slice is never checked.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":98904,"byte_end":98949,"line_start":479,"line_end":479,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":99360,"byte_end":99370,"line_start":489,"line_end":489,"column_start":12,"column_end":22},"name":"from_tuple","qualname":"<Utf16Char>::from_tuple","value":"pub fn from_tuple((u16, Option<u16>)) -> Result<Self, InvalidUtf16Tuple>","parent":null,"children":[],"decl_id":null,"docs":" Validate and store a UTF-16 pair as returned from `char.to_utf16_tuple()`.\n","sig":null,"attributes":[{"value":"/ Validate and store a UTF-16 pair as returned from `char.to_utf16_tuple()`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":99270,"byte_end":99348,"line_start":488,"line_end":488,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":99745,"byte_end":99765,"line_start":499,"line_end":499,"column_start":19,"column_end":39},"name":"from_tuple_unchecked","qualname":"<Utf16Char>::from_tuple_unchecked","value":"pub unsafe fn from_tuple_unchecked((u16, Option<u16>)) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `Utf16Char` from a tuple as returned from `char.to_utf16_tuple()`.","sig":null,"attributes":[{"value":"/ Create an `Utf16Char` from a tuple as returned from `char.to_utf16_tuple()`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":99554,"byte_end":99634,"line_start":494,"line_end":494,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":99639,"byte_end":99642,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":99647,"byte_end":99659,"line_start":496,"line_end":496,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":99664,"byte_end":99667,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ The units must represent a single valid codepoint.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":99672,"byte_end":99726,"line_start":498,"line_end":498,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":100445,"byte_end":100453,"line_start":519,"line_end":519,"column_start":12,"column_end":20},"name":"from_bmp","qualname":"<Utf16Char>::from_bmp","value":"pub fn from_bmp(u16) -> Result<Self, NonBMPError>","parent":null,"children":[],"decl_id":null,"docs":" Create an `Utf16Char` from a single unit.","sig":null,"attributes":[{"value":"/ Create an `Utf16Char` from a single unit.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":99872,"byte_end":99917,"line_start":502,"line_end":502,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":99922,"byte_end":99925,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ The unit must be a codepoint in the basic multilingual plane,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":99930,"byte_end":99995,"line_start":504,"line_end":504,"column_start":5,"column_end":70}},{"value":"/ or, not a part of a surrogate pair.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":100000,"byte_end":100039,"line_start":505,"line_end":505,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":100044,"byte_end":100047,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":100052,"byte_end":100064,"line_start":507,"line_end":507,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":100069,"byte_end":100072,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ Returns `NonBMPError` if the unit is in the range `0xd800..0xe000`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":100077,"byte_end":100148,"line_start":509,"line_end":509,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":100153,"byte_end":100156,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":100161,"byte_end":100175,"line_start":511,"line_end":511,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":100180,"byte_end":100183,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":100188,"byte_end":100195,"line_start":513,"line_end":513,"column_start":5,"column_end":12}},{"value":"/ # use encode_unicode::Utf16Char;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":100200,"byte_end":100236,"line_start":514,"line_end":514,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(Utf16Char::from_bmp(0x40).unwrap(), '@');","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":100241,"byte_end":100297,"line_start":515,"line_end":515,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(Utf16Char::from_bmp('ø' as u16).unwrap(), 'ø');","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":100302,"byte_end":100366,"line_start":516,"line_end":516,"column_start":5,"column_end":67}},{"value":"/ assert!(Utf16Char::from_bmp(0xdddd).is_err());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":100371,"byte_end":100421,"line_start":517,"line_end":517,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":100426,"byte_end":100433,"line_start":518,"line_end":518,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":100983,"byte_end":101001,"line_start":534,"line_end":534,"column_start":19,"column_end":37},"name":"from_bmp_unchecked","qualname":"<Utf16Char>::from_bmp_unchecked","value":"pub unsafe fn from_bmp_unchecked(u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `Utf16Char` from a single unit without checking that it's a\n valid codepoint on its own.","sig":null,"attributes":[{"value":"/ Create an `Utf16Char` from a single unit without checking that it's a","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":100671,"byte_end":100744,"line_start":526,"line_end":526,"column_start":5,"column_end":78}},{"value":"/ valid codepoint on its own.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":100749,"byte_end":100780,"line_start":527,"line_end":527,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":100785,"byte_end":100788,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":100793,"byte_end":100805,"line_start":529,"line_end":529,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":100810,"byte_end":100813,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ The unit must be less than 0xd800 or greater than 0xdfff codepoint in the basic multilingual plane,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":100818,"byte_end":100921,"line_start":531,"line_end":531,"column_start":5,"column_end":108}},{"value":"/ or, not a surrogate.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":100926,"byte_end":100950,"line_start":532,"line_end":532,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":100955,"byte_end":100964,"line_start":533,"line_end":533,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":101274,"byte_end":101277,"line_start":543,"line_end":543,"column_start":12,"column_end":15},"name":"len","qualname":"<Utf16Char>::len","value":"pub fn len(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of units this character is made up of.","sig":null,"attributes":[{"value":"/ The number of units this character is made up of.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":101090,"byte_end":101143,"line_start":538,"line_end":538,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":101148,"byte_end":101151,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ Is either 1 or 2 and identical to `.as_char().len_utf16()`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":101156,"byte_end":101218,"line_start":540,"line_end":540,"column_start":5,"column_end":67}},{"value":"/ or `.as_ref().len()`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":101223,"byte_end":101248,"line_start":541,"line_end":541,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":101253,"byte_end":101262,"line_start":542,"line_end":542,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":101497,"byte_end":101505,"line_start":550,"line_end":550,"column_start":12,"column_end":20},"name":"is_ascii","qualname":"<Utf16Char>::is_ascii","value":"pub fn is_ascii(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks that the codepoint is an ASCII character.\n","sig":null,"attributes":[{"value":"/ Checks that the codepoint is an ASCII character.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":101419,"byte_end":101471,"line_start":548,"line_end":548,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":101476,"byte_end":101485,"line_start":549,"line_end":549,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":101752,"byte_end":101772,"line_start":557,"line_end":557,"column_start":12,"column_end":32},"name":"eq_ignore_ascii_case","qualname":"<Utf16Char>::eq_ignore_ascii_case","value":"pub fn eq_ignore_ascii_case(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks that two characters are an ASCII case-insensitive match.","sig":null,"attributes":[{"value":"/ Checks that two characters are an ASCII case-insensitive match.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":101562,"byte_end":101629,"line_start":553,"line_end":553,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":101634,"byte_end":101637,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ Is equivalent to `a.to_ascii_lowercase() == b.to_ascii_lowercase()`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":101642,"byte_end":101714,"line_start":555,"line_end":555,"column_start":5,"column_end":77}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":101719,"byte_end":101740,"line_start":556,"line_end":556,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":102091,"byte_end":102109,"line_start":565,"line_end":565,"column_start":12,"column_end":30},"name":"to_ascii_uppercase","qualname":"<Utf16Char>::to_ascii_uppercase","value":"pub fn to_ascii_uppercase(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts the character to its ASCII upper case equivalent.","sig":null,"attributes":[{"value":"/ Converts the character to its ASCII upper case equivalent.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":101879,"byte_end":101941,"line_start":560,"line_end":560,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":101946,"byte_end":101949,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ ASCII letters 'a' to 'z' are mapped to 'A' to 'Z',","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":101954,"byte_end":102008,"line_start":562,"line_end":562,"column_start":5,"column_end":59}},{"value":"/ but non-ASCII letters are unchanged.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":102013,"byte_end":102053,"line_start":563,"line_end":563,"column_start":5,"column_end":45}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":102058,"byte_end":102079,"line_start":564,"line_end":564,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":102491,"byte_end":102509,"line_start":575,"line_end":575,"column_start":12,"column_end":30},"name":"to_ascii_lowercase","qualname":"<Utf16Char>::to_ascii_lowercase","value":"pub fn to_ascii_lowercase(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts the character to its ASCII lower case equivalent.","sig":null,"attributes":[{"value":"/ Converts the character to its ASCII lower case equivalent.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":102279,"byte_end":102341,"line_start":570,"line_end":570,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":102346,"byte_end":102349,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ ASCII letters 'A' to 'Z' are mapped to 'a' to 'z',","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":102354,"byte_end":102408,"line_start":572,"line_end":572,"column_start":5,"column_end":59}},{"value":"/ but non-ASCII letters are unchanged.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":102413,"byte_end":102453,"line_start":573,"line_end":573,"column_start":5,"column_end":45}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":102458,"byte_end":102479,"line_start":574,"line_end":574,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":102900,"byte_end":102920,"line_start":585,"line_end":585,"column_start":12,"column_end":32},"name":"make_ascii_uppercase","qualname":"<Utf16Char>::make_ascii_uppercase","value":"pub fn make_ascii_uppercase(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Converts the character to its ASCII upper case equivalent in-place.","sig":null,"attributes":[{"value":"/ Converts the character to its ASCII upper case equivalent in-place.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":102679,"byte_end":102750,"line_start":580,"line_end":580,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":102755,"byte_end":102758,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ ASCII letters 'a' to 'z' are mapped to 'A' to 'Z',","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":102763,"byte_end":102817,"line_start":582,"line_end":582,"column_start":5,"column_end":59}},{"value":"/ but non-ASCII letters are unchanged.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":102822,"byte_end":102862,"line_start":583,"line_end":583,"column_start":5,"column_end":45}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":102867,"byte_end":102888,"line_start":584,"line_end":584,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":103207,"byte_end":103227,"line_start":593,"line_end":593,"column_start":12,"column_end":32},"name":"make_ascii_lowercase","qualname":"<Utf16Char>::make_ascii_lowercase","value":"pub fn make_ascii_lowercase(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Converts the character to its ASCII lower case equivalent in-place.","sig":null,"attributes":[{"value":"/ Converts the character to its ASCII lower case equivalent in-place.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":102986,"byte_end":103057,"line_start":588,"line_end":588,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":103062,"byte_end":103065,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ ASCII letters 'A' to 'Z' are mapped to 'a' to 'z',","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":103070,"byte_end":103124,"line_start":590,"line_end":590,"column_start":5,"column_end":59}},{"value":"/ but non-ASCII letters are unchanged.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":103129,"byte_end":103169,"line_start":591,"line_end":591,"column_start":5,"column_end":45}},{"value":"cfg(feature = \"std\")","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":103174,"byte_end":103195,"line_start":592,"line_end":592,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":103340,"byte_end":103347,"line_start":598,"line_end":598,"column_start":12,"column_end":19},"name":"to_char","qualname":"<Utf16Char>::to_char","value":"pub fn to_char(Self) -> char","parent":null,"children":[],"decl_id":null,"docs":" Convert from UTF-16 to UTF-32\n","sig":null,"attributes":[{"value":"/ Convert from UTF-16 to UTF-32","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":103295,"byte_end":103328,"line_start":597,"line_end":597,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":103693,"byte_end":103701,"line_start":608,"line_end":608,"column_start":12,"column_end":20},"name":"to_slice","qualname":"<Utf16Char>::to_slice","value":"pub fn to_slice(Self, &mut [u16]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Write the internal representation to a slice,\n and then returns the number of `u16`s written.","sig":null,"attributes":[{"value":"/ Write the internal representation to a slice,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":103394,"byte_end":103443,"line_start":601,"line_end":601,"column_start":5,"column_end":54}},{"value":"/ and then returns the number of `u16`s written.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":103448,"byte_end":103498,"line_start":602,"line_end":602,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":103503,"byte_end":103506,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":103511,"byte_end":103523,"line_start":604,"line_end":604,"column_start":5,"column_end":17}},{"value":"/ Will panic the buffer is too small;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":103528,"byte_end":103567,"line_start":605,"line_end":605,"column_start":5,"column_end":44}},{"value":"/ You can get the required length from `.len()`,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":103572,"byte_end":103622,"line_start":606,"line_end":606,"column_start":5,"column_end":55}},{"value":"/ but a buffer of length two is always large enough.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":103627,"byte_end":103681,"line_start":607,"line_end":607,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":104169,"byte_end":104177,"line_start":620,"line_end":620,"column_start":12,"column_end":20},"name":"to_tuple","qualname":"<Utf16Char>::to_tuple","value":"pub fn to_tuple(Self) -> (u16, Option<u16>)","parent":null,"children":[],"decl_id":null,"docs":" The second `u16` is used for surrogate pairs.\n","sig":null,"attributes":[{"value":"/ The second `u16` is used for surrogate pairs.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":104094,"byte_end":104143,"line_start":618,"line_end":618,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":104148,"byte_end":104157,"line_start":619,"line_end":619,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1062},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":105017,"byte_end":105030,"line_start":22,"line_end":22,"column_start":12,"column_end":25},"name":"Utf16Iterator","qualname":"::utf16_iterators::Utf16Iterator","value":"Utf16Iterator {  }","parent":null,"children":[{"krate":0,"index":1063},{"krate":0,"index":1064}],"decl_id":null,"docs":" Iterate over the units of the UTF-16 representation of a codepoint.\n","sig":null,"attributes":[{"value":"/ Iterate over the units of the UTF-16 representation of a codepoint.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":104917,"byte_end":104988,"line_start":20,"line_end":20,"column_start":1,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":490},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":107720,"byte_end":107730,"line_start":103,"line_end":103,"column_start":8,"column_end":18},"name":"iter_units","qualname":"::utf16_iterators::iter_units","value":"pub fn iter_units<U: Borrow<Utf16Char>, I: IntoIterator<Item = U>>(I)\n-> Utf16CharSplitter<U, I::IntoIter>","parent":null,"children":[],"decl_id":null,"docs":" Converts an iterator of `Utf16Char` (or `&Utf16Char`)\n to an iterator of `u16`s.  \n Is equivalent to calling `.flat_map()` on the original iterator,\n but the returned iterator is about twice as fast.","sig":null,"attributes":[{"value":"/ Converts an iterator of `Utf16Char` (or `&Utf16Char`)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":106561,"byte_end":106618,"line_start":70,"line_end":70,"column_start":1,"column_end":58}},{"value":"/ to an iterator of `u16`s.  ","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":106619,"byte_end":106650,"line_start":71,"line_end":71,"column_start":1,"column_end":32}},{"value":"/ Is equivalent to calling `.flat_map()` on the original iterator,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":106651,"byte_end":106719,"line_start":72,"line_end":72,"column_start":1,"column_end":69}},{"value":"/ but the returned iterator is about twice as fast.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":106720,"byte_end":106773,"line_start":73,"line_end":73,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":106774,"byte_end":106777,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ The exact number of units cannot be known in advance, but `size_hint()`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":106778,"byte_end":106853,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"/ gives the possible range.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":106854,"byte_end":106883,"line_start":76,"line_end":76,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":106884,"byte_end":106887,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":106888,"byte_end":106902,"line_start":78,"line_end":78,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":106903,"byte_end":106906,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ From iterator of values:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":106907,"byte_end":106935,"line_start":80,"line_end":80,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":106936,"byte_end":106939,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":106940,"byte_end":106947,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/ use encode_unicode::{iter_units, CharExt};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":106948,"byte_end":106994,"line_start":83,"line_end":83,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":106995,"byte_end":106998,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ let iterator = \"foo\".chars().map(|c| c.to_utf16() );","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":106999,"byte_end":107055,"line_start":85,"line_end":85,"column_start":1,"column_end":57}},{"value":"/ let mut units = [0; 4];","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":107056,"byte_end":107083,"line_start":86,"line_end":86,"column_start":1,"column_end":28}},{"value":"/ for (u,dst) in iter_units(iterator).zip(&mut units) {*dst=u;}","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":107084,"byte_end":107149,"line_start":87,"line_end":87,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(units, ['f' as u16, 'o' as u16, 'o' as u16, 0]);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":107150,"byte_end":107213,"line_start":88,"line_end":88,"column_start":1,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":107214,"byte_end":107221,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":107222,"byte_end":107225,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ From iterator of references:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":107226,"byte_end":107258,"line_start":91,"line_end":91,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":107259,"byte_end":107262,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ use encode_unicode::{iter_units, CharExt, Utf16Char};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":107356,"byte_end":107413,"line_start":95,"line_end":95,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":107414,"byte_end":107417,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ // (💣 takes two units)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":107418,"byte_end":107447,"line_start":97,"line_end":97,"column_start":1,"column_end":27}},{"value":"/ let chars: Vec<Utf16Char> = \"💣 bomb 💣\".chars().map(|c| c.to_utf16() ).collect();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":107448,"byte_end":107538,"line_start":98,"line_end":98,"column_start":1,"column_end":85}},{"value":"/ let units: Vec<u16> = iter_units(&chars).collect();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":107539,"byte_end":107594,"line_start":99,"line_end":99,"column_start":1,"column_end":56}},{"value":"/ let flat_map: Vec<u16> = chars.iter().flat_map(|u16c| *u16c ).collect();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":107595,"byte_end":107671,"line_start":100,"line_end":100,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(units, flat_map);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":107672,"byte_end":107704,"line_start":101,"line_end":101,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":107705,"byte_end":107712,"line_start":102,"line_end":102,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1067},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":107979,"byte_end":107996,"line_start":110,"line_end":110,"column_start":12,"column_end":29},"name":"Utf16CharSplitter","qualname":"::utf16_iterators::Utf16CharSplitter","value":"Utf16CharSplitter {  }","parent":null,"children":[{"krate":0,"index":1070},{"krate":0,"index":1071}],"decl_id":null,"docs":" The iterator type returned by `iter_units()`\n","sig":null,"attributes":[{"value":"/ The iterator type returned by `iter_units()`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":107902,"byte_end":107950,"line_start":108,"line_end":108,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":108584,"byte_end":108594,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Utf16CharSplitter<U, I>>::into_inner","value":"pub fn into_inner(Self) -> I","parent":null,"children":[],"decl_id":null,"docs":" Extracts the source iterator.","sig":null,"attributes":[{"value":"/ Extracts the source iterator.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":108350,"byte_end":108383,"line_start":121,"line_end":121,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":108388,"byte_end":108391,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Note that `iter_units(iter.into_inner())` is not a no-op:  ","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":108396,"byte_end":108459,"line_start":123,"line_end":123,"column_start":5,"column_end":68}},{"value":"/ If the last returned unit from `next()` was a leading surrogate,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":108464,"byte_end":108532,"line_start":124,"line_end":124,"column_start":5,"column_end":73}},{"value":"/ the trailing surrogate is lost.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":108537,"byte_end":108572,"line_start":125,"line_end":125,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1076},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":109674,"byte_end":109690,"line_start":158,"line_end":158,"column_start":12,"column_end":28},"name":"Utf16CharIndices","qualname":"::utf16_iterators::Utf16CharIndices","value":"Utf16CharIndices {  }","parent":null,"children":[{"krate":0,"index":1078},{"krate":0,"index":1079}],"decl_id":null,"docs":" An iterator over the codepoints in a `str` represented as `Utf16Char`.\n","sig":null,"attributes":[{"value":"/ An iterator over the codepoints in a `str` represented as `Utf16Char`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":109571,"byte_end":109645,"line_start":156,"line_end":156,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":110307,"byte_end":110313,"line_start":179,"line_end":179,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Utf16CharIndices>::as_str","value":"pub fn as_str(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Extract the remainder of the source `str`.","sig":null,"attributes":[{"value":"/ Extract the remainder of the source `str`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":109914,"byte_end":109960,"line_start":168,"line_end":168,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":109965,"byte_end":109968,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":109973,"byte_end":109987,"line_start":170,"line_end":170,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":109992,"byte_end":109995,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":110000,"byte_end":110007,"line_start":172,"line_end":172,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::{StrExt, Utf16Char};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":110012,"byte_end":110056,"line_start":173,"line_end":173,"column_start":5,"column_end":49}},{"value":"/ let mut iter = \"abc\".utf16char_indices();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":110061,"byte_end":110106,"line_start":174,"line_end":174,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(iter.next_back(), Some((2, Utf16Char::from('c'))));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":110111,"byte_end":110177,"line_start":175,"line_end":175,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(iter.next(), Some((0, Utf16Char::from('a'))));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":110182,"byte_end":110243,"line_start":176,"line_end":176,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(iter.as_str(), \"b\");","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":110248,"byte_end":110283,"line_start":177,"line_end":177,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":110288,"byte_end":110295,"line_start":178,"line_end":178,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1083},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":111996,"byte_end":112006,"line_start":228,"line_end":228,"column_start":12,"column_end":22},"name":"Utf16Chars","qualname":"::utf16_iterators::Utf16Chars","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the codepoints in a `str` represented as `Utf16Char`.\n","sig":null,"attributes":[{"value":"/ An iterator over the codepoints in a `str` represented as `Utf16Char`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":111893,"byte_end":111967,"line_start":226,"line_end":226,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":112575,"byte_end":112581,"line_start":246,"line_end":246,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Utf16Chars>::as_str","value":"pub fn as_str(&Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Extract the remainder of the source `str`.","sig":null,"attributes":[{"value":"/ Extract the remainder of the source `str`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":112199,"byte_end":112245,"line_start":235,"line_end":235,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":112250,"byte_end":112253,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":112258,"byte_end":112272,"line_start":237,"line_end":237,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":112277,"byte_end":112280,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":112285,"byte_end":112292,"line_start":239,"line_end":239,"column_start":5,"column_end":12}},{"value":"/ use encode_unicode::{StrExt, Utf16Char};","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":112297,"byte_end":112341,"line_start":240,"line_end":240,"column_start":5,"column_end":49}},{"value":"/ let mut iter = \"abc\".utf16chars();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":112346,"byte_end":112384,"line_start":241,"line_end":241,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(iter.next(), Some(Utf16Char::from('a')));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":112389,"byte_end":112445,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(iter.next_back(), Some(Utf16Char::from('c')));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":112450,"byte_end":112511,"line_start":243,"line_end":243,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(iter.as_str(), \"b\");","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":112516,"byte_end":112551,"line_start":244,"line_end":244,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":112556,"byte_end":112563,"line_start":245,"line_end":245,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1090},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":114645,"byte_end":114659,"line_start":39,"line_end":39,"column_start":12,"column_end":26},"name":"Utf8CharMerger","qualname":"::decoding_iterators::Utf8CharMerger","value":"Utf8CharMerger {  }","parent":null,"children":[{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095}],"decl_id":null,"docs":" Decodes UTF-8 characters from a byte iterator into `Utf8Char`s.","sig":null,"attributes":[{"value":"/ Decodes UTF-8 characters from a byte iterator into `Utf8Char`s.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":114418,"byte_end":114485,"line_start":34,"line_end":34,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":114486,"byte_end":114489,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ See [`IterExt::to_utf8chars()`](../trait.IterExt.html#tymethod.to_utf8chars)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":114490,"byte_end":114570,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"/ for examples and error handling.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":114571,"byte_end":114607,"line_start":37,"line_end":37,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":116429,"byte_end":116439,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Utf8CharMerger<B, I>>::into_inner","value":"pub fn into_inner(Self) -> I","parent":null,"children":[],"decl_id":null,"docs":" Extract the inner iterator.","sig":null,"attributes":[{"value":"/ Extract the inner iterator.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":115232,"byte_end":115263,"line_start":57,"line_end":57,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":115268,"byte_end":115271,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ If the last item produced by `.next()` was an `Err`,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":115276,"byte_end":115332,"line_start":59,"line_end":59,"column_start":5,"column_end":61}},{"value":"/ up to three following bytes might be missing.  ","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":115337,"byte_end":115388,"line_start":60,"line_end":60,"column_start":5,"column_end":56}},{"value":"/ The exact number of missing bytes for each error type should not be relied on.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":115393,"byte_end":115475,"line_start":61,"line_end":61,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":115480,"byte_end":115483,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":115488,"byte_end":115502,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":115507,"byte_end":115510,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Three bytes swallowed:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":115515,"byte_end":115541,"line_start":65,"line_end":65,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":115546,"byte_end":115553,"line_start":66,"line_end":66,"column_start":5,"column_end":12}},{"value":"/ # use encode_unicode::IterExt;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":115558,"byte_end":115592,"line_start":67,"line_end":67,"column_start":5,"column_end":39}},{"value":"/ let mut merger = b\"\\xf4\\xa1\\xb2FS\".iter().to_utf8chars();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":115597,"byte_end":115658,"line_start":68,"line_end":68,"column_start":5,"column_end":66}},{"value":"/ assert!(merger.next().unwrap().is_err());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":115663,"byte_end":115708,"line_start":69,"line_end":69,"column_start":5,"column_end":50}},{"value":"/ let mut inner: std::slice::Iter<u8> = merger.into_inner();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":115713,"byte_end":115775,"line_start":70,"line_end":70,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(inner.next(), Some(&b'S')); // b'\\xa1', b'\\xb2' and b'F' disappeared","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":115780,"byte_end":115863,"line_start":71,"line_end":71,"column_start":5,"column_end":88}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":115868,"byte_end":115875,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":115880,"byte_end":115883,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ All bytes present:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":115888,"byte_end":115910,"line_start":74,"line_end":74,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":115915,"byte_end":115922,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ # use encode_unicode::IterExt;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":115927,"byte_end":115961,"line_start":76,"line_end":76,"column_start":5,"column_end":39}},{"value":"/ let mut merger = b\"\\xb0FS\".iter().to_utf8chars();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":115966,"byte_end":116019,"line_start":77,"line_end":77,"column_start":5,"column_end":58}},{"value":"/ assert!(merger.next().unwrap().is_err());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":116024,"byte_end":116069,"line_start":78,"line_end":78,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(merger.into_inner().next(), Some(&b'F'));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":116074,"byte_end":116130,"line_start":79,"line_end":79,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":116135,"byte_end":116142,"line_start":80,"line_end":80,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":116147,"byte_end":116150,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ Two bytes missing:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":116155,"byte_end":116177,"line_start":82,"line_end":82,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":116182,"byte_end":116189,"line_start":83,"line_end":83,"column_start":5,"column_end":12}},{"value":"/ # use encode_unicode::IterExt;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":116194,"byte_end":116228,"line_start":84,"line_end":84,"column_start":5,"column_end":39}},{"value":"/ let mut merger = b\"\\xe0\\x80\\x80FS\".iter().to_utf8chars();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":116233,"byte_end":116294,"line_start":85,"line_end":85,"column_start":5,"column_end":66}},{"value":"/ assert!(merger.next().unwrap().is_err());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":116299,"byte_end":116344,"line_start":86,"line_end":86,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(merger.into_inner().next(), Some(&b'F'));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":116349,"byte_end":116405,"line_start":87,"line_end":87,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":116410,"byte_end":116417,"line_start":88,"line_end":88,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1105},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":122457,"byte_end":122472,"line_start":225,"line_end":225,"column_start":12,"column_end":27},"name":"Utf8CharDecoder","qualname":"::decoding_iterators::Utf8CharDecoder","value":"Utf8CharDecoder {  }","parent":null,"children":[{"krate":0,"index":1107},{"krate":0,"index":1108}],"decl_id":null,"docs":" An [`Utf8CharMerger`](struct.Utf8CharMerger.html) that also produces\n offsets and lengths, but can only iterate over slices.","sig":null,"attributes":[{"value":"/ An [`Utf8CharMerger`](struct.Utf8CharMerger.html) that also produces","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":122156,"byte_end":122228,"line_start":219,"line_end":219,"column_start":1,"column_end":73}},{"value":"/ offsets and lengths, but can only iterate over slices.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":122229,"byte_end":122287,"line_start":220,"line_end":220,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":122288,"byte_end":122291,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ See [`SliceExt::utf8char_indices()`](../trait.SliceExt.html#tymethod.utf8char_indices)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":122292,"byte_end":122382,"line_start":222,"line_end":222,"column_start":1,"column_end":91}},{"value":"/ for examples and error handling.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":122383,"byte_end":122419,"line_start":223,"line_end":223,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":123127,"byte_end":123135,"line_start":247,"line_end":247,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Utf8CharDecoder>::as_slice","value":"pub fn as_slice(&Self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" Extract the remainder of the source slice.","sig":null,"attributes":[{"value":"/ Extract the remainder of the source slice.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":122701,"byte_end":122747,"line_start":235,"line_end":235,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":122752,"byte_end":122755,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":122760,"byte_end":122774,"line_start":237,"line_end":237,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":122779,"byte_end":122782,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ Unlike `Utf8CharMerger::into_inner()`, bytes directly after an error","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":122787,"byte_end":122859,"line_start":239,"line_end":239,"column_start":5,"column_end":77}},{"value":"/ are never swallowed:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":122864,"byte_end":122888,"line_start":240,"line_end":240,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":122893,"byte_end":122900,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"/ # use encode_unicode::SliceExt;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":122905,"byte_end":122940,"line_start":242,"line_end":242,"column_start":5,"column_end":40}},{"value":"/ let mut iter = b\"\\xf4\\xa1\\xb2FS\".utf8char_indices();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":122945,"byte_end":123001,"line_start":243,"line_end":243,"column_start":5,"column_end":61}},{"value":"/ assert!(iter.next().unwrap().1.is_err());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":123006,"byte_end":123051,"line_start":244,"line_end":244,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(iter.as_slice(), b\"\\xa1\\xb2FS\");","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":123056,"byte_end":123103,"line_start":245,"line_end":245,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":123108,"byte_end":123115,"line_start":246,"line_end":246,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1115},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":125811,"byte_end":125826,"line_start":319,"line_end":319,"column_start":12,"column_end":27},"name":"Utf16CharMerger","qualname":"::decoding_iterators::Utf16CharMerger","value":"Utf16CharMerger {  }","parent":null,"children":[{"krate":0,"index":1118},{"krate":0,"index":1119}],"decl_id":null,"docs":" Decodes UTF-16 characters from a `u16` iterator into `Utf16Char`s.","sig":null,"attributes":[{"value":"/ Decodes UTF-16 characters from a `u16` iterator into `Utf16Char`s.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":125579,"byte_end":125649,"line_start":314,"line_end":314,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":125650,"byte_end":125653,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ See [`IterExt::to_utf16chars()`](../trait.IterExt.html#tymethod.to_utf16chars)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":125654,"byte_end":125736,"line_start":316,"line_end":316,"column_start":1,"column_end":83}},{"value":"/ for examples and error handling.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":125737,"byte_end":125773,"line_start":317,"line_end":317,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":127404,"byte_end":127414,"line_start":356,"line_end":356,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Utf16CharMerger<B, I>>::into_inner","value":"pub fn into_inner(Self) -> I","parent":null,"children":[],"decl_id":null,"docs":" Extract the inner iterator.","sig":null,"attributes":[{"value":"/ Extract the inner iterator.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":126253,"byte_end":126284,"line_start":331,"line_end":331,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":126289,"byte_end":126292,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ If the last item produced was an `Err`, the first unit might be missing.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":126297,"byte_end":126373,"line_start":333,"line_end":333,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":126378,"byte_end":126381,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":126386,"byte_end":126400,"line_start":335,"line_end":335,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":126405,"byte_end":126408,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ Unit right after an error missing","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":126413,"byte_end":126450,"line_start":337,"line_end":337,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":126455,"byte_end":126462,"line_start":338,"line_end":338,"column_start":5,"column_end":12}},{"value":"/ # use encode_unicode::IterExt;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":126467,"byte_end":126501,"line_start":339,"line_end":339,"column_start":5,"column_end":39}},{"value":"/ # use encode_unicode::error::Utf16PairError;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":126506,"byte_end":126554,"line_start":340,"line_end":340,"column_start":5,"column_end":53}},{"value":"/ let mut merger = [0xd901, 'F' as u16, 'S' as u16].iter().to_utf16chars();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":126559,"byte_end":126636,"line_start":341,"line_end":341,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(merger.next(), Some(Err(Utf16PairError::UnmatchedLeadingSurrogate)));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":126641,"byte_end":126725,"line_start":342,"line_end":342,"column_start":5,"column_end":89}},{"value":"/ let mut inner: std::slice::Iter<u16> = merger.into_inner();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":126730,"byte_end":126793,"line_start":343,"line_end":343,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(inner.next(), Some('S' as u16).as_ref()); // 'F' was consumed by Utf16CharMerger","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":126798,"byte_end":126893,"line_start":344,"line_end":344,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":126898,"byte_end":126905,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":126910,"byte_end":126913,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ Error that doesn't swallow any units","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":126918,"byte_end":126958,"line_start":347,"line_end":347,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":126963,"byte_end":126970,"line_start":348,"line_end":348,"column_start":5,"column_end":12}},{"value":"/ # use encode_unicode::IterExt;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":126975,"byte_end":127009,"line_start":349,"line_end":349,"column_start":5,"column_end":39}},{"value":"/ # use encode_unicode::error::Utf16PairError;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":127014,"byte_end":127062,"line_start":350,"line_end":350,"column_start":5,"column_end":53}},{"value":"/ let mut merger = [0xde00, 'F' as u16, 'S' as u16].iter().to_utf16chars();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":127067,"byte_end":127144,"line_start":351,"line_end":351,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(merger.next(), Some(Err(Utf16PairError::UnexpectedTrailingSurrogate)));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":127149,"byte_end":127235,"line_start":352,"line_end":352,"column_start":5,"column_end":91}},{"value":"/ let mut inner: std::slice::Iter<u16> = merger.into_inner();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":127240,"byte_end":127303,"line_start":353,"line_end":353,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(inner.next(), Some('F' as u16).as_ref()); // not consumed","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":127308,"byte_end":127380,"line_start":354,"line_end":354,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":127385,"byte_end":127392,"line_start":355,"line_end":355,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":128135,"byte_end":128155,"line_start":375,"line_end":375,"column_start":12,"column_end":32},"name":"into_remaining_units","qualname":"<Utf16CharMerger<B, I>>::into_remaining_units","value":"pub fn into_remaining_units(Self) -> Chain<option::IntoIter<B>, I>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the remaining units.\n Unlike `into_inner()` this will never drop any units.","sig":null,"attributes":[{"value":"/ Returns an iterator over the remaining units.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":127456,"byte_end":127505,"line_start":359,"line_end":359,"column_start":5,"column_end":54}},{"value":"/ Unlike `into_inner()` this will never drop any units.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":127510,"byte_end":127567,"line_start":360,"line_end":360,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":127572,"byte_end":127575,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ The exact type of the returned iterator should not be depended on.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":127580,"byte_end":127650,"line_start":362,"line_end":362,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":127655,"byte_end":127658,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":127663,"byte_end":127677,"line_start":364,"line_end":364,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":127682,"byte_end":127685,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":127690,"byte_end":127697,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/ # use encode_unicode::IterExt;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":127702,"byte_end":127736,"line_start":367,"line_end":367,"column_start":5,"column_end":39}},{"value":"/ # use encode_unicode::error::Utf16PairError;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":127741,"byte_end":127789,"line_start":368,"line_end":368,"column_start":5,"column_end":53}},{"value":"/ let slice = [0xd901, 'F' as u16, 'S' as u16];","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":127794,"byte_end":127843,"line_start":369,"line_end":369,"column_start":5,"column_end":54}},{"value":"/ let mut merger = slice.iter().to_utf16chars();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":127848,"byte_end":127898,"line_start":370,"line_end":370,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(merger.next(), Some(Err(Utf16PairError::UnmatchedLeadingSurrogate)));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":127903,"byte_end":127987,"line_start":371,"line_end":371,"column_start":5,"column_end":89}},{"value":"/ let mut remaining = merger.into_remaining_units();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":127992,"byte_end":128046,"line_start":372,"line_end":372,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(remaining.next(), Some('F' as u16).as_ref());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":128051,"byte_end":128111,"line_start":373,"line_end":373,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":128116,"byte_end":128123,"line_start":374,"line_end":374,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1128},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":130495,"byte_end":130511,"line_start":430,"line_end":430,"column_start":12,"column_end":28},"name":"Utf16CharDecoder","qualname":"::decoding_iterators::Utf16CharDecoder","value":"Utf16CharDecoder {  }","parent":null,"children":[{"krate":0,"index":1130},{"krate":0,"index":1131}],"decl_id":null,"docs":" An [`Utf16CharMerger`](struct.Utf16CharMerger.html) that also produces\n offsets and lengths, but can only iterate over slices.","sig":null,"attributes":[{"value":"/ An [`Utf16CharMerger`](struct.Utf16CharMerger.html) that also produces","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":130190,"byte_end":130264,"line_start":424,"line_end":424,"column_start":1,"column_end":75}},{"value":"/ offsets and lengths, but can only iterate over slices.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":130265,"byte_end":130323,"line_start":425,"line_end":425,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":130324,"byte_end":130327,"line_start":426,"line_end":426,"column_start":1,"column_end":4}},{"value":"/ See [`SliceExt::utf16char_indices()`](../trait.SliceExt.html#tymethod.utf16char_indices)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":130328,"byte_end":130420,"line_start":427,"line_end":427,"column_start":1,"column_end":93}},{"value":"/ for examples and error handling.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":130421,"byte_end":130457,"line_start":428,"line_end":428,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":131275,"byte_end":131283,"line_start":452,"line_end":452,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Utf16CharDecoder>::as_slice","value":"pub fn as_slice(&Self) -> &[u16]","parent":null,"children":[],"decl_id":null,"docs":" Extract the remainder of the source slice.","sig":null,"attributes":[{"value":"/ Extract the remainder of the source slice.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":130737,"byte_end":130783,"line_start":440,"line_end":440,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":130788,"byte_end":130791,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":130796,"byte_end":130810,"line_start":442,"line_end":442,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":130815,"byte_end":130818,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ Unlike `Utf16CharMerger::into_inner()`, the unit after an error is never swallowed:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":130823,"byte_end":130910,"line_start":444,"line_end":444,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":130915,"byte_end":130922,"line_start":445,"line_end":445,"column_start":5,"column_end":12}},{"value":"/ # use encode_unicode::SliceExt;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":130927,"byte_end":130962,"line_start":446,"line_end":446,"column_start":5,"column_end":40}},{"value":"/ # use encode_unicode::error::Utf16PairError;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":130967,"byte_end":131015,"line_start":447,"line_end":447,"column_start":5,"column_end":53}},{"value":"/ let mut iter = [0xd901, 'F' as u16, 'S' as u16].utf16char_indices();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":131020,"byte_end":131092,"line_start":448,"line_end":448,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(iter.next(), Some((0, Err(Utf16PairError::UnmatchedLeadingSurrogate), 1)));","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":131097,"byte_end":131187,"line_start":449,"line_end":449,"column_start":5,"column_end":95}},{"value":"/ assert_eq!(iter.as_slice(), &['F' as u16, 'S' as u16]);","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":131192,"byte_end":131251,"line_start":450,"line_end":450,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":131256,"byte_end":131263,"line_start":451,"line_end":451,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":663},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":2624,"byte_end":2629,"line_start":62,"line_end":62,"column_start":9,"column_end":14},"name":"error","qualname":"::error","value":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":1318},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":1326},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679}],"decl_id":null,"docs":" Errors returned by various conversion methods in this crate.\n","sig":null,"attributes":[{"value":"/ Errors returned by various conversion methods in this crate.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":2679,"byte_end":2743,"line_start":63,"line_end":63,"column_start":5,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":680},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":3077,"byte_end":3085,"line_start":72,"line_end":72,"column_start":9,"column_end":17},"name":"iterator","qualname":"::iterator","value":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696}],"decl_id":null,"docs":" Iterator types that you should rarely need to name\n","sig":null,"attributes":[{"value":"/ Iterator types that you should rarely need to name","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\lib.rs","byte_start":3092,"byte_end":3146,"line_start":73,"line_end":73,"column_start":5,"column_end":59}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":6298,"byte_end":6314,"line_start":96,"line_end":96,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":15}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":42414,"byte_end":42415,"line_start":748,"line_end":748,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":49041,"byte_end":49042,"line_start":900,"line_end":900,"column_start":47,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":51040,"byte_end":51048,"line_start":52,"line_end":52,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":52187,"byte_end":52195,"line_start":82,"line_end":82,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":53333,"byte_end":53341,"line_start":111,"line_end":111,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":53606,"byte_end":53614,"line_start":121,"line_end":121,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":53836,"byte_end":53839,"line_start":131,"line_end":131,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":54348,"byte_end":54351,"line_start":147,"line_end":147,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":54533,"byte_end":54539,"line_start":153,"line_end":153,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":54724,"byte_end":54730,"line_start":159,"line_end":159,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":54914,"byte_end":54920,"line_start":165,"line_end":165,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":55154,"byte_end":55160,"line_start":173,"line_end":173,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":55342,"byte_end":55345,"line_start":179,"line_end":179,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":55547,"byte_end":55550,"line_start":185,"line_end":185,"column_start":41,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":55783,"byte_end":55791,"line_start":195,"line_end":195,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":55888,"byte_end":55896,"line_start":200,"line_end":200,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":56020,"byte_end":56028,"line_start":205,"line_end":205,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":56114,"byte_end":56122,"line_start":210,"line_end":210,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":56201,"byte_end":56209,"line_start":215,"line_end":215,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":56421,"byte_end":56429,"line_start":228,"line_end":228,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":57872,"byte_end":57880,"line_start":277,"line_end":277,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":58002,"byte_end":58010,"line_start":282,"line_end":282,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":58153,"byte_end":58161,"line_start":287,"line_end":287,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":58402,"byte_end":58410,"line_start":297,"line_end":297,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":58653,"byte_end":58661,"line_start":307,"line_end":307,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":58967,"byte_end":58975,"line_start":318,"line_end":318,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":59098,"byte_end":59106,"line_start":323,"line_end":323,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":59813,"byte_end":59821,"line_start":344,"line_end":344,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":61055,"byte_end":61063,"line_start":386,"line_end":386,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":235},{"krate":0,"index":237},{"krate":0,"index":239},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":72095,"byte_end":72107,"line_start":25,"line_end":25,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":72424,"byte_end":72436,"line_start":33,"line_end":33,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":72534,"byte_end":72546,"line_start":38,"line_end":38,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":72919,"byte_end":72931,"line_start":53,"line_end":53,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":73138,"byte_end":73150,"line_start":60,"line_end":60,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":73555,"byte_end":73567,"line_start":73,"line_end":73,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":76129,"byte_end":76145,"line_start":154,"line_end":154,"column_start":45,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":76324,"byte_end":76340,"line_start":160,"line_end":160,"column_start":46,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":76706,"byte_end":76722,"line_start":170,"line_end":170,"column_start":59,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":77651,"byte_end":77667,"line_start":194,"line_end":194,"column_start":55,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":79213,"byte_end":79228,"line_start":242,"line_end":242,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":79336,"byte_end":79351,"line_start":247,"line_end":247,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":79840,"byte_end":79855,"line_start":263,"line_end":263,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":80557,"byte_end":80572,"line_start":282,"line_end":282,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":81232,"byte_end":81247,"line_start":298,"line_end":298,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":81625,"byte_end":81634,"line_start":311,"line_end":311,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":81738,"byte_end":81747,"line_start":316,"line_end":316,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":82211,"byte_end":82220,"line_start":332,"line_end":332,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":82465,"byte_end":82474,"line_start":341,"line_end":341,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":82610,"byte_end":82619,"line_start":346,"line_end":346,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":84407,"byte_end":84416,"line_start":52,"line_end":52,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":366},{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":85447,"byte_end":85456,"line_start":78,"line_end":78,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":85629,"byte_end":85638,"line_start":84,"line_end":84,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":86752,"byte_end":86761,"line_start":114,"line_end":114,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":86982,"byte_end":86985,"line_start":124,"line_end":124,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":87373,"byte_end":87376,"line_start":137,"line_end":137,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":87567,"byte_end":87570,"line_start":143,"line_end":143,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":87797,"byte_end":87800,"line_start":151,"line_end":151,"column_start":42,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":87989,"byte_end":87995,"line_start":158,"line_end":158,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":88205,"byte_end":88211,"line_start":164,"line_end":164,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":88398,"byte_end":88404,"line_start":170,"line_end":170,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":88623,"byte_end":88629,"line_start":178,"line_end":178,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":88844,"byte_end":88853,"line_start":188,"line_end":188,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":88968,"byte_end":88977,"line_start":194,"line_end":194,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":89072,"byte_end":89081,"line_start":200,"line_end":200,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":412},{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":89302,"byte_end":89311,"line_start":214,"line_end":214,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":90901,"byte_end":90910,"line_start":265,"line_end":265,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":91032,"byte_end":91041,"line_start":270,"line_end":270,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":91184,"byte_end":91193,"line_start":275,"line_end":275,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":91451,"byte_end":91460,"line_start":282,"line_end":282,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":91587,"byte_end":91596,"line_start":288,"line_end":288,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":92492,"byte_end":92501,"line_start":309,"line_end":309,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":92750,"byte_end":92759,"line_start":319,"line_end":319,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":93074,"byte_end":93083,"line_start":330,"line_end":330,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":93207,"byte_end":93216,"line_start":335,"line_end":335,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":93921,"byte_end":93930,"line_start":356,"line_end":356,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":94364,"byte_end":94373,"line_start":371,"line_end":371,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":95643,"byte_end":95652,"line_start":413,"line_end":413,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":105088,"byte_end":105101,"line_start":26,"line_end":26,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":105296,"byte_end":105309,"line_start":32,"line_end":32,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":105498,"byte_end":105511,"line_start":38,"line_end":38,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":106018,"byte_end":106031,"line_start":51,"line_end":51,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":106197,"byte_end":106210,"line_start":57,"line_end":57,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":108123,"byte_end":108140,"line_start":114,"line_end":114,"column_start":46,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":108321,"byte_end":108338,"line_start":120,"line_end":120,"column_start":47,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":108694,"byte_end":108711,"line_start":130,"line_end":130,"column_start":60,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":109761,"byte_end":109777,"line_start":162,"line_end":162,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":109887,"byte_end":109903,"line_start":167,"line_end":167,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":110396,"byte_end":110412,"line_start":183,"line_end":183,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":111123,"byte_end":111139,"line_start":202,"line_end":202,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":111663,"byte_end":111679,"line_start":216,"line_end":216,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":112061,"byte_end":112071,"line_start":229,"line_end":229,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":112178,"byte_end":112188,"line_start":234,"line_end":234,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":112656,"byte_end":112666,"line_start":250,"line_end":250,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":112915,"byte_end":112925,"line_start":259,"line_end":259,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":113064,"byte_end":113074,"line_start":264,"line_end":264,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":114968,"byte_end":114982,"line_start":47,"line_end":47,"column_start":13,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":115206,"byte_end":115220,"line_start":56,"line_end":56,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":118357,"byte_end":118371,"line_start":130,"line_end":130,"column_start":53,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":121684,"byte_end":121698,"line_start":205,"line_end":205,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":122546,"byte_end":122561,"line_start":229,"line_end":229,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":122675,"byte_end":122690,"line_start":234,"line_end":234,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":123220,"byte_end":123235,"line_start":251,"line_end":251,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":124150,"byte_end":124165,"line_start":276,"line_end":276,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":125390,"byte_end":125405,"line_start":306,"line_end":306,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":126066,"byte_end":126081,"line_start":325,"line_end":325,"column_start":13,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":126226,"byte_end":126241,"line_start":330,"line_end":330,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":619},{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":128304,"byte_end":128319,"line_start":379,"line_end":379,"column_start":54,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":129913,"byte_end":129928,"line_start":414,"line_end":414,"column_start":57,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":130587,"byte_end":130603,"line_start":434,"line_end":434,"column_start":29,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":130710,"byte_end":130726,"line_start":439,"line_end":439,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":131367,"byte_end":131383,"line_start":456,"line_end":456,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":132632,"byte_end":132648,"line_start":490,"line_end":490,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\errors.rs","byte_start":6298,"byte_end":6314,"line_start":96,"line_end":96,"column_start":6,"column_end":22},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":769},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":20627,"byte_end":20632,"line_start":161,"line_end":161,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":51}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":33202,"byte_end":33207,"line_start":498,"line_end":498,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":1954},"to":{"krate":0,"index":96}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":34680,"byte_end":34688,"line_start":546,"line_end":546,"column_start":20,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":5311},"to":{"krate":0,"index":106}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":34689,"byte_end":34694,"line_start":546,"line_end":546,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":106}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":42414,"byte_end":42415,"line_start":748,"line_end":748,"column_start":30,"column_end":31},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":112},"to":{"krate":0,"index":106}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":43301,"byte_end":43306,"line_start":769,"line_end":769,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2323},"to":{"krate":0,"index":117}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\traits.rs","byte_start":49041,"byte_end":49042,"line_start":900,"line_end":900,"column_start":47,"column_end":48},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":121},"to":{"krate":0,"index":117}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":51040,"byte_end":51048,"line_start":52,"line_end":52,"column_start":23,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":992},"to":{"krate":2,"index":8578}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":52187,"byte_end":52195,"line_start":82,"line_end":82,"column_start":26,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":992},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":53333,"byte_end":53341,"line_start":111,"line_end":111,"column_start":21,"column_end":29},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":992},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":53606,"byte_end":53614,"line_start":121,"line_end":121,"column_start":23,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":992},"to":{"krate":2,"index":5217}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":53836,"byte_end":53839,"line_start":131,"line_end":131,"column_start":27,"column_end":30},"kind":{"Impl":{"id":23}},"from":{"krate":5,"index":4754},"to":{"krate":2,"index":5226}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":54348,"byte_end":54351,"line_start":147,"line_end":147,"column_start":35,"column_end":38},"kind":{"Impl":{"id":24}},"from":{"krate":5,"index":4754},"to":{"krate":2,"index":5226}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":54533,"byte_end":54539,"line_start":153,"line_end":153,"column_start":27,"column_end":33},"kind":{"Impl":{"id":25}},"from":{"krate":5,"index":5501},"to":{"krate":2,"index":5226}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":54724,"byte_end":54730,"line_start":159,"line_end":159,"column_start":35,"column_end":41},"kind":{"Impl":{"id":26}},"from":{"krate":5,"index":5501},"to":{"krate":2,"index":5226}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":54914,"byte_end":54920,"line_start":165,"line_end":165,"column_start":33,"column_end":39},"kind":{"Impl":{"id":27}},"from":{"krate":5,"index":5501},"to":{"krate":2,"index":5213}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":55154,"byte_end":55160,"line_start":173,"line_end":173,"column_start":41,"column_end":47},"kind":{"Impl":{"id":28}},"from":{"krate":5,"index":5501},"to":{"krate":2,"index":5213}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":55342,"byte_end":55345,"line_start":179,"line_end":179,"column_start":33,"column_end":36},"kind":{"Impl":{"id":29}},"from":{"krate":5,"index":4754},"to":{"krate":2,"index":5213}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":55547,"byte_end":55550,"line_start":185,"line_end":185,"column_start":41,"column_end":44},"kind":{"Impl":{"id":30}},"from":{"krate":5,"index":4754},"to":{"krate":2,"index":5213}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":55783,"byte_end":55791,"line_start":195,"line_end":195,"column_start":22,"column_end":30},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":992},"to":{"krate":2,"index":1954}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":55888,"byte_end":55896,"line_start":200,"line_end":200,"column_start":21,"column_end":29},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":992},"to":{"krate":2,"index":1954}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":56020,"byte_end":56028,"line_start":205,"line_end":205,"column_start":23,"column_end":31},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":992},"to":{"krate":2,"index":1720}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":56114,"byte_end":56122,"line_start":210,"line_end":210,"column_start":22,"column_end":30},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":992},"to":{"krate":2,"index":1720}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":56201,"byte_end":56209,"line_start":215,"line_end":215,"column_start":16,"column_end":24},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":992},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":56421,"byte_end":56429,"line_start":228,"line_end":228,"column_start":19,"column_end":27},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":992},"to":{"krate":1,"index":478}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":57872,"byte_end":57880,"line_start":277,"line_end":277,"column_start":21,"column_end":29},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":992},"to":{"krate":2,"index":6794}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":58002,"byte_end":58010,"line_start":282,"line_end":282,"column_start":21,"column_end":29},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":992},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":58153,"byte_end":58161,"line_start":287,"line_end":287,"column_start":23,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":992},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":58402,"byte_end":58410,"line_start":297,"line_end":297,"column_start":26,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":992},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":58653,"byte_end":58661,"line_start":307,"line_end":307,"column_start":27,"column_end":35},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":992},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":58967,"byte_end":58975,"line_start":318,"line_end":318,"column_start":31,"column_end":39},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":992},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":59098,"byte_end":59106,"line_start":323,"line_end":323,"column_start":32,"column_end":40},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":992},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":59813,"byte_end":59821,"line_start":344,"line_end":344,"column_start":24,"column_end":32},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":992},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_char.rs","byte_start":61055,"byte_end":61063,"line_start":386,"line_end":386,"column_start":6,"column_end":14},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":992},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":72095,"byte_end":72107,"line_start":25,"line_end":25,"column_start":25,"column_end":37},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1017},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":72424,"byte_end":72436,"line_start":33,"line_end":33,"column_start":21,"column_end":33},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1017},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":72534,"byte_end":72546,"line_start":38,"line_end":38,"column_start":19,"column_end":31},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1017},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":72919,"byte_end":72931,"line_start":53,"line_end":53,"column_start":28,"column_end":40},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1017},"to":{"krate":2,"index":5265}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":73138,"byte_end":73150,"line_start":60,"line_end":60,"column_start":15,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1017},"to":{"krate":1,"index":3120}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":73555,"byte_end":73567,"line_start":73,"line_end":73,"column_start":21,"column_end":33},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1017},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":76129,"byte_end":76145,"line_start":154,"line_end":154,"column_start":45,"column_end":61},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1022},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":76324,"byte_end":76340,"line_start":160,"line_end":160,"column_start":46,"column_end":62},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1022},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":76706,"byte_end":76722,"line_start":170,"line_end":170,"column_start":59,"column_end":75},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1022},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":77651,"byte_end":77667,"line_start":194,"line_end":194,"column_start":55,"column_end":71},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1022},"to":{"krate":1,"index":3120}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":79213,"byte_end":79228,"line_start":242,"line_end":242,"column_start":28,"column_end":43},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1031},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":79336,"byte_end":79351,"line_start":247,"line_end":247,"column_start":10,"column_end":25},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1031},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":79840,"byte_end":79855,"line_start":263,"line_end":263,"column_start":23,"column_end":38},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1031},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":80557,"byte_end":80572,"line_start":282,"line_end":282,"column_start":34,"column_end":49},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1031},"to":{"krate":2,"index":5240}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":81232,"byte_end":81247,"line_start":298,"line_end":298,"column_start":25,"column_end":40},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1031},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":81625,"byte_end":81634,"line_start":311,"line_end":311,"column_start":28,"column_end":37},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1038},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":81738,"byte_end":81747,"line_start":316,"line_end":316,"column_start":10,"column_end":19},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1038},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":82211,"byte_end":82220,"line_start":332,"line_end":332,"column_start":23,"column_end":32},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1038},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":82465,"byte_end":82474,"line_start":341,"line_end":341,"column_start":34,"column_end":43},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1038},"to":{"krate":2,"index":5240}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf8_iterators.rs","byte_start":82610,"byte_end":82619,"line_start":346,"line_end":346,"column_start":25,"column_end":34},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1038},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":84407,"byte_end":84416,"line_start":52,"line_end":52,"column_start":18,"column_end":27},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":8578}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":85447,"byte_end":85456,"line_start":78,"line_end":78,"column_start":21,"column_end":30},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":85629,"byte_end":85638,"line_start":84,"line_end":84,"column_start":25,"column_end":34},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":86752,"byte_end":86761,"line_start":114,"line_end":114,"column_start":23,"column_end":32},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":5217}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":86982,"byte_end":86985,"line_start":124,"line_end":124,"column_start":28,"column_end":31},"kind":{"Impl":{"id":73}},"from":{"krate":5,"index":4754},"to":{"krate":2,"index":5226}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":87373,"byte_end":87376,"line_start":137,"line_end":137,"column_start":36,"column_end":39},"kind":{"Impl":{"id":74}},"from":{"krate":5,"index":4754},"to":{"krate":2,"index":5226}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":87567,"byte_end":87570,"line_start":143,"line_end":143,"column_start":34,"column_end":37},"kind":{"Impl":{"id":75}},"from":{"krate":5,"index":4754},"to":{"krate":2,"index":5213}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":87797,"byte_end":87800,"line_start":151,"line_end":151,"column_start":42,"column_end":45},"kind":{"Impl":{"id":76}},"from":{"krate":5,"index":4754},"to":{"krate":2,"index":5213}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":87989,"byte_end":87995,"line_start":158,"line_end":158,"column_start":28,"column_end":34},"kind":{"Impl":{"id":77}},"from":{"krate":5,"index":5501},"to":{"krate":2,"index":5226}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":88205,"byte_end":88211,"line_start":164,"line_end":164,"column_start":36,"column_end":42},"kind":{"Impl":{"id":78}},"from":{"krate":5,"index":5501},"to":{"krate":2,"index":5226}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":88398,"byte_end":88404,"line_start":170,"line_end":170,"column_start":34,"column_end":40},"kind":{"Impl":{"id":79}},"from":{"krate":5,"index":5501},"to":{"krate":2,"index":5213}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":88623,"byte_end":88629,"line_start":178,"line_end":178,"column_start":42,"column_end":48},"kind":{"Impl":{"id":80}},"from":{"krate":5,"index":5501},"to":{"krate":2,"index":5213}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":88844,"byte_end":88853,"line_start":188,"line_end":188,"column_start":23,"column_end":32},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":1954}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":88968,"byte_end":88977,"line_start":194,"line_end":194,"column_start":24,"column_end":33},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":1720}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":89072,"byte_end":89081,"line_start":200,"line_end":200,"column_start":16,"column_end":25},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":2242}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":89302,"byte_end":89311,"line_start":214,"line_end":214,"column_start":19,"column_end":28},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1045},"to":{"krate":1,"index":478}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":90901,"byte_end":90910,"line_start":265,"line_end":265,"column_start":21,"column_end":30},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":6794}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":91032,"byte_end":91041,"line_start":270,"line_end":270,"column_start":21,"column_end":30},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":91184,"byte_end":91193,"line_start":275,"line_end":275,"column_start":23,"column_end":32},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":91451,"byte_end":91460,"line_start":282,"line_end":282,"column_start":21,"column_end":30},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":91587,"byte_end":91596,"line_start":288,"line_end":288,"column_start":14,"column_end":23},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":1796}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":92492,"byte_end":92501,"line_start":309,"line_end":309,"column_start":26,"column_end":35},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":92750,"byte_end":92759,"line_start":319,"line_end":319,"column_start":27,"column_end":36},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":93074,"byte_end":93083,"line_start":330,"line_end":330,"column_start":30,"column_end":39},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":93207,"byte_end":93216,"line_start":335,"line_end":335,"column_start":31,"column_end":40},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":1807}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":93921,"byte_end":93930,"line_start":356,"line_end":356,"column_start":25,"column_end":34},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":94364,"byte_end":94373,"line_start":371,"line_end":371,"column_start":24,"column_end":33},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":1770}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_char.rs","byte_start":95643,"byte_end":95652,"line_start":413,"line_end":413,"column_start":6,"column_end":15},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1045},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":105088,"byte_end":105101,"line_start":26,"line_end":26,"column_start":21,"column_end":34},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1062},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":105296,"byte_end":105309,"line_start":32,"line_end":32,"column_start":26,"column_end":39},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1062},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":105498,"byte_end":105511,"line_start":38,"line_end":38,"column_start":19,"column_end":32},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1062},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":106018,"byte_end":106031,"line_start":51,"line_end":51,"column_start":28,"column_end":41},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1062},"to":{"krate":2,"index":5265}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":106197,"byte_end":106210,"line_start":57,"line_end":57,"column_start":21,"column_end":34},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1062},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":108123,"byte_end":108140,"line_start":114,"line_end":114,"column_start":46,"column_end":63},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1067},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":108321,"byte_end":108338,"line_start":120,"line_end":120,"column_start":47,"column_end":64},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1067},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":108694,"byte_end":108711,"line_start":130,"line_end":130,"column_start":60,"column_end":77},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1067},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":109761,"byte_end":109777,"line_start":162,"line_end":162,"column_start":28,"column_end":44},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1076},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":109887,"byte_end":109903,"line_start":167,"line_end":167,"column_start":10,"column_end":26},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1076},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":110396,"byte_end":110412,"line_start":183,"line_end":183,"column_start":23,"column_end":39},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1076},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":111123,"byte_end":111139,"line_start":202,"line_end":202,"column_start":34,"column_end":50},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1076},"to":{"krate":2,"index":5240}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":111663,"byte_end":111679,"line_start":216,"line_end":216,"column_start":25,"column_end":41},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1076},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":112061,"byte_end":112071,"line_start":229,"line_end":229,"column_start":28,"column_end":38},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":112178,"byte_end":112188,"line_start":234,"line_end":234,"column_start":10,"column_end":20},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1083},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":112656,"byte_end":112666,"line_start":250,"line_end":250,"column_start":23,"column_end":33},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":112915,"byte_end":112925,"line_start":259,"line_end":259,"column_start":34,"column_end":44},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":5240}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\utf16_iterators.rs","byte_start":113064,"byte_end":113074,"line_start":264,"line_end":264,"column_start":25,"column_end":35},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1083},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":114968,"byte_end":114982,"line_start":47,"line_end":47,"column_start":13,"column_end":27},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1090},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":115206,"byte_end":115220,"line_start":56,"line_end":56,"column_start":40,"column_end":54},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1090},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":118357,"byte_end":118371,"line_start":130,"line_end":130,"column_start":53,"column_end":67},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1090},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":121684,"byte_end":121698,"line_start":205,"line_end":205,"column_start":56,"column_end":70},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1090},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":122546,"byte_end":122561,"line_start":229,"line_end":229,"column_start":28,"column_end":43},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1105},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":122675,"byte_end":122690,"line_start":234,"line_end":234,"column_start":10,"column_end":25},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":123220,"byte_end":123235,"line_start":251,"line_end":251,"column_start":23,"column_end":38},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1105},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":124150,"byte_end":124165,"line_start":276,"line_end":276,"column_start":34,"column_end":49},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1105},"to":{"krate":2,"index":5240}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":125390,"byte_end":125405,"line_start":306,"line_end":306,"column_start":20,"column_end":35},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1105},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":126066,"byte_end":126081,"line_start":325,"line_end":325,"column_start":13,"column_end":28},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1115},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":126226,"byte_end":126241,"line_start":330,"line_end":330,"column_start":41,"column_end":56},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1115},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":128304,"byte_end":128319,"line_start":379,"line_end":379,"column_start":54,"column_end":69},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1115},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":129913,"byte_end":129928,"line_start":414,"line_end":414,"column_start":57,"column_end":72},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1115},"to":{"krate":2,"index":6606}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":130587,"byte_end":130603,"line_start":434,"line_end":434,"column_start":29,"column_end":45},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1128},"to":{"krate":2,"index":1963}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":130710,"byte_end":130726,"line_start":439,"line_end":439,"column_start":10,"column_end":26},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":131367,"byte_end":131383,"line_start":456,"line_end":456,"column_start":23,"column_end":39},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1128},"to":{"krate":2,"index":5311}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\encode_unicode-0.3.5\\src\\decoding_iterators.rs","byte_start":132632,"byte_end":132648,"line_start":490,"line_end":490,"column_start":20,"column_end":36},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1128},"to":{"krate":2,"index":6606}}]}