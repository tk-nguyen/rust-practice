{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4","program":"C:\\Users\\Thai Nguyen\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","autocfg","C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=48f014ec39d00921","-C","extra-filename=-48f014ec39d00921","--out-dir","c:\\Cygwin\\home\\Thai Nguyen\\rust\\rustlings\\target\\rls\\debug\\deps","-L","dependency=c:\\Cygwin\\home\\Thai Nguyen\\rust\\rustlings\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Thai Nguyen\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Cygwin\\home\\Thai Nguyen\\rust\\rustlings\\target\\rls\\debug\\deps\\libautocfg-48f014ec39d00921.rmeta"},"prelude":{"crate_id":{"name":"autocfg","disambiguator":[16348579522882570169,17969910514682594324]},"crate_root":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src","external_crates":[{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[2134305066550747688,1377703208702874155]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[1322159461575500717,8297198428669169011]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2376346800744392852,12342541482992122530]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14946502858004023242,6637215598610016319]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5305136910335682758,6890491777619641650]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[8079093424489733033,9678018066858265018]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8191054904896780843,65190916132359678]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17454577518104061478,8473922882117178851]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14702801963282246562,3385633331338644346]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4483555191844012602,617965746000623535]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[6496369475756502088,8603909216288097824]}},{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[8790568169648576788,8899032378407077408]}}],"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":0,"byte_end":9513,"line_start":1,"line_end":305,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":1525,"byte_end":1530,"line_start":51,"line_end":51,"column_start":16,"column_end":21},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":0,"byte_end":9513,"line_start":1,"line_end":305,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":130},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":44},{"krate":0,"index":120},{"krate":0,"index":128},{"krate":0,"index":126},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":68}],"decl_id":null,"docs":" A Rust library for build scripts to automatically configure code based on\n compiler support.  Code snippets are dynamically tested to see if the `rustc`\n will accept them, rather than hard-coding specific version support.","sig":null,"attributes":[{"value":"/ A Rust library for build scripts to automatically configure code based on","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ compiler support.  Code snippets are dynamically tested to see if the `rustc`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":78,"byte_end":159,"line_start":2,"line_end":2,"column_start":1,"column_end":82}},{"value":"/ will accept them, rather than hard-coding specific version support.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":160,"byte_end":231,"line_start":3,"line_end":3,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":232,"byte_end":235,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":236,"byte_end":239,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":240,"byte_end":252,"line_start":6,"line_end":6,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":253,"byte_end":256,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Add this to your `Cargo.toml`:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":257,"byte_end":291,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":292,"byte_end":295,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":296,"byte_end":307,"line_start":10,"line_end":10,"column_start":1,"column_end":12}},{"value":"/ [build-dependencies]","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":308,"byte_end":332,"line_start":11,"line_end":11,"column_start":1,"column_end":25}},{"value":"/ autocfg = \"0.1\"","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":333,"byte_end":352,"line_start":12,"line_end":12,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":353,"byte_end":360,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":361,"byte_end":364,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Then use it in your `build.rs` script to detect compiler features.  For","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":365,"byte_end":440,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"/ example, to test for 128-bit integer support, it might look like:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":441,"byte_end":510,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":511,"byte_end":514,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":515,"byte_end":526,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/ extern crate autocfg;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":527,"byte_end":552,"line_start":19,"line_end":19,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":553,"byte_end":556,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":557,"byte_end":572,"line_start":21,"line_end":21,"column_start":1,"column_end":16}},{"value":"/ #   // Normally, cargo will set `OUT_DIR` for build scripts.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":573,"byte_end":637,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"/ #   std::env::set_var(\"OUT_DIR\", \"target\");","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":638,"byte_end":685,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"/     let ac = autocfg::new();","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":686,"byte_end":718,"line_start":24,"line_end":24,"column_start":1,"column_end":33}},{"value":"/     ac.emit_has_type(\"i128\");","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":719,"byte_end":752,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":753,"byte_end":756,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/     // (optional) We don't need to rerun for anything external.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":757,"byte_end":824,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"/     autocfg::rerun_path(file!());","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":825,"byte_end":862,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":863,"byte_end":868,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":869,"byte_end":876,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":877,"byte_end":880,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ If the type test succeeds, this will write a `cargo:rustc-cfg=has_i128` line","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":881,"byte_end":961,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ for Cargo, which translates to Rust arguments `--cfg has_i128`.  Then in the","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":962,"byte_end":1042,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ rest of your Rust code, you can add `#[cfg(has_i128)]` conditions on code that","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":1043,"byte_end":1125,"line_start":34,"line_end":34,"column_start":1,"column_end":83}},{"value":"/ should only be used when the compiler supports it.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":1126,"byte_end":1180,"line_start":35,"line_end":35,"column_start":1,"column_end":55}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":1182,"byte_end":1221,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":1222,"byte_end":1244,"line_start":38,"line_end":38,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\error.rs","byte_start":9664,"byte_end":9669,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":71}],"decl_id":null,"docs":" A common error type for the `autocfg` crate.\n","sig":null,"attributes":[{"value":"/ A common error type for the `autocfg` crate.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\error.rs","byte_start":9587,"byte_end":9635,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":1703,"byte_end":1710,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"AutoCfg","qualname":"::AutoCfg","value":"AutoCfg {  }","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125}],"decl_id":null,"docs":" Helper to detect compiler features for `cfg` output in build scripts.\n","sig":null,"attributes":[{"value":"/ Helper to detect compiler features for `cfg` output in build scripts.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":1594,"byte_end":1667,"line_start":59,"line_end":59,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":2009,"byte_end":2013,"line_start":74,"line_end":74,"column_start":8,"column_end":12},"name":"emit","qualname":"::emit","value":"pub fn emit(&str)","parent":null,"children":[],"decl_id":null,"docs":" Writes a config flag for rustc on standard out.","sig":null,"attributes":[{"value":"/ Writes a config flag for rustc on standard out.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":1834,"byte_end":1885,"line_start":69,"line_end":69,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":1886,"byte_end":1889,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ This looks like: `cargo:rustc-cfg=CFG`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":1890,"byte_end":1932,"line_start":71,"line_end":71,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":1933,"byte_end":1936,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ Cargo will use this in arguments to rustc, like `--cfg CFG`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":1937,"byte_end":2001,"line_start":73,"line_end":73,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":2349,"byte_end":2359,"line_start":84,"line_end":84,"column_start":8,"column_end":18},"name":"rerun_path","qualname":"::rerun_path","value":"pub fn rerun_path(&str)","parent":null,"children":[],"decl_id":null,"docs":" Writes a line telling Cargo to rerun the build script if `path` changes.","sig":null,"attributes":[{"value":"/ Writes a line telling Cargo to rerun the build script if `path` changes.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":2071,"byte_end":2147,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":2148,"byte_end":2151,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ This looks like: `cargo:rerun-if-changed=PATH`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":2152,"byte_end":2202,"line_start":80,"line_end":80,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":2203,"byte_end":2206,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ This requires at least cargo 0.7.0, corresponding to rustc 1.6.0.  Earlier","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":2207,"byte_end":2285,"line_start":82,"line_end":82,"column_start":1,"column_end":79}},{"value":"/ versions of cargo will simply ignore the directive.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":2286,"byte_end":2341,"line_start":83,"line_end":83,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":2737,"byte_end":2746,"line_start":95,"line_end":95,"column_start":8,"column_end":17},"name":"rerun_env","qualname":"::rerun_env","value":"pub fn rerun_env(&str)","parent":null,"children":[],"decl_id":null,"docs":" Writes a line telling Cargo to rerun the build script if the environment\n variable `var` changes.","sig":null,"attributes":[{"value":"/ Writes a line telling Cargo to rerun the build script if the environment","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":2426,"byte_end":2502,"line_start":88,"line_end":88,"column_start":1,"column_end":77}},{"value":"/ variable `var` changes.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":2503,"byte_end":2530,"line_start":89,"line_end":89,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":2531,"byte_end":2534,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ This looks like: `cargo:rerun-if-env-changed=VAR`","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":2535,"byte_end":2588,"line_start":91,"line_end":91,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":2589,"byte_end":2592,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ This requires at least cargo 0.21.0, corresponding to rustc 1.20.0.  Earlier","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":2593,"byte_end":2673,"line_start":93,"line_end":93,"column_start":1,"column_end":81}},{"value":"/ versions of cargo will simply ignore the directive.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":2674,"byte_end":2729,"line_start":94,"line_end":94,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":2929,"byte_end":2932,"line_start":104,"line_end":104,"column_start":8,"column_end":11},"name":"new","qualname":"::new","value":"pub fn new() -> AutoCfg","parent":null,"children":[],"decl_id":null,"docs":" Create a new `AutoCfg` instance.","sig":null,"attributes":[{"value":"/ Create a new `AutoCfg` instance.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":2815,"byte_end":2851,"line_start":99,"line_end":99,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":2852,"byte_end":2855,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":2856,"byte_end":2868,"line_start":101,"line_end":101,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":2869,"byte_end":2872,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Panics if `AutoCfg::new()` returns an error.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":2873,"byte_end":2921,"line_start":103,"line_end":103,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":3304,"byte_end":3307,"line_start":117,"line_end":117,"column_start":12,"column_end":15},"name":"new","qualname":"<AutoCfg>::new","value":"pub fn new() -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `AutoCfg` instance.","sig":null,"attributes":[{"value":"/ Create a new `AutoCfg` instance.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":2998,"byte_end":3034,"line_start":109,"line_end":109,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":3039,"byte_end":3042,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ # Common errors","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":3047,"byte_end":3066,"line_start":111,"line_end":111,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":3071,"byte_end":3074,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ - `rustc` can't be executed, from `RUSTC` or in the `PATH`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":3079,"byte_end":3142,"line_start":113,"line_end":113,"column_start":5,"column_end":68}},{"value":"/ - The version output from `rustc` can't be parsed.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":3147,"byte_end":3201,"line_start":114,"line_end":114,"column_start":5,"column_end":59}},{"value":"/ - `OUT_DIR` is not set in the environment, or is not a writable directory.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":3206,"byte_end":3284,"line_start":115,"line_end":115,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":3289,"byte_end":3292,"line_start":116,"line_end":116,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":3808,"byte_end":3816,"line_start":132,"line_end":132,"column_start":12,"column_end":20},"name":"with_dir","qualname":"<AutoCfg>::with_dir","value":"pub fn with_dir<T: Into<PathBuf>>(T) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `AutoCfg` instance with the specified output directory.","sig":null,"attributes":[{"value":"/ Create a new `AutoCfg` instance with the specified output directory.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":3504,"byte_end":3576,"line_start":124,"line_end":124,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":3581,"byte_end":3584,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Common errors","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":3589,"byte_end":3608,"line_start":126,"line_end":126,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":3613,"byte_end":3616,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ - `rustc` can't be executed, from `RUSTC` or in the `PATH`.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":3621,"byte_end":3684,"line_start":128,"line_end":128,"column_start":5,"column_end":68}},{"value":"/ - The version output from `rustc` can't be parsed.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":3689,"byte_end":3743,"line_start":129,"line_end":129,"column_start":5,"column_end":59}},{"value":"/ - `dir` is not a writable directory.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":3748,"byte_end":3788,"line_start":130,"line_end":130,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":3793,"byte_end":3796,"line_start":131,"line_end":131,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":5116,"byte_end":5135,"line_start":167,"line_end":167,"column_start":12,"column_end":31},"name":"probe_rustc_version","qualname":"<AutoCfg>::probe_rustc_version","value":"pub fn probe_rustc_version(&Self, usize, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether the current `rustc` reports a version greater than\n or equal to \"`major`.`minor`\".\n","sig":null,"attributes":[{"value":"/ Test whether the current `rustc` reports a version greater than","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":4998,"byte_end":5065,"line_start":165,"line_end":165,"column_start":5,"column_end":72}},{"value":"/ or equal to \"`major`.`minor`\".","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":5070,"byte_end":5104,"line_start":166,"line_end":166,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":5395,"byte_end":5413,"line_start":173,"line_end":173,"column_start":12,"column_end":30},"name":"emit_rustc_version","qualname":"<AutoCfg>::emit_rustc_version","value":"pub fn emit_rustc_version(&Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets a `cfg` value of the form `rustc_major_minor`, like `rustc_1_29`,\n if the current `rustc` is at least that version.\n","sig":null,"attributes":[{"value":"/ Sets a `cfg` value of the form `rustc_major_minor`, like `rustc_1_29`,","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":5252,"byte_end":5326,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ if the current `rustc` is at least that version.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":5331,"byte_end":5383,"line_start":172,"line_end":172,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":6863,"byte_end":6873,"line_start":218,"line_end":218,"column_start":12,"column_end":22},"name":"probe_path","qualname":"<AutoCfg>::probe_path","value":"pub fn probe_path(&Self, &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether the given path can be used.","sig":null,"attributes":[{"value":"/ Tests whether the given path can be used.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":6668,"byte_end":6713,"line_start":211,"line_end":211,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":6718,"byte_end":6721,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ The test code is subject to change, but currently looks like:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":6726,"byte_end":6791,"line_start":213,"line_end":213,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":6796,"byte_end":6799,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":6804,"byte_end":6817,"line_start":215,"line_end":215,"column_start":5,"column_end":18}},{"value":"/ pub use PATH;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":6822,"byte_end":6839,"line_start":216,"line_end":216,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":6844,"byte_end":6851,"line_start":217,"line_end":217,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":7182,"byte_end":7195,"line_start":226,"line_end":226,"column_start":12,"column_end":25},"name":"emit_has_path","qualname":"<AutoCfg>::emit_has_path","value":"pub fn emit_has_path(&Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Emits a config value `has_PATH` if `probe_path` returns true.","sig":null,"attributes":[{"value":"/ Emits a config value `has_PATH` if `probe_path` returns true.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":6980,"byte_end":7045,"line_start":222,"line_end":222,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":7050,"byte_end":7053,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ Any non-identifier characters in the `path` will be replaced with","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":7058,"byte_end":7127,"line_start":224,"line_end":224,"column_start":5,"column_end":74}},{"value":"/ `_` in the generated config value.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":7132,"byte_end":7170,"line_start":225,"line_end":225,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":7398,"byte_end":7411,"line_start":233,"line_end":233,"column_start":12,"column_end":25},"name":"emit_path_cfg","qualname":"<AutoCfg>::emit_path_cfg","value":"pub fn emit_path_cfg(&Self, &str, &str)","parent":null,"children":[],"decl_id":null,"docs":" Emits the given `cfg` value if `probe_path` returns true.\n","sig":null,"attributes":[{"value":"/ Emits the given `cfg` value if `probe_path` returns true.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":7325,"byte_end":7386,"line_start":232,"line_end":232,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":7739,"byte_end":7750,"line_start":246,"line_end":246,"column_start":12,"column_end":23},"name":"probe_trait","qualname":"<AutoCfg>::probe_trait","value":"pub fn probe_trait(&Self, &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether the given trait can be used.","sig":null,"attributes":[{"value":"/ Tests whether the given trait can be used.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":7523,"byte_end":7569,"line_start":239,"line_end":239,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":7574,"byte_end":7577,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ The test code is subject to change, but currently looks like:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":7582,"byte_end":7647,"line_start":241,"line_end":241,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":7652,"byte_end":7655,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":7660,"byte_end":7673,"line_start":243,"line_end":243,"column_start":5,"column_end":18}},{"value":"/ pub trait Probe: TRAIT + Sized {}","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":7678,"byte_end":7715,"line_start":244,"line_end":244,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":7720,"byte_end":7727,"line_start":245,"line_end":245,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":8101,"byte_end":8115,"line_start":255,"line_end":255,"column_start":12,"column_end":26},"name":"emit_has_trait","qualname":"<AutoCfg>::emit_has_trait","value":"pub fn emit_has_trait(&Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Emits a config value `has_TRAIT` if `probe_trait` returns true.","sig":null,"attributes":[{"value":"/ Emits a config value `has_TRAIT` if `probe_trait` returns true.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":7891,"byte_end":7958,"line_start":251,"line_end":251,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":7963,"byte_end":7966,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ Any non-identifier characters in the trait `name` will be replaced with","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":7971,"byte_end":8046,"line_start":253,"line_end":253,"column_start":5,"column_end":80}},{"value":"/ `_` in the generated config value.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":8051,"byte_end":8089,"line_start":254,"line_end":254,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":8320,"byte_end":8334,"line_start":262,"line_end":262,"column_start":12,"column_end":26},"name":"emit_trait_cfg","qualname":"<AutoCfg>::emit_trait_cfg","value":"pub fn emit_trait_cfg(&Self, &str, &str)","parent":null,"children":[],"decl_id":null,"docs":" Emits the given `cfg` value if `probe_trait` returns true.\n","sig":null,"attributes":[{"value":"/ Emits the given `cfg` value if `probe_trait` returns true.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":8246,"byte_end":8308,"line_start":261,"line_end":261,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":8651,"byte_end":8661,"line_start":275,"line_end":275,"column_start":12,"column_end":22},"name":"probe_type","qualname":"<AutoCfg>::probe_type","value":"pub fn probe_type(&Self, &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether the given type can be used.","sig":null,"attributes":[{"value":"/ Tests whether the given type can be used.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":8447,"byte_end":8492,"line_start":268,"line_end":268,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":8497,"byte_end":8500,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ The test code is subject to change, but currently looks like:","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":8505,"byte_end":8570,"line_start":270,"line_end":270,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":8575,"byte_end":8578,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":8583,"byte_end":8596,"line_start":272,"line_end":272,"column_start":5,"column_end":18}},{"value":"/ pub type Probe = TYPE;","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":8601,"byte_end":8627,"line_start":273,"line_end":273,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":8632,"byte_end":8639,"line_start":274,"line_end":274,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":8997,"byte_end":9010,"line_start":284,"line_end":284,"column_start":12,"column_end":25},"name":"emit_has_type","qualname":"<AutoCfg>::emit_has_type","value":"pub fn emit_has_type(&Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Emits a config value `has_TYPE` if `probe_type` returns true.","sig":null,"attributes":[{"value":"/ Emits a config value `has_TYPE` if `probe_type` returns true.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":8790,"byte_end":8855,"line_start":280,"line_end":280,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":8860,"byte_end":8863,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Any non-identifier characters in the type `name` will be replaced with","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":8868,"byte_end":8942,"line_start":282,"line_end":282,"column_start":5,"column_end":79}},{"value":"/ `_` in the generated config value.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":8947,"byte_end":8985,"line_start":283,"line_end":283,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":9213,"byte_end":9226,"line_start":291,"line_end":291,"column_start":12,"column_end":25},"name":"emit_type_cfg","qualname":"<AutoCfg>::emit_type_cfg","value":"pub fn emit_type_cfg(&Self, &str, &str)","parent":null,"children":[],"decl_id":null,"docs":" Emits the given `cfg` value if `probe_type` returns true.\n","sig":null,"attributes":[{"value":"/ Emits the given `cfg` value if `probe_type` returns true.","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":9140,"byte_end":9201,"line_start":290,"line_end":290,"column_start":5,"column_end":66}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\error.rs","byte_start":9718,"byte_end":9723,"line_start":13,"line_end":13,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\error.rs","byte_start":10086,"byte_end":10091,"line_start":28,"line_end":28,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\version.rs","byte_start":11217,"byte_end":11224,"line_start":15,"line_end":15,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":2984,"byte_end":2991,"line_start":108,"line_end":108,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\error.rs","byte_start":9718,"byte_end":9723,"line_start":13,"line_end":13,"column_start":23,"column_end":28},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":70},"to":{"krate":1,"index":1725}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\error.rs","byte_start":10086,"byte_end":10091,"line_start":28,"line_end":28,"column_start":23,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":70},"to":{"krate":2,"index":6611}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\version.rs","byte_start":11217,"byte_end":11224,"line_start":15,"line_end":15,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":89},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Thai Nguyen\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-0.1.4\\src\\lib.rs","byte_start":2984,"byte_end":2991,"line_start":108,"line_end":108,"column_start":6,"column_end":13},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":120},"to":{"krate":4294967295,"index":4294967295}}]}